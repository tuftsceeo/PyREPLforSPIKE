{"ast":null,"code":"// Just get the stats, and then don't do anything.\n// You can't really \"read\" from a socket.  You \"connect\" to it.\n// Mostly, this is here so that reading a dir with a socket in it\n// doesn't blow up.\nmodule.exports = SocketReader;\n\nvar inherits = require('inherits');\n\nvar Reader = require('./reader.js');\n\ninherits(SocketReader, Reader);\n\nfunction SocketReader(props) {\n  var self = this;\n\n  if (!(self instanceof SocketReader)) {\n    throw new Error('SocketReader must be called as constructor.');\n  }\n\n  if (!(props.type === 'Socket' && props.Socket)) {\n    throw new Error('Non-socket type ' + props.type);\n  }\n\n  Reader.call(self, props);\n}\n\nSocketReader.prototype._read = function () {\n  var self = this;\n  if (self._paused) return; // basically just a no-op, since we got all the info we have\n  // from the _stat method\n\n  if (!self._ended) {\n    self.emit('end');\n    self.emit('close');\n    self._ended = true;\n  }\n};","map":{"version":3,"names":["module","exports","SocketReader","inherits","require","Reader","props","self","Error","type","Socket","call","prototype","_read","_paused","_ended","emit"],"sources":["C:/Users/gsess/node_modules/fstream/lib/socket-reader.js"],"sourcesContent":["// Just get the stats, and then don't do anything.\n// You can't really \"read\" from a socket.  You \"connect\" to it.\n// Mostly, this is here so that reading a dir with a socket in it\n// doesn't blow up.\n\nmodule.exports = SocketReader\n\nvar inherits = require('inherits')\nvar Reader = require('./reader.js')\n\ninherits(SocketReader, Reader)\n\nfunction SocketReader (props) {\n  var self = this\n  if (!(self instanceof SocketReader)) {\n    throw new Error('SocketReader must be called as constructor.')\n  }\n\n  if (!(props.type === 'Socket' && props.Socket)) {\n    throw new Error('Non-socket type ' + props.type)\n  }\n\n  Reader.call(self, props)\n}\n\nSocketReader.prototype._read = function () {\n  var self = this\n  if (self._paused) return\n  // basically just a no-op, since we got all the info we have\n  // from the _stat method\n  if (!self._ended) {\n    self.emit('end')\n    self.emit('close')\n    self._ended = true\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAApB;;AAEAD,QAAQ,CAACD,YAAD,EAAeG,MAAf,CAAR;;AAEA,SAASH,YAAT,CAAuBI,KAAvB,EAA8B;EAC5B,IAAIC,IAAI,GAAG,IAAX;;EACA,IAAI,EAAEA,IAAI,YAAYL,YAAlB,CAAJ,EAAqC;IACnC,MAAM,IAAIM,KAAJ,CAAU,6CAAV,CAAN;EACD;;EAED,IAAI,EAAEF,KAAK,CAACG,IAAN,KAAe,QAAf,IAA2BH,KAAK,CAACI,MAAnC,CAAJ,EAAgD;IAC9C,MAAM,IAAIF,KAAJ,CAAU,qBAAqBF,KAAK,CAACG,IAArC,CAAN;EACD;;EAEDJ,MAAM,CAACM,IAAP,CAAYJ,IAAZ,EAAkBD,KAAlB;AACD;;AAEDJ,YAAY,CAACU,SAAb,CAAuBC,KAAvB,GAA+B,YAAY;EACzC,IAAIN,IAAI,GAAG,IAAX;EACA,IAAIA,IAAI,CAACO,OAAT,EAAkB,OAFuB,CAGzC;EACA;;EACA,IAAI,CAACP,IAAI,CAACQ,MAAV,EAAkB;IAChBR,IAAI,CAACS,IAAL,CAAU,KAAV;IACAT,IAAI,CAACS,IAAL,CAAU,OAAV;IACAT,IAAI,CAACQ,MAAL,GAAc,IAAd;EACD;AACF,CAVD"},"metadata":{},"sourceType":"script"}