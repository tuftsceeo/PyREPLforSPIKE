{"ast":null,"code":"\"use strict\";\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('../util'),\n      style = _require.style,\n      clear = _require.clear;\n\nconst _require2 = require('sisteransi'),\n      erase = _require2.erase,\n      cursor = _require2.cursor;\n/**\n * ConfirmPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Boolean} [opts.initial] Default value (true/false)\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.yes] The \"Yes\" label\n * @param {String} [opts.yesOption] The \"Yes\" option when choosing between yes/no\n * @param {String} [opts.no] The \"No\" label\n * @param {String} [opts.noOption] The \"No\" option when choosing between yes/no\n */\n\n\nclass ConfirmPrompt extends Prompt {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(opts);\n    this.msg = opts.message;\n    this.value = opts.initial;\n    this.initialValue = !!opts.initial;\n    this.yesMsg = opts.yes || 'yes';\n    this.yesOption = opts.yesOption || '(Y/n)';\n    this.noMsg = opts.no || 'no';\n    this.noOption = opts.noOption || '(y/N)';\n    this.render();\n  }\n\n  reset() {\n    this.value = this.initialValue;\n    this.fire();\n    this.render();\n  }\n\n  exit() {\n    this.abort();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    this.value = this.value || false;\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  _(c, key) {\n    if (c.toLowerCase() === 'y') {\n      this.value = true;\n      return this.submit();\n    }\n\n    if (c.toLowerCase() === 'n') {\n      this.value = false;\n      return this.submit();\n    }\n\n    return this.bell();\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText, this.out.columns));\n    super.render();\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(this.done), this.done ? this.value ? this.yesMsg : this.noMsg : color.gray(this.initialValue ? this.yesOption : this.noOption)].join(' ');\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n\n}\n\nmodule.exports = ConfirmPrompt;","map":{"version":3,"names":["color","require","Prompt","_require","style","clear","_require2","erase","cursor","ConfirmPrompt","constructor","opts","msg","message","value","initial","initialValue","yesMsg","yes","yesOption","noMsg","no","noOption","render","reset","fire","exit","abort","done","aborted","out","write","close","submit","_","c","key","toLowerCase","bell","closed","firstRender","hide","outputText","columns","symbol","bold","delimiter","gray","join","line","to","module","exports"],"sources":["C:/Users/gsess/node_modules/prompts/dist/elements/confirm.js"],"sourcesContent":["\"use strict\";\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('../util'),\n      style = _require.style,\n      clear = _require.clear;\n\nconst _require2 = require('sisteransi'),\n      erase = _require2.erase,\n      cursor = _require2.cursor;\n/**\n * ConfirmPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Boolean} [opts.initial] Default value (true/false)\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.yes] The \"Yes\" label\n * @param {String} [opts.yesOption] The \"Yes\" option when choosing between yes/no\n * @param {String} [opts.no] The \"No\" label\n * @param {String} [opts.noOption] The \"No\" option when choosing between yes/no\n */\n\n\nclass ConfirmPrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.value = opts.initial;\n    this.initialValue = !!opts.initial;\n    this.yesMsg = opts.yes || 'yes';\n    this.yesOption = opts.yesOption || '(Y/n)';\n    this.noMsg = opts.no || 'no';\n    this.noOption = opts.noOption || '(y/N)';\n    this.render();\n  }\n\n  reset() {\n    this.value = this.initialValue;\n    this.fire();\n    this.render();\n  }\n\n  exit() {\n    this.abort();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    this.value = this.value || false;\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  _(c, key) {\n    if (c.toLowerCase() === 'y') {\n      this.value = true;\n      return this.submit();\n    }\n\n    if (c.toLowerCase() === 'n') {\n      this.value = false;\n      return this.submit();\n    }\n\n    return this.bell();\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText, this.out.columns));\n    super.render();\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(this.done), this.done ? this.value ? this.yesMsg : this.noMsg : color.gray(this.initialValue ? this.yesOption : this.noOption)].join(' ');\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n\n}\n\nmodule.exports = ConfirmPrompt;"],"mappings":"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"},"metadata":{},"sourceType":"script"}