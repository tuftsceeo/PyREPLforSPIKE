{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gsess\\\\Documents\\\\React\\\\repl\\\\src\\\\components\\\\Serial\\\\Serial.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Fab from '@mui/material/Fab';\nimport CableIcon from '@mui/icons-material/Cable';\nimport Tooltip from \"@mui/material/Tooltip\";\n/*\r\n    InitWebSerial\r\n    - Initializes a Web Serial Port and returns the initialized port\r\n    - Returns the port if successful, null otherwise\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet port = null;\nconst CONTROL_C = '\\x03'; // CTRL-C character (ETX character)\n\nconst CONTROL_D = '\\x04'; // CTRL-D character (EOT character)\n\nasync function initWebSerial() {\n  port = await navigator.serial.getPorts();\n  port = await navigator.serial.requestPort({// filters:[filter]\n  }); // wait for the port to open.\n\n  try {\n    await port.open({\n      baudRate: 115200\n    });\n  } catch (er) {\n    console.log(\"%cTuftsCEEO \", \"color: #3ba336;\", er); //await port.close();\n  }\n\n  if (port.readable) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nasync function readPort() {\n  while (port.readable) {\n    const reader = port.readable.getReader();\n\n    try {\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n\n        if (done) {\n          // |reader| has been canceled.\n          break;\n        }\n\n        console.log(value);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      reader.releaseLock();\n    }\n  }\n}\n/*\r\nasync function writeToPort(lines) {\r\n    // Uncessary Error (linter) from encoder definition\r\n    \r\n    // eslint-disable-next-line no-undef\r\n    const encoder = new TextEncoderStream();\r\n\r\n    //const outputDone = encoder.readable.pipeTo(port.writable);\r\n    const outputStream = encoder.writable;\r\n    \r\n    const writer = outputStream.getWriter();\r\n    lines.forEach((line) => {\r\n        console.log('[SEND]', line);\r\n        writer.write(line + '\\n');\r\n    });\r\n    writer.releaseLock();\r\n}\r\n*/\n\n\nasync function writeToPort(lines) {\n  // eslint-disable-next-line no-undef\n  const textEncoder = new TextEncoderStream();\n  const writableStreamClosed = textEncoder.readable.pipeTo(port.writable);\n  const writer = textEncoder.writable.getWriter();\n  lines.forEach(async element => {\n    await writer.write(element);\n  });\n}\n\nasync function startWebSerial() {\n  if (await initWebSerial()) {\n    await writeToPort([CONTROL_C]);\n    await writeToPort(['from spike import PrimeHub, LightMatrix, Button, StatusLight, ForceSensor, MotionSensor, Speaker, ColorSensor, App, DistanceSensor, Motor, MotorPair', 'from spike.control import wait_for_seconds, wait_until, Timer', \"motor_pair = MotorPair('B', 'A')\", \"motor_pair.start(steering=0, speed=-15)\"]);\n    readPort();\n  }\n}\n\nfunction Serial() {\n  _s();\n\n  const [connectText, setConnectText] = useState(\"Connect SPIKE Here: \");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 mx-2\",\n      children: connectText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Connect Device\",\n      placement: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        onClick: () => {\n          startWebSerial();\n        },\n        color: \"warning\",\n        \"aria-label\": \"add\",\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(CableIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Serial, \"3+f/IyzPTWB1xoxbmBmVrvS7FnE=\");\n\n_c = Serial;\nexport default Serial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Serial\");","map":{"version":3,"names":["React","useState","Fab","CableIcon","Tooltip","port","CONTROL_C","CONTROL_D","initWebSerial","navigator","serial","getPorts","requestPort","open","baudRate","er","console","log","readable","readPort","reader","getReader","value","done","read","error","releaseLock","writeToPort","lines","textEncoder","TextEncoderStream","writableStreamClosed","pipeTo","writable","writer","getWriter","forEach","element","write","startWebSerial","Serial","connectText","setConnectText"],"sources":["C:/Users/gsess/Documents/React/repl/src/components/Serial/Serial.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Fab from '@mui/material/Fab';\r\nimport CableIcon from '@mui/icons-material/Cable';\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\n/*\r\n    InitWebSerial\r\n    - Initializes a Web Serial Port and returns the initialized port\r\n    - Returns the port if successful, null otherwise\r\n*/\r\n\r\nlet port = null;\r\n\r\nconst CONTROL_C = '\\x03'; // CTRL-C character (ETX character)\r\nconst CONTROL_D = '\\x04'; // CTRL-D character (EOT character)\r\n\r\nasync function initWebSerial() {\r\n    port = await navigator.serial.getPorts();\r\n\r\n    port = await navigator.serial.requestPort({\r\n        // filters:[filter]\r\n    });\r\n\r\n    // wait for the port to open.\r\n    try {\r\n        await port.open({ baudRate: 115200 });\r\n    }\r\n    catch (er) {\r\n        console.log(\"%cTuftsCEEO \", \"color: #3ba336;\", er);\r\n        //await port.close();\r\n    }\r\n\r\n    if (port.readable) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function readPort() {\r\n    while (port.readable) {\r\n        const reader = port.readable.getReader();\r\n        try {\r\n            while (true) {\r\n            const { value, done } = await reader.read();\r\n            if (done) {\r\n                // |reader| has been canceled.\r\n                break;\r\n            }\r\n            console.log(value);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            reader.releaseLock();\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\nasync function writeToPort(lines) {\r\n    // Uncessary Error (linter) from encoder definition\r\n    \r\n    // eslint-disable-next-line no-undef\r\n    const encoder = new TextEncoderStream();\r\n\r\n    //const outputDone = encoder.readable.pipeTo(port.writable);\r\n    const outputStream = encoder.writable;\r\n    \r\n    const writer = outputStream.getWriter();\r\n    lines.forEach((line) => {\r\n        console.log('[SEND]', line);\r\n        writer.write(line + '\\n');\r\n    });\r\n    writer.releaseLock();\r\n}\r\n*/\r\n\r\nasync function writeToPort(lines) {\r\n    // eslint-disable-next-line no-undef\r\n    const textEncoder = new TextEncoderStream();\r\n    const writableStreamClosed = textEncoder.readable.pipeTo(port.writable);\r\n\r\n    const writer = textEncoder.writable.getWriter();\r\n\r\n    lines.forEach(async (element) => {\r\n        await writer.write(element);\r\n    });\r\n    \r\n}\r\nasync function startWebSerial() {\r\n    if (await initWebSerial()) {\r\n        await writeToPort([CONTROL_C])\r\n        await writeToPort(['from spike import PrimeHub, LightMatrix, Button, StatusLight, ForceSensor, MotionSensor, Speaker, ColorSensor, App, DistanceSensor, Motor, MotorPair', 'from spike.control import wait_for_seconds, wait_until, Timer', \"motor_pair = MotorPair('B', 'A')\", \"motor_pair.start(steering=0, speed=-15)\"])\r\n        \r\n        readPort()\r\n    }\r\n\r\n}\r\n\r\nfunction Serial() {\r\n    const [connectText, setConnectText] = useState(\"Connect SPIKE Here: \");\r\n\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            <p className=\"mt-2 mx-2\">{connectText}</p>\r\n            <Tooltip title=\"Connect Device\" placement=\"right\">\r\n                <Fab onClick={() => {startWebSerial()}} color=\"warning\" aria-label=\"add\" size=\"small\">\r\n                    <CableIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Serial;"],"mappings":"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"},"metadata":{},"sourceType":"module"}