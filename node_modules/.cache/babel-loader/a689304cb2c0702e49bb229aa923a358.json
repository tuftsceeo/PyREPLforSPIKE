{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//   /!\\ DO NOT MODIFY THIS FILE /!\\\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// The only job of create-react-app is to init the repository and then\n// forward all the commands to the local version of create-react-app.\n//\n// If you need to add a new command, please add it to the scripts/ folder.\n//\n// The only reason to modify this file is to add more warnings and\n// troubleshooting information for the `create-react-app` command.\n//\n// Do not make breaking changes! We absolutely don't want to have to\n// tell people to update their global version of create-react-app.\n//\n// Also be careful with new language features.\n// This file must work on Node 10+.\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//   /!\\ DO NOT MODIFY THIS FILE /!\\\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'use strict';\n\nconst https = require('https');\n\nconst chalk = require('chalk');\n\nconst commander = require('commander');\n\nconst dns = require('dns');\n\nconst envinfo = require('envinfo');\n\nconst execSync = require('child_process').execSync;\n\nconst fs = require('fs-extra');\n\nconst hyperquest = require('hyperquest');\n\nconst prompts = require('prompts');\n\nconst os = require('os');\n\nconst path = require('path');\n\nconst semver = require('semver');\n\nconst spawn = require('cross-spawn');\n\nconst tmp = require('tmp');\n\nconst unpack = require('tar-pack').unpack;\n\nconst url = require('url');\n\nconst validateProjectName = require('validate-npm-package-name');\n\nconst packageJson = require('./package.json');\n\nfunction isUsingYarn() {\n  return (process.env.npm_config_user_agent || '').indexOf('yarn') === 0;\n}\n\nlet projectName;\n\nfunction init() {\n  const program = new commander.Command(packageJson.name).version(packageJson.version).arguments('<project-directory>').usage(`${chalk.green('<project-directory>')} [options]`).action(name => {\n    projectName = name;\n  }).option('--verbose', 'print additional logs').option('--info', 'print environment debug info').option('--scripts-version <alternative-package>', 'use a non-standard version of react-scripts').option('--template <path-to-template>', 'specify a template for the created project').option('--use-pnp').allowUnknownOption().on('--help', () => {\n    console.log(`    Only ${chalk.green('<project-directory>')} is required.`);\n    console.log();\n    console.log(`    A custom ${chalk.cyan('--scripts-version')} can be one of:`);\n    console.log(`      - a specific npm version: ${chalk.green('0.8.2')}`);\n    console.log(`      - a specific npm tag: ${chalk.green('@next')}`);\n    console.log(`      - a custom fork published on npm: ${chalk.green('my-react-scripts')}`);\n    console.log(`      - a local path relative to the current working directory: ${chalk.green('file:../my-react-scripts')}`);\n    console.log(`      - a .tgz archive: ${chalk.green('https://mysite.com/my-react-scripts-0.8.2.tgz')}`);\n    console.log(`      - a .tar.gz archive: ${chalk.green('https://mysite.com/my-react-scripts-0.8.2.tar.gz')}`);\n    console.log(`    It is not needed unless you specifically want to use a fork.`);\n    console.log();\n    console.log(`    A custom ${chalk.cyan('--template')} can be one of:`);\n    console.log(`      - a custom template published on npm: ${chalk.green('cra-template-typescript')}`);\n    console.log(`      - a local path relative to the current working directory: ${chalk.green('file:../my-custom-template')}`);\n    console.log(`      - a .tgz archive: ${chalk.green('https://mysite.com/my-custom-template-0.8.2.tgz')}`);\n    console.log(`      - a .tar.gz archive: ${chalk.green('https://mysite.com/my-custom-template-0.8.2.tar.gz')}`);\n    console.log();\n    console.log(`    If you have any problems, do not hesitate to file an issue:`);\n    console.log(`      ${chalk.cyan('https://github.com/facebook/create-react-app/issues/new')}`);\n    console.log();\n  }).parse(process.argv);\n\n  if (program.info) {\n    console.log(chalk.bold('\\nEnvironment Info:'));\n    console.log(`\\n  current version of ${packageJson.name}: ${packageJson.version}`);\n    console.log(`  running from ${__dirname}`);\n    return envinfo.run({\n      System: ['OS', 'CPU'],\n      Binaries: ['Node', 'npm', 'Yarn'],\n      Browsers: ['Chrome', 'Edge', 'Internet Explorer', 'Firefox', 'Safari'],\n      npmPackages: ['react', 'react-dom', 'react-scripts'],\n      npmGlobalPackages: ['create-react-app']\n    }, {\n      duplicates: true,\n      showNotFound: true\n    }).then(console.log);\n  }\n\n  if (typeof projectName === 'undefined') {\n    console.error('Please specify the project directory:');\n    console.log(`  ${chalk.cyan(program.name())} ${chalk.green('<project-directory>')}`);\n    console.log();\n    console.log('For example:');\n    console.log(`  ${chalk.cyan(program.name())} ${chalk.green('my-react-app')}`);\n    console.log();\n    console.log(`Run ${chalk.cyan(`${program.name()} --help`)} to see all options.`);\n    process.exit(1);\n  } // We first check the registry directly via the API, and if that fails, we try\n  // the slower `npm view [package] version` command.\n  //\n  // This is important for users in environments where direct access to npm is\n  // blocked by a firewall, and packages are provided exclusively via a private\n  // registry.\n\n\n  checkForLatestVersion().catch(() => {\n    try {\n      return execSync('npm view create-react-app version').toString().trim();\n    } catch (e) {\n      return null;\n    }\n  }).then(latest => {\n    if (latest && semver.lt(packageJson.version, latest)) {\n      console.log();\n      console.error(chalk.yellow(`You are running \\`create-react-app\\` ${packageJson.version}, which is behind the latest release (${latest}).\\n\\n` + 'We recommend always using the latest version of create-react-app if possible.'));\n      console.log();\n      console.log('The latest instructions for creating a new app can be found here:\\n' + 'https://create-react-app.dev/docs/getting-started/');\n      console.log();\n    } else {\n      const useYarn = isUsingYarn();\n      createApp(projectName, program.verbose, program.scriptsVersion, program.template, useYarn, program.usePnp);\n    }\n  });\n}\n\nfunction createApp(name, verbose, version, template, useYarn, usePnp) {\n  const unsupportedNodeVersion = !semver.satisfies( // Coerce strings with metadata (i.e. `15.0.0-nightly`).\n  semver.coerce(process.version), '>=14');\n\n  if (unsupportedNodeVersion) {\n    console.log(chalk.yellow(`You are using Node ${process.version} so the project will be bootstrapped with an old unsupported version of tools.\\n\\n` + `Please update to Node 14 or higher for a better, fully supported experience.\\n`)); // Fall back to latest supported react-scripts on Node 4\n\n    version = 'react-scripts@0.9.x';\n  }\n\n  const root = path.resolve(name);\n  const appName = path.basename(root);\n  checkAppName(appName);\n  fs.ensureDirSync(name);\n\n  if (!isSafeToCreateProjectIn(root, name)) {\n    process.exit(1);\n  }\n\n  console.log();\n  console.log(`Creating a new React app in ${chalk.green(root)}.`);\n  console.log();\n  const packageJson = {\n    name: appName,\n    version: '0.1.0',\n    private: true\n  };\n  fs.writeFileSync(path.join(root, 'package.json'), JSON.stringify(packageJson, null, 2) + os.EOL);\n  const originalDirectory = process.cwd();\n  process.chdir(root);\n\n  if (!useYarn && !checkThatNpmCanReadCwd()) {\n    process.exit(1);\n  }\n\n  if (!useYarn) {\n    const npmInfo = checkNpmVersion();\n\n    if (!npmInfo.hasMinNpm) {\n      if (npmInfo.npmVersion) {\n        console.log(chalk.yellow(`You are using npm ${npmInfo.npmVersion} so the project will be bootstrapped with an old unsupported version of tools.\\n\\n` + `Please update to npm 6 or higher for a better, fully supported experience.\\n`));\n      } // Fall back to latest supported react-scripts for npm 3\n\n\n      version = 'react-scripts@0.9.x';\n    }\n  } else if (usePnp) {\n    const yarnInfo = checkYarnVersion();\n\n    if (yarnInfo.yarnVersion) {\n      if (!yarnInfo.hasMinYarnPnp) {\n        console.log(chalk.yellow(`You are using Yarn ${yarnInfo.yarnVersion} together with the --use-pnp flag, but Plug'n'Play is only supported starting from the 1.12 release.\\n\\n` + `Please update to Yarn 1.12 or higher for a better, fully supported experience.\\n`)); // 1.11 had an issue with webpack-dev-middleware, so better not use PnP with it (never reached stable, but still)\n\n        usePnp = false;\n      }\n\n      if (!yarnInfo.hasMaxYarnPnp) {\n        console.log(chalk.yellow('The --use-pnp flag is no longer necessary with yarn 2 and will be deprecated and removed in a future release.\\n')); // 2 supports PnP by default and breaks when trying to use the flag\n\n        usePnp = false;\n      }\n    }\n  }\n\n  run(root, appName, version, verbose, originalDirectory, template, useYarn, usePnp);\n}\n\nfunction install(root, useYarn, usePnp, dependencies, verbose, isOnline) {\n  return new Promise((resolve, reject) => {\n    let command;\n    let args;\n\n    if (useYarn) {\n      command = 'yarnpkg';\n      args = ['add', '--exact'];\n\n      if (!isOnline) {\n        args.push('--offline');\n      }\n\n      if (usePnp) {\n        args.push('--enable-pnp');\n      }\n\n      [].push.apply(args, dependencies); // Explicitly set cwd() to work around issues like\n      // https://github.com/facebook/create-react-app/issues/3326.\n      // Unfortunately we can only do this for Yarn because npm support for\n      // equivalent --prefix flag doesn't help with this issue.\n      // This is why for npm, we run checkThatNpmCanReadCwd() early instead.\n\n      args.push('--cwd');\n      args.push(root);\n\n      if (!isOnline) {\n        console.log(chalk.yellow('You appear to be offline.'));\n        console.log(chalk.yellow('Falling back to the local Yarn cache.'));\n        console.log();\n      }\n    } else {\n      command = 'npm';\n      args = ['install', '--no-audit', // https://github.com/facebook/create-react-app/issues/11174\n      '--save', '--save-exact', '--loglevel', 'error'].concat(dependencies);\n\n      if (usePnp) {\n        console.log(chalk.yellow(\"NPM doesn't support PnP.\"));\n        console.log(chalk.yellow('Falling back to the regular installs.'));\n        console.log();\n      }\n    }\n\n    if (verbose) {\n      args.push('--verbose');\n    }\n\n    const child = spawn(command, args, {\n      stdio: 'inherit'\n    });\n    child.on('close', code => {\n      if (code !== 0) {\n        reject({\n          command: `${command} ${args.join(' ')}`\n        });\n        return;\n      }\n\n      resolve();\n    });\n  });\n}\n\nfunction run(root, appName, version, verbose, originalDirectory, template, useYarn, usePnp) {\n  Promise.all([getInstallPackage(version, originalDirectory), getTemplateInstallPackage(template, originalDirectory)]).then(_ref => {\n    let [packageToInstall, templateToInstall] = _ref;\n    const allDependencies = ['react', 'react-dom', packageToInstall];\n    console.log('Installing packages. This might take a couple of minutes.');\n    Promise.all([getPackageInfo(packageToInstall), getPackageInfo(templateToInstall)]).then(_ref2 => {\n      let [packageInfo, templateInfo] = _ref2;\n      return checkIfOnline(useYarn).then(isOnline => ({\n        isOnline,\n        packageInfo,\n        templateInfo\n      }));\n    }).then(_ref3 => {\n      let {\n        isOnline,\n        packageInfo,\n        templateInfo\n      } = _ref3;\n      let packageVersion = semver.coerce(packageInfo.version);\n      const templatesVersionMinimum = '3.3.0'; // Assume compatibility if we can't test the version.\n\n      if (!semver.valid(packageVersion)) {\n        packageVersion = templatesVersionMinimum;\n      } // Only support templates when used alongside new react-scripts versions.\n\n\n      const supportsTemplates = semver.gte(packageVersion, templatesVersionMinimum);\n\n      if (supportsTemplates) {\n        allDependencies.push(templateToInstall);\n      } else if (template) {\n        console.log('');\n        console.log(`The ${chalk.cyan(packageInfo.name)} version you're using ${packageInfo.name === 'react-scripts' ? 'is not' : 'may not be'} compatible with the ${chalk.cyan('--template')} option.`);\n        console.log('');\n      }\n\n      console.log(`Installing ${chalk.cyan('react')}, ${chalk.cyan('react-dom')}, and ${chalk.cyan(packageInfo.name)}${supportsTemplates ? ` with ${chalk.cyan(templateInfo.name)}` : ''}...`);\n      console.log();\n      return install(root, useYarn, usePnp, allDependencies, verbose, isOnline).then(() => ({\n        packageInfo,\n        supportsTemplates,\n        templateInfo\n      }));\n    }).then(async _ref4 => {\n      let {\n        packageInfo,\n        supportsTemplates,\n        templateInfo\n      } = _ref4;\n      const packageName = packageInfo.name;\n      const templateName = supportsTemplates ? templateInfo.name : undefined;\n      checkNodeVersion(packageName);\n      setCaretRangeForRuntimeDeps(packageName);\n      const pnpPath = path.resolve(process.cwd(), '.pnp.js');\n      const nodeArgs = fs.existsSync(pnpPath) ? ['--require', pnpPath] : [];\n      await executeNodeScript({\n        cwd: process.cwd(),\n        args: nodeArgs\n      }, [root, appName, verbose, originalDirectory, templateName], `\n        const init = require('${packageName}/scripts/init.js');\n        init.apply(null, JSON.parse(process.argv[1]));\n      `);\n\n      if (version === 'react-scripts@0.9.x') {\n        console.log(chalk.yellow(`\\nNote: the project was bootstrapped with an old unsupported version of tools.\\n` + `Please update to Node >=14 and npm >=6 to get supported tools in new projects.\\n`));\n      }\n    }).catch(reason => {\n      console.log();\n      console.log('Aborting installation.');\n\n      if (reason.command) {\n        console.log(`  ${chalk.cyan(reason.command)} has failed.`);\n      } else {\n        console.log(chalk.red('Unexpected error. Please report it as a bug:'));\n        console.log(reason);\n      }\n\n      console.log(); // On 'exit' we will delete these files from target directory.\n\n      const knownGeneratedFiles = ['package.json', 'node_modules'];\n      const currentFiles = fs.readdirSync(path.join(root));\n      currentFiles.forEach(file => {\n        knownGeneratedFiles.forEach(fileToMatch => {\n          // This removes all knownGeneratedFiles.\n          if (file === fileToMatch) {\n            console.log(`Deleting generated file... ${chalk.cyan(file)}`);\n            fs.removeSync(path.join(root, file));\n          }\n        });\n      });\n      const remainingFiles = fs.readdirSync(path.join(root));\n\n      if (!remainingFiles.length) {\n        // Delete target folder if empty\n        console.log(`Deleting ${chalk.cyan(`${appName}/`)} from ${chalk.cyan(path.resolve(root, '..'))}`);\n        process.chdir(path.resolve(root, '..'));\n        fs.removeSync(path.join(root));\n      }\n\n      console.log('Done.');\n      process.exit(1);\n    });\n  });\n}\n\nfunction getInstallPackage(version, originalDirectory) {\n  let packageToInstall = 'react-scripts';\n  const validSemver = semver.valid(version);\n\n  if (validSemver) {\n    packageToInstall += `@${validSemver}`;\n  } else if (version) {\n    if (version[0] === '@' && !version.includes('/')) {\n      packageToInstall += version;\n    } else if (version.match(/^file:/)) {\n      packageToInstall = `file:${path.resolve(originalDirectory, version.match(/^file:(.*)?$/)[1])}`;\n    } else {\n      // for tar.gz or alternative paths\n      packageToInstall = version;\n    }\n  }\n\n  const scriptsToWarn = [{\n    name: 'react-scripts-ts',\n    message: chalk.yellow(`The react-scripts-ts package is deprecated. TypeScript is now supported natively in Create React App. You can use the ${chalk.green('--template typescript')} option instead when generating your app to include TypeScript support. Would you like to continue using react-scripts-ts?`)\n  }];\n\n  for (const script of scriptsToWarn) {\n    if (packageToInstall.startsWith(script.name)) {\n      return prompts({\n        type: 'confirm',\n        name: 'useScript',\n        message: script.message,\n        initial: false\n      }).then(answer => {\n        if (!answer.useScript) {\n          process.exit(0);\n        }\n\n        return packageToInstall;\n      });\n    }\n  }\n\n  return Promise.resolve(packageToInstall);\n}\n\nfunction getTemplateInstallPackage(template, originalDirectory) {\n  let templateToInstall = 'cra-template';\n\n  if (template) {\n    if (template.match(/^file:/)) {\n      templateToInstall = `file:${path.resolve(originalDirectory, template.match(/^file:(.*)?$/)[1])}`;\n    } else if (template.includes('://') || template.match(/^.+\\.(tgz|tar\\.gz)$/)) {\n      // for tar.gz or alternative paths\n      templateToInstall = template;\n    } else {\n      // Add prefix 'cra-template-' to non-prefixed templates, leaving any\n      // @scope/ and @version intact.\n      const packageMatch = template.match(/^(@[^/]+\\/)?([^@]+)?(@.+)?$/);\n      const scope = packageMatch[1] || '';\n      const templateName = packageMatch[2] || '';\n      const version = packageMatch[3] || '';\n\n      if (templateName === templateToInstall || templateName.startsWith(`${templateToInstall}-`)) {\n        // Covers:\n        // - cra-template\n        // - @SCOPE/cra-template\n        // - cra-template-NAME\n        // - @SCOPE/cra-template-NAME\n        templateToInstall = `${scope}${templateName}${version}`;\n      } else if (version && !scope && !templateName) {\n        // Covers using @SCOPE only\n        templateToInstall = `${version}/${templateToInstall}`;\n      } else {\n        // Covers templates without the `cra-template` prefix:\n        // - NAME\n        // - @SCOPE/NAME\n        templateToInstall = `${scope}${templateToInstall}-${templateName}${version}`;\n      }\n    }\n  }\n\n  return Promise.resolve(templateToInstall);\n}\n\nfunction getTemporaryDirectory() {\n  return new Promise((resolve, reject) => {\n    // Unsafe cleanup lets us recursively delete the directory if it contains\n    // contents; by default it only allows removal if it's empty\n    tmp.dir({\n      unsafeCleanup: true\n    }, (err, tmpdir, callback) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({\n          tmpdir: tmpdir,\n          cleanup: () => {\n            try {\n              callback();\n            } catch (ignored) {// Callback might throw and fail, since it's a temp directory the\n              // OS will clean it up eventually...\n            }\n          }\n        });\n      }\n    });\n  });\n}\n\nfunction extractStream(stream, dest) {\n  return new Promise((resolve, reject) => {\n    stream.pipe(unpack(dest, err => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(dest);\n      }\n    }));\n  });\n} // Extract package name from tarball url or path.\n\n\nfunction getPackageInfo(installPackage) {\n  if (installPackage.match(/^.+\\.(tgz|tar\\.gz)$/)) {\n    return getTemporaryDirectory().then(obj => {\n      let stream;\n\n      if (/^http/.test(installPackage)) {\n        stream = hyperquest(installPackage);\n      } else {\n        stream = fs.createReadStream(installPackage);\n      }\n\n      return extractStream(stream, obj.tmpdir).then(() => obj);\n    }).then(obj => {\n      const {\n        name,\n        version\n      } = require(path.join(obj.tmpdir, 'package.json'));\n\n      obj.cleanup();\n      return {\n        name,\n        version\n      };\n    }).catch(err => {\n      // The package name could be with or without semver version, e.g. react-scripts-0.2.0-alpha.1.tgz\n      // However, this function returns package name only without semver version.\n      console.log(`Could not extract the package name from the archive: ${err.message}`);\n      const assumedProjectName = installPackage.match(/^.+\\/(.+?)(?:-\\d+.+)?\\.(tgz|tar\\.gz)$/)[1];\n      console.log(`Based on the filename, assuming it is \"${chalk.cyan(assumedProjectName)}\"`);\n      return Promise.resolve({\n        name: assumedProjectName\n      });\n    });\n  } else if (installPackage.startsWith('git+')) {\n    // Pull package name out of git urls e.g:\n    // git+https://github.com/mycompany/react-scripts.git\n    // git+ssh://github.com/mycompany/react-scripts.git#v1.2.3\n    return Promise.resolve({\n      name: installPackage.match(/([^/]+)\\.git(#.*)?$/)[1]\n    });\n  } else if (installPackage.match(/.+@/)) {\n    // Do not match @scope/ when stripping off @version or @tag\n    return Promise.resolve({\n      name: installPackage.charAt(0) + installPackage.substr(1).split('@')[0],\n      version: installPackage.split('@')[1]\n    });\n  } else if (installPackage.match(/^file:/)) {\n    const installPackagePath = installPackage.match(/^file:(.*)?$/)[1];\n\n    const {\n      name,\n      version\n    } = require(path.join(installPackagePath, 'package.json'));\n\n    return Promise.resolve({\n      name,\n      version\n    });\n  }\n\n  return Promise.resolve({\n    name: installPackage\n  });\n}\n\nfunction checkNpmVersion() {\n  let hasMinNpm = false;\n  let npmVersion = null;\n\n  try {\n    npmVersion = execSync('npm --version').toString().trim();\n    hasMinNpm = semver.gte(npmVersion, '6.0.0');\n  } catch (err) {// ignore\n  }\n\n  return {\n    hasMinNpm: hasMinNpm,\n    npmVersion: npmVersion\n  };\n}\n\nfunction checkYarnVersion() {\n  const minYarnPnp = '1.12.0';\n  const maxYarnPnp = '2.0.0';\n  let hasMinYarnPnp = false;\n  let hasMaxYarnPnp = false;\n  let yarnVersion = null;\n\n  try {\n    yarnVersion = execSync('yarnpkg --version').toString().trim();\n\n    if (semver.valid(yarnVersion)) {\n      hasMinYarnPnp = semver.gte(yarnVersion, minYarnPnp);\n      hasMaxYarnPnp = semver.lt(yarnVersion, maxYarnPnp);\n    } else {\n      // Handle non-semver compliant yarn version strings, which yarn currently\n      // uses for nightly builds. The regex truncates anything after the first\n      // dash. See #5362.\n      const trimmedYarnVersionMatch = /^(.+?)[-+].+$/.exec(yarnVersion);\n\n      if (trimmedYarnVersionMatch) {\n        const trimmedYarnVersion = trimmedYarnVersionMatch.pop();\n        hasMinYarnPnp = semver.gte(trimmedYarnVersion, minYarnPnp);\n        hasMaxYarnPnp = semver.lt(trimmedYarnVersion, maxYarnPnp);\n      }\n    }\n  } catch (err) {// ignore\n  }\n\n  return {\n    hasMinYarnPnp: hasMinYarnPnp,\n    hasMaxYarnPnp: hasMaxYarnPnp,\n    yarnVersion: yarnVersion\n  };\n}\n\nfunction checkNodeVersion(packageName) {\n  const packageJsonPath = path.resolve(process.cwd(), 'node_modules', packageName, 'package.json');\n\n  if (!fs.existsSync(packageJsonPath)) {\n    return;\n  }\n\n  const packageJson = require(packageJsonPath);\n\n  if (!packageJson.engines || !packageJson.engines.node) {\n    return;\n  }\n\n  if (!semver.satisfies(process.version, packageJson.engines.node)) {\n    console.error(chalk.red('You are running Node %s.\\n' + 'Create React App requires Node %s or higher. \\n' + 'Please update your version of Node.'), process.version, packageJson.engines.node);\n    process.exit(1);\n  }\n}\n\nfunction checkAppName(appName) {\n  const validationResult = validateProjectName(appName);\n\n  if (!validationResult.validForNewPackages) {\n    console.error(chalk.red(`Cannot create a project named ${chalk.green(`\"${appName}\"`)} because of npm naming restrictions:\\n`));\n    [...(validationResult.errors || []), ...(validationResult.warnings || [])].forEach(error => {\n      console.error(chalk.red(`  * ${error}`));\n    });\n    console.error(chalk.red('\\nPlease choose a different project name.'));\n    process.exit(1);\n  } // TODO: there should be a single place that holds the dependencies\n\n\n  const dependencies = ['react', 'react-dom', 'react-scripts'].sort();\n\n  if (dependencies.includes(appName)) {\n    console.error(chalk.red(`Cannot create a project named ${chalk.green(`\"${appName}\"`)} because a dependency with the same name exists.\\n` + `Due to the way npm works, the following names are not allowed:\\n\\n`) + chalk.cyan(dependencies.map(depName => `  ${depName}`).join('\\n')) + chalk.red('\\n\\nPlease choose a different project name.'));\n    process.exit(1);\n  }\n}\n\nfunction makeCaretRange(dependencies, name) {\n  const version = dependencies[name];\n\n  if (typeof version === 'undefined') {\n    console.error(chalk.red(`Missing ${name} dependency in package.json`));\n    process.exit(1);\n  }\n\n  let patchedVersion = `^${version}`;\n\n  if (!semver.validRange(patchedVersion)) {\n    console.error(`Unable to patch ${name} dependency version because version ${chalk.red(version)} will become invalid ${chalk.red(patchedVersion)}`);\n    patchedVersion = version;\n  }\n\n  dependencies[name] = patchedVersion;\n}\n\nfunction setCaretRangeForRuntimeDeps(packageName) {\n  const packagePath = path.join(process.cwd(), 'package.json');\n\n  const packageJson = require(packagePath);\n\n  if (typeof packageJson.dependencies === 'undefined') {\n    console.error(chalk.red('Missing dependencies in package.json'));\n    process.exit(1);\n  }\n\n  const packageVersion = packageJson.dependencies[packageName];\n\n  if (typeof packageVersion === 'undefined') {\n    console.error(chalk.red(`Unable to find ${packageName} in package.json`));\n    process.exit(1);\n  }\n\n  makeCaretRange(packageJson.dependencies, 'react');\n  makeCaretRange(packageJson.dependencies, 'react-dom');\n  fs.writeFileSync(packagePath, JSON.stringify(packageJson, null, 2) + os.EOL);\n} // If project only contains files generated by GH, it’s safe.\n// Also, if project contains remnant error logs from a previous\n// installation, lets remove them now.\n// We also special case IJ-based products .idea because it integrates with CRA:\n// https://github.com/facebook/create-react-app/pull/368#issuecomment-243446094\n\n\nfunction isSafeToCreateProjectIn(root, name) {\n  const validFiles = ['.DS_Store', '.git', '.gitattributes', '.gitignore', '.gitlab-ci.yml', '.hg', '.hgcheck', '.hgignore', '.idea', '.npmignore', '.travis.yml', 'docs', 'LICENSE', 'README.md', 'mkdocs.yml', 'Thumbs.db']; // These files should be allowed to remain on a failed install, but then\n  // silently removed during the next create.\n\n  const errorLogFilePatterns = ['npm-debug.log', 'yarn-error.log', 'yarn-debug.log'];\n\n  const isErrorLog = file => {\n    return errorLogFilePatterns.some(pattern => file.startsWith(pattern));\n  };\n\n  const conflicts = fs.readdirSync(root).filter(file => !validFiles.includes(file)) // IntelliJ IDEA creates module files before CRA is launched\n  .filter(file => !/\\.iml$/.test(file)) // Don't treat log files from previous installation as conflicts\n  .filter(file => !isErrorLog(file));\n\n  if (conflicts.length > 0) {\n    console.log(`The directory ${chalk.green(name)} contains files that could conflict:`);\n    console.log();\n\n    for (const file of conflicts) {\n      try {\n        const stats = fs.lstatSync(path.join(root, file));\n\n        if (stats.isDirectory()) {\n          console.log(`  ${chalk.blue(`${file}/`)}`);\n        } else {\n          console.log(`  ${file}`);\n        }\n      } catch (e) {\n        console.log(`  ${file}`);\n      }\n    }\n\n    console.log();\n    console.log('Either try using a new directory name, or remove the files listed above.');\n    return false;\n  } // Remove any log files from a previous installation.\n\n\n  fs.readdirSync(root).forEach(file => {\n    if (isErrorLog(file)) {\n      fs.removeSync(path.join(root, file));\n    }\n  });\n  return true;\n}\n\nfunction getProxy() {\n  if (process.env.https_proxy) {\n    return process.env.https_proxy;\n  } else {\n    try {\n      // Trying to read https-proxy from .npmrc\n      let httpsProxy = execSync('npm config get https-proxy').toString().trim();\n      return httpsProxy !== 'null' ? httpsProxy : undefined;\n    } catch (e) {\n      return;\n    }\n  }\n} // See https://github.com/facebook/create-react-app/pull/3355\n\n\nfunction checkThatNpmCanReadCwd() {\n  const cwd = process.cwd();\n  let childOutput = null;\n\n  try {\n    // Note: intentionally using spawn over exec since\n    // the problem doesn't reproduce otherwise.\n    // `npm config list` is the only reliable way I could find\n    // to reproduce the wrong path. Just printing process.cwd()\n    // in a Node process was not enough.\n    childOutput = spawn.sync('npm', ['config', 'list']).output.join('');\n  } catch (err) {\n    // Something went wrong spawning node.\n    // Not great, but it means we can't do this check.\n    // We might fail later on, but let's continue.\n    return true;\n  }\n\n  if (typeof childOutput !== 'string') {\n    return true;\n  }\n\n  const lines = childOutput.split('\\n'); // `npm config list` output includes the following line:\n  // \"; cwd = C:\\path\\to\\current\\dir\" (unquoted)\n  // I couldn't find an easier way to get it.\n\n  const prefix = '; cwd = ';\n  const line = lines.find(line => line.startsWith(prefix));\n\n  if (typeof line !== 'string') {\n    // Fail gracefully. They could remove it.\n    return true;\n  }\n\n  const npmCWD = line.substring(prefix.length);\n\n  if (npmCWD === cwd) {\n    return true;\n  }\n\n  console.error(chalk.red(`Could not start an npm process in the right directory.\\n\\n` + `The current directory is: ${chalk.bold(cwd)}\\n` + `However, a newly started npm process runs in: ${chalk.bold(npmCWD)}\\n\\n` + `This is probably caused by a misconfigured system terminal shell.`));\n\n  if (process.platform === 'win32') {\n    console.error(chalk.red(`On Windows, this can usually be fixed by running:\\n\\n`) + `  ${chalk.cyan('reg')} delete \"HKCU\\\\Software\\\\Microsoft\\\\Command Processor\" /v AutoRun /f\\n` + `  ${chalk.cyan('reg')} delete \"HKLM\\\\Software\\\\Microsoft\\\\Command Processor\" /v AutoRun /f\\n\\n` + chalk.red(`Try to run the above two lines in the terminal.\\n`) + chalk.red(`To learn more about this problem, read: https://blogs.msdn.microsoft.com/oldnewthing/20071121-00/?p=24433/`));\n  }\n\n  return false;\n}\n\nfunction checkIfOnline(useYarn) {\n  if (!useYarn) {\n    // Don't ping the Yarn registry.\n    // We'll just assume the best case.\n    return Promise.resolve(true);\n  }\n\n  return new Promise(resolve => {\n    dns.lookup('registry.yarnpkg.com', err => {\n      let proxy;\n\n      if (err != null && (proxy = getProxy())) {\n        // If a proxy is defined, we likely can't resolve external hostnames.\n        // Try to resolve the proxy name as an indication of a connection.\n        dns.lookup(url.parse(proxy).hostname, proxyErr => {\n          resolve(proxyErr == null);\n        });\n      } else {\n        resolve(err == null);\n      }\n    });\n  });\n}\n\nfunction executeNodeScript(_ref5, data, source) {\n  let {\n    cwd,\n    args\n  } = _ref5;\n  return new Promise((resolve, reject) => {\n    const child = spawn(process.execPath, [...args, '-e', source, '--', JSON.stringify(data)], {\n      cwd,\n      stdio: 'inherit'\n    });\n    child.on('close', code => {\n      if (code !== 0) {\n        reject({\n          command: `node ${args.join(' ')}`\n        });\n        return;\n      }\n\n      resolve();\n    });\n  });\n}\n\nfunction checkForLatestVersion() {\n  return new Promise((resolve, reject) => {\n    https.get('https://registry.npmjs.org/-/package/create-react-app/dist-tags', res => {\n      if (res.statusCode === 200) {\n        let body = '';\n        res.on('data', data => body += data);\n        res.on('end', () => {\n          resolve(JSON.parse(body).latest);\n        });\n      } else {\n        reject();\n      }\n    }).on('error', () => {\n      reject();\n    });\n  });\n}\n\nmodule.exports = {\n  init,\n  getTemplateInstallPackage\n};","map":{"version":3,"names":["https","require","chalk","commander","dns","envinfo","execSync","fs","hyperquest","prompts","os","path","semver","spawn","tmp","unpack","url","validateProjectName","packageJson","isUsingYarn","process","env","npm_config_user_agent","indexOf","projectName","init","program","Command","name","version","arguments","usage","green","action","option","allowUnknownOption","on","console","log","cyan","parse","argv","info","bold","__dirname","run","System","Binaries","Browsers","npmPackages","npmGlobalPackages","duplicates","showNotFound","then","error","exit","checkForLatestVersion","catch","toString","trim","e","latest","lt","yellow","useYarn","createApp","verbose","scriptsVersion","template","usePnp","unsupportedNodeVersion","satisfies","coerce","root","resolve","appName","basename","checkAppName","ensureDirSync","isSafeToCreateProjectIn","private","writeFileSync","join","JSON","stringify","EOL","originalDirectory","cwd","chdir","checkThatNpmCanReadCwd","npmInfo","checkNpmVersion","hasMinNpm","npmVersion","yarnInfo","checkYarnVersion","yarnVersion","hasMinYarnPnp","hasMaxYarnPnp","install","dependencies","isOnline","Promise","reject","command","args","push","apply","concat","child","stdio","code","all","getInstallPackage","getTemplateInstallPackage","packageToInstall","templateToInstall","allDependencies","getPackageInfo","packageInfo","templateInfo","checkIfOnline","packageVersion","templatesVersionMinimum","valid","supportsTemplates","gte","packageName","templateName","undefined","checkNodeVersion","setCaretRangeForRuntimeDeps","pnpPath","nodeArgs","existsSync","executeNodeScript","reason","red","knownGeneratedFiles","currentFiles","readdirSync","forEach","file","fileToMatch","removeSync","remainingFiles","length","validSemver","includes","match","scriptsToWarn","message","script","startsWith","type","initial","answer","useScript","packageMatch","scope","getTemporaryDirectory","dir","unsafeCleanup","err","tmpdir","callback","cleanup","ignored","extractStream","stream","dest","pipe","installPackage","obj","test","createReadStream","assumedProjectName","charAt","substr","split","installPackagePath","minYarnPnp","maxYarnPnp","trimmedYarnVersionMatch","exec","trimmedYarnVersion","pop","packageJsonPath","engines","node","validationResult","validForNewPackages","errors","warnings","sort","map","depName","makeCaretRange","patchedVersion","validRange","packagePath","validFiles","errorLogFilePatterns","isErrorLog","some","pattern","conflicts","filter","stats","lstatSync","isDirectory","blue","getProxy","https_proxy","httpsProxy","childOutput","sync","output","lines","prefix","line","find","npmCWD","substring","platform","lookup","proxy","hostname","proxyErr","data","source","execPath","get","res","statusCode","body","module","exports"],"sources":["C:/Users/gsess/node_modules/create-react-app/createReactApp.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//   /!\\ DO NOT MODIFY THIS FILE /!\\\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// The only job of create-react-app is to init the repository and then\n// forward all the commands to the local version of create-react-app.\n//\n// If you need to add a new command, please add it to the scripts/ folder.\n//\n// The only reason to modify this file is to add more warnings and\n// troubleshooting information for the `create-react-app` command.\n//\n// Do not make breaking changes! We absolutely don't want to have to\n// tell people to update their global version of create-react-app.\n//\n// Also be careful with new language features.\n// This file must work on Node 10+.\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//   /!\\ DO NOT MODIFY THIS FILE /!\\\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n'use strict';\n\nconst https = require('https');\nconst chalk = require('chalk');\nconst commander = require('commander');\nconst dns = require('dns');\nconst envinfo = require('envinfo');\nconst execSync = require('child_process').execSync;\nconst fs = require('fs-extra');\nconst hyperquest = require('hyperquest');\nconst prompts = require('prompts');\nconst os = require('os');\nconst path = require('path');\nconst semver = require('semver');\nconst spawn = require('cross-spawn');\nconst tmp = require('tmp');\nconst unpack = require('tar-pack').unpack;\nconst url = require('url');\nconst validateProjectName = require('validate-npm-package-name');\n\nconst packageJson = require('./package.json');\n\nfunction isUsingYarn() {\n  return (process.env.npm_config_user_agent || '').indexOf('yarn') === 0;\n}\n\nlet projectName;\n\nfunction init() {\n  const program = new commander.Command(packageJson.name)\n    .version(packageJson.version)\n    .arguments('<project-directory>')\n    .usage(`${chalk.green('<project-directory>')} [options]`)\n    .action(name => {\n      projectName = name;\n    })\n    .option('--verbose', 'print additional logs')\n    .option('--info', 'print environment debug info')\n    .option(\n      '--scripts-version <alternative-package>',\n      'use a non-standard version of react-scripts'\n    )\n    .option(\n      '--template <path-to-template>',\n      'specify a template for the created project'\n    )\n    .option('--use-pnp')\n    .allowUnknownOption()\n    .on('--help', () => {\n      console.log(\n        `    Only ${chalk.green('<project-directory>')} is required.`\n      );\n      console.log();\n      console.log(\n        `    A custom ${chalk.cyan('--scripts-version')} can be one of:`\n      );\n      console.log(`      - a specific npm version: ${chalk.green('0.8.2')}`);\n      console.log(`      - a specific npm tag: ${chalk.green('@next')}`);\n      console.log(\n        `      - a custom fork published on npm: ${chalk.green(\n          'my-react-scripts'\n        )}`\n      );\n      console.log(\n        `      - a local path relative to the current working directory: ${chalk.green(\n          'file:../my-react-scripts'\n        )}`\n      );\n      console.log(\n        `      - a .tgz archive: ${chalk.green(\n          'https://mysite.com/my-react-scripts-0.8.2.tgz'\n        )}`\n      );\n      console.log(\n        `      - a .tar.gz archive: ${chalk.green(\n          'https://mysite.com/my-react-scripts-0.8.2.tar.gz'\n        )}`\n      );\n      console.log(\n        `    It is not needed unless you specifically want to use a fork.`\n      );\n      console.log();\n      console.log(`    A custom ${chalk.cyan('--template')} can be one of:`);\n      console.log(\n        `      - a custom template published on npm: ${chalk.green(\n          'cra-template-typescript'\n        )}`\n      );\n      console.log(\n        `      - a local path relative to the current working directory: ${chalk.green(\n          'file:../my-custom-template'\n        )}`\n      );\n      console.log(\n        `      - a .tgz archive: ${chalk.green(\n          'https://mysite.com/my-custom-template-0.8.2.tgz'\n        )}`\n      );\n      console.log(\n        `      - a .tar.gz archive: ${chalk.green(\n          'https://mysite.com/my-custom-template-0.8.2.tar.gz'\n        )}`\n      );\n      console.log();\n      console.log(\n        `    If you have any problems, do not hesitate to file an issue:`\n      );\n      console.log(\n        `      ${chalk.cyan(\n          'https://github.com/facebook/create-react-app/issues/new'\n        )}`\n      );\n      console.log();\n    })\n    .parse(process.argv);\n\n  if (program.info) {\n    console.log(chalk.bold('\\nEnvironment Info:'));\n    console.log(\n      `\\n  current version of ${packageJson.name}: ${packageJson.version}`\n    );\n    console.log(`  running from ${__dirname}`);\n    return envinfo\n      .run(\n        {\n          System: ['OS', 'CPU'],\n          Binaries: ['Node', 'npm', 'Yarn'],\n          Browsers: [\n            'Chrome',\n            'Edge',\n            'Internet Explorer',\n            'Firefox',\n            'Safari',\n          ],\n          npmPackages: ['react', 'react-dom', 'react-scripts'],\n          npmGlobalPackages: ['create-react-app'],\n        },\n        {\n          duplicates: true,\n          showNotFound: true,\n        }\n      )\n      .then(console.log);\n  }\n\n  if (typeof projectName === 'undefined') {\n    console.error('Please specify the project directory:');\n    console.log(\n      `  ${chalk.cyan(program.name())} ${chalk.green('<project-directory>')}`\n    );\n    console.log();\n    console.log('For example:');\n    console.log(\n      `  ${chalk.cyan(program.name())} ${chalk.green('my-react-app')}`\n    );\n    console.log();\n    console.log(\n      `Run ${chalk.cyan(`${program.name()} --help`)} to see all options.`\n    );\n    process.exit(1);\n  }\n\n  // We first check the registry directly via the API, and if that fails, we try\n  // the slower `npm view [package] version` command.\n  //\n  // This is important for users in environments where direct access to npm is\n  // blocked by a firewall, and packages are provided exclusively via a private\n  // registry.\n  checkForLatestVersion()\n    .catch(() => {\n      try {\n        return execSync('npm view create-react-app version').toString().trim();\n      } catch (e) {\n        return null;\n      }\n    })\n    .then(latest => {\n      if (latest && semver.lt(packageJson.version, latest)) {\n        console.log();\n        console.error(\n          chalk.yellow(\n            `You are running \\`create-react-app\\` ${packageJson.version}, which is behind the latest release (${latest}).\\n\\n` +\n              'We recommend always using the latest version of create-react-app if possible.'\n          )\n        );\n        console.log();\n        console.log(\n          'The latest instructions for creating a new app can be found here:\\n' +\n            'https://create-react-app.dev/docs/getting-started/'\n        );\n        console.log();\n      } else {\n        const useYarn = isUsingYarn();\n        createApp(\n          projectName,\n          program.verbose,\n          program.scriptsVersion,\n          program.template,\n          useYarn,\n          program.usePnp\n        );\n      }\n    });\n}\n\nfunction createApp(name, verbose, version, template, useYarn, usePnp) {\n  const unsupportedNodeVersion = !semver.satisfies(\n    // Coerce strings with metadata (i.e. `15.0.0-nightly`).\n    semver.coerce(process.version),\n    '>=14'\n  );\n\n  if (unsupportedNodeVersion) {\n    console.log(\n      chalk.yellow(\n        `You are using Node ${process.version} so the project will be bootstrapped with an old unsupported version of tools.\\n\\n` +\n          `Please update to Node 14 or higher for a better, fully supported experience.\\n`\n      )\n    );\n    // Fall back to latest supported react-scripts on Node 4\n    version = 'react-scripts@0.9.x';\n  }\n\n  const root = path.resolve(name);\n  const appName = path.basename(root);\n\n  checkAppName(appName);\n  fs.ensureDirSync(name);\n  if (!isSafeToCreateProjectIn(root, name)) {\n    process.exit(1);\n  }\n  console.log();\n\n  console.log(`Creating a new React app in ${chalk.green(root)}.`);\n  console.log();\n\n  const packageJson = {\n    name: appName,\n    version: '0.1.0',\n    private: true,\n  };\n  fs.writeFileSync(\n    path.join(root, 'package.json'),\n    JSON.stringify(packageJson, null, 2) + os.EOL\n  );\n\n  const originalDirectory = process.cwd();\n  process.chdir(root);\n  if (!useYarn && !checkThatNpmCanReadCwd()) {\n    process.exit(1);\n  }\n\n  if (!useYarn) {\n    const npmInfo = checkNpmVersion();\n    if (!npmInfo.hasMinNpm) {\n      if (npmInfo.npmVersion) {\n        console.log(\n          chalk.yellow(\n            `You are using npm ${npmInfo.npmVersion} so the project will be bootstrapped with an old unsupported version of tools.\\n\\n` +\n              `Please update to npm 6 or higher for a better, fully supported experience.\\n`\n          )\n        );\n      }\n      // Fall back to latest supported react-scripts for npm 3\n      version = 'react-scripts@0.9.x';\n    }\n  } else if (usePnp) {\n    const yarnInfo = checkYarnVersion();\n    if (yarnInfo.yarnVersion) {\n      if (!yarnInfo.hasMinYarnPnp) {\n        console.log(\n          chalk.yellow(\n            `You are using Yarn ${yarnInfo.yarnVersion} together with the --use-pnp flag, but Plug'n'Play is only supported starting from the 1.12 release.\\n\\n` +\n              `Please update to Yarn 1.12 or higher for a better, fully supported experience.\\n`\n          )\n        );\n        // 1.11 had an issue with webpack-dev-middleware, so better not use PnP with it (never reached stable, but still)\n        usePnp = false;\n      }\n      if (!yarnInfo.hasMaxYarnPnp) {\n        console.log(\n          chalk.yellow(\n            'The --use-pnp flag is no longer necessary with yarn 2 and will be deprecated and removed in a future release.\\n'\n          )\n        );\n        // 2 supports PnP by default and breaks when trying to use the flag\n        usePnp = false;\n      }\n    }\n  }\n\n  run(\n    root,\n    appName,\n    version,\n    verbose,\n    originalDirectory,\n    template,\n    useYarn,\n    usePnp\n  );\n}\n\nfunction install(root, useYarn, usePnp, dependencies, verbose, isOnline) {\n  return new Promise((resolve, reject) => {\n    let command;\n    let args;\n    if (useYarn) {\n      command = 'yarnpkg';\n      args = ['add', '--exact'];\n      if (!isOnline) {\n        args.push('--offline');\n      }\n      if (usePnp) {\n        args.push('--enable-pnp');\n      }\n      [].push.apply(args, dependencies);\n\n      // Explicitly set cwd() to work around issues like\n      // https://github.com/facebook/create-react-app/issues/3326.\n      // Unfortunately we can only do this for Yarn because npm support for\n      // equivalent --prefix flag doesn't help with this issue.\n      // This is why for npm, we run checkThatNpmCanReadCwd() early instead.\n      args.push('--cwd');\n      args.push(root);\n\n      if (!isOnline) {\n        console.log(chalk.yellow('You appear to be offline.'));\n        console.log(chalk.yellow('Falling back to the local Yarn cache.'));\n        console.log();\n      }\n    } else {\n      command = 'npm';\n      args = [\n        'install',\n        '--no-audit', // https://github.com/facebook/create-react-app/issues/11174\n        '--save',\n        '--save-exact',\n        '--loglevel',\n        'error',\n      ].concat(dependencies);\n\n      if (usePnp) {\n        console.log(chalk.yellow(\"NPM doesn't support PnP.\"));\n        console.log(chalk.yellow('Falling back to the regular installs.'));\n        console.log();\n      }\n    }\n\n    if (verbose) {\n      args.push('--verbose');\n    }\n\n    const child = spawn(command, args, { stdio: 'inherit' });\n    child.on('close', code => {\n      if (code !== 0) {\n        reject({\n          command: `${command} ${args.join(' ')}`,\n        });\n        return;\n      }\n      resolve();\n    });\n  });\n}\n\nfunction run(\n  root,\n  appName,\n  version,\n  verbose,\n  originalDirectory,\n  template,\n  useYarn,\n  usePnp\n) {\n  Promise.all([\n    getInstallPackage(version, originalDirectory),\n    getTemplateInstallPackage(template, originalDirectory),\n  ]).then(([packageToInstall, templateToInstall]) => {\n    const allDependencies = ['react', 'react-dom', packageToInstall];\n\n    console.log('Installing packages. This might take a couple of minutes.');\n\n    Promise.all([\n      getPackageInfo(packageToInstall),\n      getPackageInfo(templateToInstall),\n    ])\n      .then(([packageInfo, templateInfo]) =>\n        checkIfOnline(useYarn).then(isOnline => ({\n          isOnline,\n          packageInfo,\n          templateInfo,\n        }))\n      )\n      .then(({ isOnline, packageInfo, templateInfo }) => {\n        let packageVersion = semver.coerce(packageInfo.version);\n\n        const templatesVersionMinimum = '3.3.0';\n\n        // Assume compatibility if we can't test the version.\n        if (!semver.valid(packageVersion)) {\n          packageVersion = templatesVersionMinimum;\n        }\n\n        // Only support templates when used alongside new react-scripts versions.\n        const supportsTemplates = semver.gte(\n          packageVersion,\n          templatesVersionMinimum\n        );\n        if (supportsTemplates) {\n          allDependencies.push(templateToInstall);\n        } else if (template) {\n          console.log('');\n          console.log(\n            `The ${chalk.cyan(packageInfo.name)} version you're using ${\n              packageInfo.name === 'react-scripts' ? 'is not' : 'may not be'\n            } compatible with the ${chalk.cyan('--template')} option.`\n          );\n          console.log('');\n        }\n\n        console.log(\n          `Installing ${chalk.cyan('react')}, ${chalk.cyan(\n            'react-dom'\n          )}, and ${chalk.cyan(packageInfo.name)}${\n            supportsTemplates ? ` with ${chalk.cyan(templateInfo.name)}` : ''\n          }...`\n        );\n        console.log();\n\n        return install(\n          root,\n          useYarn,\n          usePnp,\n          allDependencies,\n          verbose,\n          isOnline\n        ).then(() => ({\n          packageInfo,\n          supportsTemplates,\n          templateInfo,\n        }));\n      })\n      .then(async ({ packageInfo, supportsTemplates, templateInfo }) => {\n        const packageName = packageInfo.name;\n        const templateName = supportsTemplates ? templateInfo.name : undefined;\n        checkNodeVersion(packageName);\n        setCaretRangeForRuntimeDeps(packageName);\n\n        const pnpPath = path.resolve(process.cwd(), '.pnp.js');\n\n        const nodeArgs = fs.existsSync(pnpPath) ? ['--require', pnpPath] : [];\n\n        await executeNodeScript(\n          {\n            cwd: process.cwd(),\n            args: nodeArgs,\n          },\n          [root, appName, verbose, originalDirectory, templateName],\n          `\n        const init = require('${packageName}/scripts/init.js');\n        init.apply(null, JSON.parse(process.argv[1]));\n      `\n        );\n\n        if (version === 'react-scripts@0.9.x') {\n          console.log(\n            chalk.yellow(\n              `\\nNote: the project was bootstrapped with an old unsupported version of tools.\\n` +\n                `Please update to Node >=14 and npm >=6 to get supported tools in new projects.\\n`\n            )\n          );\n        }\n      })\n      .catch(reason => {\n        console.log();\n        console.log('Aborting installation.');\n        if (reason.command) {\n          console.log(`  ${chalk.cyan(reason.command)} has failed.`);\n        } else {\n          console.log(\n            chalk.red('Unexpected error. Please report it as a bug:')\n          );\n          console.log(reason);\n        }\n        console.log();\n\n        // On 'exit' we will delete these files from target directory.\n        const knownGeneratedFiles = ['package.json', 'node_modules'];\n        const currentFiles = fs.readdirSync(path.join(root));\n        currentFiles.forEach(file => {\n          knownGeneratedFiles.forEach(fileToMatch => {\n            // This removes all knownGeneratedFiles.\n            if (file === fileToMatch) {\n              console.log(`Deleting generated file... ${chalk.cyan(file)}`);\n              fs.removeSync(path.join(root, file));\n            }\n          });\n        });\n        const remainingFiles = fs.readdirSync(path.join(root));\n        if (!remainingFiles.length) {\n          // Delete target folder if empty\n          console.log(\n            `Deleting ${chalk.cyan(`${appName}/`)} from ${chalk.cyan(\n              path.resolve(root, '..')\n            )}`\n          );\n          process.chdir(path.resolve(root, '..'));\n          fs.removeSync(path.join(root));\n        }\n        console.log('Done.');\n        process.exit(1);\n      });\n  });\n}\n\nfunction getInstallPackage(version, originalDirectory) {\n  let packageToInstall = 'react-scripts';\n  const validSemver = semver.valid(version);\n  if (validSemver) {\n    packageToInstall += `@${validSemver}`;\n  } else if (version) {\n    if (version[0] === '@' && !version.includes('/')) {\n      packageToInstall += version;\n    } else if (version.match(/^file:/)) {\n      packageToInstall = `file:${path.resolve(\n        originalDirectory,\n        version.match(/^file:(.*)?$/)[1]\n      )}`;\n    } else {\n      // for tar.gz or alternative paths\n      packageToInstall = version;\n    }\n  }\n\n  const scriptsToWarn = [\n    {\n      name: 'react-scripts-ts',\n      message: chalk.yellow(\n        `The react-scripts-ts package is deprecated. TypeScript is now supported natively in Create React App. You can use the ${chalk.green(\n          '--template typescript'\n        )} option instead when generating your app to include TypeScript support. Would you like to continue using react-scripts-ts?`\n      ),\n    },\n  ];\n\n  for (const script of scriptsToWarn) {\n    if (packageToInstall.startsWith(script.name)) {\n      return prompts({\n        type: 'confirm',\n        name: 'useScript',\n        message: script.message,\n        initial: false,\n      }).then(answer => {\n        if (!answer.useScript) {\n          process.exit(0);\n        }\n\n        return packageToInstall;\n      });\n    }\n  }\n\n  return Promise.resolve(packageToInstall);\n}\n\nfunction getTemplateInstallPackage(template, originalDirectory) {\n  let templateToInstall = 'cra-template';\n  if (template) {\n    if (template.match(/^file:/)) {\n      templateToInstall = `file:${path.resolve(\n        originalDirectory,\n        template.match(/^file:(.*)?$/)[1]\n      )}`;\n    } else if (\n      template.includes('://') ||\n      template.match(/^.+\\.(tgz|tar\\.gz)$/)\n    ) {\n      // for tar.gz or alternative paths\n      templateToInstall = template;\n    } else {\n      // Add prefix 'cra-template-' to non-prefixed templates, leaving any\n      // @scope/ and @version intact.\n      const packageMatch = template.match(/^(@[^/]+\\/)?([^@]+)?(@.+)?$/);\n      const scope = packageMatch[1] || '';\n      const templateName = packageMatch[2] || '';\n      const version = packageMatch[3] || '';\n\n      if (\n        templateName === templateToInstall ||\n        templateName.startsWith(`${templateToInstall}-`)\n      ) {\n        // Covers:\n        // - cra-template\n        // - @SCOPE/cra-template\n        // - cra-template-NAME\n        // - @SCOPE/cra-template-NAME\n        templateToInstall = `${scope}${templateName}${version}`;\n      } else if (version && !scope && !templateName) {\n        // Covers using @SCOPE only\n        templateToInstall = `${version}/${templateToInstall}`;\n      } else {\n        // Covers templates without the `cra-template` prefix:\n        // - NAME\n        // - @SCOPE/NAME\n        templateToInstall = `${scope}${templateToInstall}-${templateName}${version}`;\n      }\n    }\n  }\n\n  return Promise.resolve(templateToInstall);\n}\n\nfunction getTemporaryDirectory() {\n  return new Promise((resolve, reject) => {\n    // Unsafe cleanup lets us recursively delete the directory if it contains\n    // contents; by default it only allows removal if it's empty\n    tmp.dir({ unsafeCleanup: true }, (err, tmpdir, callback) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({\n          tmpdir: tmpdir,\n          cleanup: () => {\n            try {\n              callback();\n            } catch (ignored) {\n              // Callback might throw and fail, since it's a temp directory the\n              // OS will clean it up eventually...\n            }\n          },\n        });\n      }\n    });\n  });\n}\n\nfunction extractStream(stream, dest) {\n  return new Promise((resolve, reject) => {\n    stream.pipe(\n      unpack(dest, err => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(dest);\n        }\n      })\n    );\n  });\n}\n\n// Extract package name from tarball url or path.\nfunction getPackageInfo(installPackage) {\n  if (installPackage.match(/^.+\\.(tgz|tar\\.gz)$/)) {\n    return getTemporaryDirectory()\n      .then(obj => {\n        let stream;\n        if (/^http/.test(installPackage)) {\n          stream = hyperquest(installPackage);\n        } else {\n          stream = fs.createReadStream(installPackage);\n        }\n        return extractStream(stream, obj.tmpdir).then(() => obj);\n      })\n      .then(obj => {\n        const { name, version } = require(path.join(\n          obj.tmpdir,\n          'package.json'\n        ));\n        obj.cleanup();\n        return { name, version };\n      })\n      .catch(err => {\n        // The package name could be with or without semver version, e.g. react-scripts-0.2.0-alpha.1.tgz\n        // However, this function returns package name only without semver version.\n        console.log(\n          `Could not extract the package name from the archive: ${err.message}`\n        );\n        const assumedProjectName = installPackage.match(\n          /^.+\\/(.+?)(?:-\\d+.+)?\\.(tgz|tar\\.gz)$/\n        )[1];\n        console.log(\n          `Based on the filename, assuming it is \"${chalk.cyan(\n            assumedProjectName\n          )}\"`\n        );\n        return Promise.resolve({ name: assumedProjectName });\n      });\n  } else if (installPackage.startsWith('git+')) {\n    // Pull package name out of git urls e.g:\n    // git+https://github.com/mycompany/react-scripts.git\n    // git+ssh://github.com/mycompany/react-scripts.git#v1.2.3\n    return Promise.resolve({\n      name: installPackage.match(/([^/]+)\\.git(#.*)?$/)[1],\n    });\n  } else if (installPackage.match(/.+@/)) {\n    // Do not match @scope/ when stripping off @version or @tag\n    return Promise.resolve({\n      name: installPackage.charAt(0) + installPackage.substr(1).split('@')[0],\n      version: installPackage.split('@')[1],\n    });\n  } else if (installPackage.match(/^file:/)) {\n    const installPackagePath = installPackage.match(/^file:(.*)?$/)[1];\n    const { name, version } = require(path.join(\n      installPackagePath,\n      'package.json'\n    ));\n    return Promise.resolve({ name, version });\n  }\n  return Promise.resolve({ name: installPackage });\n}\n\nfunction checkNpmVersion() {\n  let hasMinNpm = false;\n  let npmVersion = null;\n  try {\n    npmVersion = execSync('npm --version').toString().trim();\n    hasMinNpm = semver.gte(npmVersion, '6.0.0');\n  } catch (err) {\n    // ignore\n  }\n  return {\n    hasMinNpm: hasMinNpm,\n    npmVersion: npmVersion,\n  };\n}\n\nfunction checkYarnVersion() {\n  const minYarnPnp = '1.12.0';\n  const maxYarnPnp = '2.0.0';\n  let hasMinYarnPnp = false;\n  let hasMaxYarnPnp = false;\n  let yarnVersion = null;\n  try {\n    yarnVersion = execSync('yarnpkg --version').toString().trim();\n    if (semver.valid(yarnVersion)) {\n      hasMinYarnPnp = semver.gte(yarnVersion, minYarnPnp);\n      hasMaxYarnPnp = semver.lt(yarnVersion, maxYarnPnp);\n    } else {\n      // Handle non-semver compliant yarn version strings, which yarn currently\n      // uses for nightly builds. The regex truncates anything after the first\n      // dash. See #5362.\n      const trimmedYarnVersionMatch = /^(.+?)[-+].+$/.exec(yarnVersion);\n      if (trimmedYarnVersionMatch) {\n        const trimmedYarnVersion = trimmedYarnVersionMatch.pop();\n        hasMinYarnPnp = semver.gte(trimmedYarnVersion, minYarnPnp);\n        hasMaxYarnPnp = semver.lt(trimmedYarnVersion, maxYarnPnp);\n      }\n    }\n  } catch (err) {\n    // ignore\n  }\n  return {\n    hasMinYarnPnp: hasMinYarnPnp,\n    hasMaxYarnPnp: hasMaxYarnPnp,\n    yarnVersion: yarnVersion,\n  };\n}\n\nfunction checkNodeVersion(packageName) {\n  const packageJsonPath = path.resolve(\n    process.cwd(),\n    'node_modules',\n    packageName,\n    'package.json'\n  );\n\n  if (!fs.existsSync(packageJsonPath)) {\n    return;\n  }\n\n  const packageJson = require(packageJsonPath);\n  if (!packageJson.engines || !packageJson.engines.node) {\n    return;\n  }\n\n  if (!semver.satisfies(process.version, packageJson.engines.node)) {\n    console.error(\n      chalk.red(\n        'You are running Node %s.\\n' +\n          'Create React App requires Node %s or higher. \\n' +\n          'Please update your version of Node.'\n      ),\n      process.version,\n      packageJson.engines.node\n    );\n    process.exit(1);\n  }\n}\n\nfunction checkAppName(appName) {\n  const validationResult = validateProjectName(appName);\n  if (!validationResult.validForNewPackages) {\n    console.error(\n      chalk.red(\n        `Cannot create a project named ${chalk.green(\n          `\"${appName}\"`\n        )} because of npm naming restrictions:\\n`\n      )\n    );\n    [\n      ...(validationResult.errors || []),\n      ...(validationResult.warnings || []),\n    ].forEach(error => {\n      console.error(chalk.red(`  * ${error}`));\n    });\n    console.error(chalk.red('\\nPlease choose a different project name.'));\n    process.exit(1);\n  }\n\n  // TODO: there should be a single place that holds the dependencies\n  const dependencies = ['react', 'react-dom', 'react-scripts'].sort();\n  if (dependencies.includes(appName)) {\n    console.error(\n      chalk.red(\n        `Cannot create a project named ${chalk.green(\n          `\"${appName}\"`\n        )} because a dependency with the same name exists.\\n` +\n          `Due to the way npm works, the following names are not allowed:\\n\\n`\n      ) +\n        chalk.cyan(dependencies.map(depName => `  ${depName}`).join('\\n')) +\n        chalk.red('\\n\\nPlease choose a different project name.')\n    );\n    process.exit(1);\n  }\n}\n\nfunction makeCaretRange(dependencies, name) {\n  const version = dependencies[name];\n\n  if (typeof version === 'undefined') {\n    console.error(chalk.red(`Missing ${name} dependency in package.json`));\n    process.exit(1);\n  }\n\n  let patchedVersion = `^${version}`;\n\n  if (!semver.validRange(patchedVersion)) {\n    console.error(\n      `Unable to patch ${name} dependency version because version ${chalk.red(\n        version\n      )} will become invalid ${chalk.red(patchedVersion)}`\n    );\n    patchedVersion = version;\n  }\n\n  dependencies[name] = patchedVersion;\n}\n\nfunction setCaretRangeForRuntimeDeps(packageName) {\n  const packagePath = path.join(process.cwd(), 'package.json');\n  const packageJson = require(packagePath);\n\n  if (typeof packageJson.dependencies === 'undefined') {\n    console.error(chalk.red('Missing dependencies in package.json'));\n    process.exit(1);\n  }\n\n  const packageVersion = packageJson.dependencies[packageName];\n  if (typeof packageVersion === 'undefined') {\n    console.error(chalk.red(`Unable to find ${packageName} in package.json`));\n    process.exit(1);\n  }\n\n  makeCaretRange(packageJson.dependencies, 'react');\n  makeCaretRange(packageJson.dependencies, 'react-dom');\n\n  fs.writeFileSync(packagePath, JSON.stringify(packageJson, null, 2) + os.EOL);\n}\n\n// If project only contains files generated by GH, it’s safe.\n// Also, if project contains remnant error logs from a previous\n// installation, lets remove them now.\n// We also special case IJ-based products .idea because it integrates with CRA:\n// https://github.com/facebook/create-react-app/pull/368#issuecomment-243446094\nfunction isSafeToCreateProjectIn(root, name) {\n  const validFiles = [\n    '.DS_Store',\n    '.git',\n    '.gitattributes',\n    '.gitignore',\n    '.gitlab-ci.yml',\n    '.hg',\n    '.hgcheck',\n    '.hgignore',\n    '.idea',\n    '.npmignore',\n    '.travis.yml',\n    'docs',\n    'LICENSE',\n    'README.md',\n    'mkdocs.yml',\n    'Thumbs.db',\n  ];\n  // These files should be allowed to remain on a failed install, but then\n  // silently removed during the next create.\n  const errorLogFilePatterns = [\n    'npm-debug.log',\n    'yarn-error.log',\n    'yarn-debug.log',\n  ];\n  const isErrorLog = file => {\n    return errorLogFilePatterns.some(pattern => file.startsWith(pattern));\n  };\n\n  const conflicts = fs\n    .readdirSync(root)\n    .filter(file => !validFiles.includes(file))\n    // IntelliJ IDEA creates module files before CRA is launched\n    .filter(file => !/\\.iml$/.test(file))\n    // Don't treat log files from previous installation as conflicts\n    .filter(file => !isErrorLog(file));\n\n  if (conflicts.length > 0) {\n    console.log(\n      `The directory ${chalk.green(name)} contains files that could conflict:`\n    );\n    console.log();\n    for (const file of conflicts) {\n      try {\n        const stats = fs.lstatSync(path.join(root, file));\n        if (stats.isDirectory()) {\n          console.log(`  ${chalk.blue(`${file}/`)}`);\n        } else {\n          console.log(`  ${file}`);\n        }\n      } catch (e) {\n        console.log(`  ${file}`);\n      }\n    }\n    console.log();\n    console.log(\n      'Either try using a new directory name, or remove the files listed above.'\n    );\n\n    return false;\n  }\n\n  // Remove any log files from a previous installation.\n  fs.readdirSync(root).forEach(file => {\n    if (isErrorLog(file)) {\n      fs.removeSync(path.join(root, file));\n    }\n  });\n  return true;\n}\n\nfunction getProxy() {\n  if (process.env.https_proxy) {\n    return process.env.https_proxy;\n  } else {\n    try {\n      // Trying to read https-proxy from .npmrc\n      let httpsProxy = execSync('npm config get https-proxy').toString().trim();\n      return httpsProxy !== 'null' ? httpsProxy : undefined;\n    } catch (e) {\n      return;\n    }\n  }\n}\n\n// See https://github.com/facebook/create-react-app/pull/3355\nfunction checkThatNpmCanReadCwd() {\n  const cwd = process.cwd();\n  let childOutput = null;\n  try {\n    // Note: intentionally using spawn over exec since\n    // the problem doesn't reproduce otherwise.\n    // `npm config list` is the only reliable way I could find\n    // to reproduce the wrong path. Just printing process.cwd()\n    // in a Node process was not enough.\n    childOutput = spawn.sync('npm', ['config', 'list']).output.join('');\n  } catch (err) {\n    // Something went wrong spawning node.\n    // Not great, but it means we can't do this check.\n    // We might fail later on, but let's continue.\n    return true;\n  }\n  if (typeof childOutput !== 'string') {\n    return true;\n  }\n  const lines = childOutput.split('\\n');\n  // `npm config list` output includes the following line:\n  // \"; cwd = C:\\path\\to\\current\\dir\" (unquoted)\n  // I couldn't find an easier way to get it.\n  const prefix = '; cwd = ';\n  const line = lines.find(line => line.startsWith(prefix));\n  if (typeof line !== 'string') {\n    // Fail gracefully. They could remove it.\n    return true;\n  }\n  const npmCWD = line.substring(prefix.length);\n  if (npmCWD === cwd) {\n    return true;\n  }\n  console.error(\n    chalk.red(\n      `Could not start an npm process in the right directory.\\n\\n` +\n        `The current directory is: ${chalk.bold(cwd)}\\n` +\n        `However, a newly started npm process runs in: ${chalk.bold(\n          npmCWD\n        )}\\n\\n` +\n        `This is probably caused by a misconfigured system terminal shell.`\n    )\n  );\n  if (process.platform === 'win32') {\n    console.error(\n      chalk.red(`On Windows, this can usually be fixed by running:\\n\\n`) +\n        `  ${chalk.cyan(\n          'reg'\n        )} delete \"HKCU\\\\Software\\\\Microsoft\\\\Command Processor\" /v AutoRun /f\\n` +\n        `  ${chalk.cyan(\n          'reg'\n        )} delete \"HKLM\\\\Software\\\\Microsoft\\\\Command Processor\" /v AutoRun /f\\n\\n` +\n        chalk.red(`Try to run the above two lines in the terminal.\\n`) +\n        chalk.red(\n          `To learn more about this problem, read: https://blogs.msdn.microsoft.com/oldnewthing/20071121-00/?p=24433/`\n        )\n    );\n  }\n  return false;\n}\n\nfunction checkIfOnline(useYarn) {\n  if (!useYarn) {\n    // Don't ping the Yarn registry.\n    // We'll just assume the best case.\n    return Promise.resolve(true);\n  }\n\n  return new Promise(resolve => {\n    dns.lookup('registry.yarnpkg.com', err => {\n      let proxy;\n      if (err != null && (proxy = getProxy())) {\n        // If a proxy is defined, we likely can't resolve external hostnames.\n        // Try to resolve the proxy name as an indication of a connection.\n        dns.lookup(url.parse(proxy).hostname, proxyErr => {\n          resolve(proxyErr == null);\n        });\n      } else {\n        resolve(err == null);\n      }\n    });\n  });\n}\n\nfunction executeNodeScript({ cwd, args }, data, source) {\n  return new Promise((resolve, reject) => {\n    const child = spawn(\n      process.execPath,\n      [...args, '-e', source, '--', JSON.stringify(data)],\n      { cwd, stdio: 'inherit' }\n    );\n\n    child.on('close', code => {\n      if (code !== 0) {\n        reject({\n          command: `node ${args.join(' ')}`,\n        });\n        return;\n      }\n      resolve();\n    });\n  });\n}\n\nfunction checkForLatestVersion() {\n  return new Promise((resolve, reject) => {\n    https\n      .get(\n        'https://registry.npmjs.org/-/package/create-react-app/dist-tags',\n        res => {\n          if (res.statusCode === 200) {\n            let body = '';\n            res.on('data', data => (body += data));\n            res.on('end', () => {\n              resolve(JSON.parse(body).latest);\n            });\n          } else {\n            reject();\n          }\n        }\n      )\n      .on('error', () => {\n        reject();\n      });\n  });\n}\n\nmodule.exports = {\n  init,\n  getTemplateInstallPackage,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}