{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gsess\\\\Documents\\\\React\\\\repl\\\\src\\\\components\\\\Tabs\\\\Tabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Tab from \"../IDE/Tab\";\nimport TextPopup from \"./TextPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tabs(props) {\n  _s();\n\n  const [tabs, setTabs] = useState([{\n    color: \"primary\",\n    name: \"File 1\",\n    onClick: null\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex -mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        variant: \"contained\",\n        \"aria-label\": \"outlined primary button group\",\n        children: [tabs.map((tab, index) => {\n          return /*#__PURE__*/_jsxDEV(Tab, {\n            color: tab.color,\n            name: tab.name,\n            onClick: tab.onClick\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 37\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Tab, {\n          color: \"primary\",\n          name: \"File 1\",\n          onClick: console.log(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-4\",\n        children: /*#__PURE__*/_jsxDEV(TextPopup, {\n          formTitle: \"Create a new REPL\",\n          formBody: \"Enter a name for your new REPL environment: \",\n          addREPL: props.addREPL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tabs, \"+KIV+bWtNt2mVclQY0DhvIiAfRc=\");\n\n_c = Tabs;\nexport default Tabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabs\");","map":{"version":3,"names":["React","useState","ButtonGroup","Tab","TextPopup","Tabs","props","tabs","setTabs","color","name","onClick","map","tab","index","console","log","addREPL"],"sources":["C:/Users/gsess/Documents/React/repl/src/components/Tabs/Tabs.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Tab from \"../IDE/Tab\";\r\n\r\nimport TextPopup from \"./TextPopup\";\r\n\r\n\r\nfunction Tabs(props) {\r\n\r\n    const [tabs, setTabs] = useState([{\r\n        color: \"primary\",\r\n        name: \"File 1\",\r\n        onClick: null\r\n    }]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex -mb-4\">\r\n                <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\r\n                    {\r\n                        tabs.map((tab, index) => {\r\n                            return (<Tab key={index} color={tab.color} name={tab.name} onClick={tab.onClick} />)\r\n                        })\r\n                    }\r\n                    <Tab color=\"primary\" name=\"File 1\" onClick={console.log(\"\")}/>\r\n                    {/*<Tab color=\"inherit\" name=\"File 2\" />*/}\r\n                    \r\n                    \r\n                </ButtonGroup>\r\n                <div className=\"mx-4\">\r\n                    <TextPopup formTitle=\"Create a new REPL\" formBody=\"Enter a name for your new REPL environment: \" addREPL={props.addREPL} />\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Tabs;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAEjB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC;IAC9BQ,KAAK,EAAE,SADuB;IAE9BC,IAAI,EAAE,QAFwB;IAG9BC,OAAO,EAAE;EAHqB,CAAD,CAAD,CAAhC;EAMA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,YAAf;MAAA,wBACI,QAAC,WAAD;QAAa,OAAO,EAAC,WAArB;QAAiC,cAAW,+BAA5C;QAAA,WAEQJ,IAAI,CAACK,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;UACrB,oBAAQ,QAAC,GAAD;YAAiB,KAAK,EAAED,GAAG,CAACJ,KAA5B;YAAmC,IAAI,EAAEI,GAAG,CAACH,IAA7C;YAAmD,OAAO,EAAEG,GAAG,CAACF;UAAhE,GAAUG,KAAV;YAAA;YAAA;YAAA;UAAA,QAAR;QACH,CAFD,CAFR,eAMI,QAAC,GAAD;UAAK,KAAK,EAAC,SAAX;UAAqB,IAAI,EAAC,QAA1B;UAAmC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAY,EAAZ;QAA5C;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAYI;QAAK,SAAS,EAAC,MAAf;QAAA,uBACI,QAAC,SAAD;UAAW,SAAS,EAAC,mBAArB;UAAyC,QAAQ,EAAC,8CAAlD;UAAiG,OAAO,EAAEV,KAAK,CAACW;QAAhH;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH;;GA/BQZ,I;;KAAAA,I;AAkCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}