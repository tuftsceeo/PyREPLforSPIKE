{"ast":null,"code":"import _toConsumableArray from\"C:/Users/gsess/Documents/React/repl/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/gsess/Documents/React/repl/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import Header from\"./Header\";import IDE from\"./IDE\";import Tabs from\"./Tabs/Tabs\";import Serial from\"./Serial/Serial\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var ENTER='\\x10';// NEWLINE character\nvar _useState=useState([{name:\"Main\",id:0,code:\"\"}]),_useState2=_slicedToArray(_useState,2),editors=_useState2[0],setEditors=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),activeIDE=_useState4[0],setActiveIDE=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),consoleOutput=_useState6[0],setConsoleOutput=_useState6[1];// Make sure editor names are unique!\nfunction addREPL(newEditorName){setEditors(function(prev){return[].concat(_toConsumableArray(prev),[{name:newEditorName,id:prev.length+1,code:\"\"}]);});}function pipeOutputToConsole(value){setConsoleOutput(function(prev){var lines=value.split(\">>>\");lines.forEach(function(element){element=\">>> \"+element;});if(prev.length===0||lines.length===0)return[].concat(_toConsumableArray(prev),[lines]);return[].concat(_toConsumableArray(prev),_toConsumableArray(lines));});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex mx-2 justify-center\",children:/*#__PURE__*/_jsx(Tabs,{})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Serial,{exportConsole:pipeOutputToConsole})})]}),editors.map(function(editor){return/*#__PURE__*/_jsx(IDE,{id:editor.id,content:consoleOutput},editor.id);})]});}export default App;","map":{"version":3,"names":["React","useState","Header","IDE","Tabs","Serial","App","ENTER","name","id","code","editors","setEditors","activeIDE","setActiveIDE","consoleOutput","setConsoleOutput","addREPL","newEditorName","prev","length","pipeOutputToConsole","value","lines","split","forEach","element","map","editor"],"sources":["C:/Users/gsess/Documents/React/repl/src/components/App.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Header from \"./Header\";\r\nimport IDE from \"./IDE\";\r\nimport Tabs from\"./Tabs/Tabs\";\r\nimport Serial from \"./Serial/Serial\"\r\n\r\n\r\nfunction App() {\r\n\r\n    const ENTER = '\\x10'; // NEWLINE character\r\n\r\n    const [editors, setEditors] = useState([{\r\n        name: \"Main\",\r\n        id: 0,\r\n        code: \"\"\r\n    }]);\r\n\r\n    const [activeIDE, setActiveIDE] = useState(0);\r\n    const [consoleOutput, setConsoleOutput] = useState([]);\r\n\r\n\r\n    // Make sure editor names are unique!\r\n    function addREPL(newEditorName) {\r\n        setEditors((prev) => {\r\n            return ([...prev, {\r\n                name: newEditorName,\r\n                id: (prev.length + 1),\r\n                code: \"\"\r\n            }])\r\n        })\r\n    }\r\n\r\n    function pipeOutputToConsole(value) {\r\n        setConsoleOutput((prev) => {\r\n            let lines = value.split(\">>>\");\r\n            lines.forEach(element => {\r\n                element = \">>> \" + element;\r\n            });\r\n            if (prev.length === 0 || lines.length === 0)\r\n                return ([...prev, lines]);\r\n\r\n            return ([...prev, ...lines]);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"grid grid-cols-2\">\r\n                <div className=\"flex mx-2 justify-center\">\r\n                    <Tabs />\r\n                </div>\r\n                <div>\r\n                    <Serial exportConsole={pipeOutputToConsole} />\r\n                </div>\r\n            </div>\r\n            { editors.map((editor) => {\r\n                    return (\r\n                        <IDE key={editor.id} id={editor.id} content={consoleOutput} />\r\n                    )\r\n                })\r\n            }\r\n\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;"],"mappings":"0PAAA,MAAOA,MAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,OAAP,KAAmB,UAAnB,CACA,MAAOC,IAAP,KAAgB,OAAhB,CACA,MAAOC,KAAP,KAAgB,aAAhB,CACA,MAAOC,OAAP,KAAmB,iBAAnB,C,wFAGA,QAASC,IAAT,EAAe,CAEX,GAAMC,MAAK,CAAG,MAAd,CAAsB;AAEtB,cAA8BN,QAAQ,CAAC,CAAC,CACpCO,IAAI,CAAE,MAD8B,CAEpCC,EAAE,CAAE,CAFgC,CAGpCC,IAAI,CAAE,EAH8B,CAAD,CAAD,CAAtC,wCAAOC,OAAP,eAAgBC,UAAhB,eAMA,eAAkCX,QAAQ,CAAC,CAAD,CAA1C,yCAAOY,SAAP,eAAkBC,YAAlB,eACA,eAA0Cb,QAAQ,CAAC,EAAD,CAAlD,yCAAOc,aAAP,eAAsBC,gBAAtB,eAGA;AACA,QAASC,QAAT,CAAiBC,aAAjB,CAAgC,CAC5BN,UAAU,CAAC,SAACO,IAAD,CAAU,CACjB,mCAAYA,IAAZ,GAAkB,CACdX,IAAI,CAAEU,aADQ,CAEdT,EAAE,CAAGU,IAAI,CAACC,MAAL,CAAc,CAFL,CAGdV,IAAI,CAAE,EAHQ,CAAlB,GAKH,CANS,CAAV,CAOH,CAED,QAASW,oBAAT,CAA6BC,KAA7B,CAAoC,CAChCN,gBAAgB,CAAC,SAACG,IAAD,CAAU,CACvB,GAAII,MAAK,CAAGD,KAAK,CAACE,KAAN,CAAY,KAAZ,CAAZ,CACAD,KAAK,CAACE,OAAN,CAAc,SAAAC,OAAO,CAAI,CACrBA,OAAO,CAAG,OAASA,OAAnB,CACH,CAFD,EAGA,GAAIP,IAAI,CAACC,MAAL,GAAgB,CAAhB,EAAqBG,KAAK,CAACH,MAAN,GAAiB,CAA1C,CACI,mCAAYD,IAAZ,GAAkBI,KAAlB,GAEJ,mCAAYJ,IAAZ,qBAAqBI,KAArB,GACH,CATe,CAAhB,CAUH,CAED,mBACI,oCACI,KAAC,MAAD,IADJ,cAEI,aAAK,SAAS,CAAC,kBAAf,wBACI,YAAK,SAAS,CAAC,0BAAf,uBACI,KAAC,IAAD,IADJ,EADJ,cAII,kCACI,KAAC,MAAD,EAAQ,aAAa,CAAEF,mBAAvB,EADJ,EAJJ,GAFJ,CAUMV,OAAO,CAACgB,GAAR,CAAY,SAACC,MAAD,CAAY,CAClB,mBACI,KAAC,GAAD,EAAqB,EAAE,CAAEA,MAAM,CAACnB,EAAhC,CAAoC,OAAO,CAAEM,aAA7C,EAAUa,MAAM,CAACnB,EAAjB,CADJ,CAGH,CAJH,CAVN,GADJ,CAsBH,CAGD,cAAeH,IAAf"},"metadata":{},"sourceType":"module"}