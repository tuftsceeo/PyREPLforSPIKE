{"ast":null,"code":"'use strict';\n\nconst color = require('kleur');\n\nconst _require = require('sisteransi'),\n      cursor = _require.cursor;\n\nconst MultiselectPrompt = require('./multiselect');\n\nconst _require2 = require('../util'),\n      clear = _require2.clear,\n      style = _require2.style,\n      figures = _require2.figures;\n/**\n * MultiselectPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of choice objects\n * @param {String} [opts.hint] Hint to display\n * @param {String} [opts.warn] Hint shown for disabled choices\n * @param {Number} [opts.max] Max choices\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n */\n\n\nclass AutocompleteMultiselectPrompt extends MultiselectPrompt {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    opts.overrideRender = true;\n    super(opts);\n    this.inputValue = '';\n    this.clear = clear('', this.out.columns);\n    this.filteredOptions = this.value;\n    this.render();\n  }\n\n  last() {\n    this.cursor = this.filteredOptions.length - 1;\n    this.render();\n  }\n\n  next() {\n    this.cursor = (this.cursor + 1) % this.filteredOptions.length;\n    this.render();\n  }\n\n  up() {\n    if (this.cursor === 0) {\n      this.cursor = this.filteredOptions.length - 1;\n    } else {\n      this.cursor--;\n    }\n\n    this.render();\n  }\n\n  down() {\n    if (this.cursor === this.filteredOptions.length - 1) {\n      this.cursor = 0;\n    } else {\n      this.cursor++;\n    }\n\n    this.render();\n  }\n\n  left() {\n    this.filteredOptions[this.cursor].selected = false;\n    this.render();\n  }\n\n  right() {\n    if (this.value.filter(e => e.selected).length >= this.maxChoices) return this.bell();\n    this.filteredOptions[this.cursor].selected = true;\n    this.render();\n  }\n\n  delete() {\n    if (this.inputValue.length) {\n      this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1);\n      this.updateFilteredOptions();\n    }\n  }\n\n  updateFilteredOptions() {\n    const currentHighlight = this.filteredOptions[this.cursor];\n    this.filteredOptions = this.value.filter(v => {\n      if (this.inputValue) {\n        if (typeof v.title === 'string') {\n          if (v.title.toLowerCase().includes(this.inputValue.toLowerCase())) {\n            return true;\n          }\n        }\n\n        if (typeof v.value === 'string') {\n          if (v.value.toLowerCase().includes(this.inputValue.toLowerCase())) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      return true;\n    });\n    const newHighlightIndex = this.filteredOptions.findIndex(v => v === currentHighlight);\n    this.cursor = newHighlightIndex < 0 ? 0 : newHighlightIndex;\n    this.render();\n  }\n\n  handleSpaceToggle() {\n    const v = this.filteredOptions[this.cursor];\n\n    if (v.selected) {\n      v.selected = false;\n      this.render();\n    } else if (v.disabled || this.value.filter(e => e.selected).length >= this.maxChoices) {\n      return this.bell();\n    } else {\n      v.selected = true;\n      this.render();\n    }\n  }\n\n  handleInputChange(c) {\n    this.inputValue = this.inputValue + c;\n    this.updateFilteredOptions();\n  }\n\n  _(c, key) {\n    if (c === ' ') {\n      this.handleSpaceToggle();\n    } else {\n      this.handleInputChange(c);\n    }\n  }\n\n  renderInstructions() {\n    if (this.instructions === undefined || this.instructions) {\n      if (typeof this.instructions === 'string') {\n        return this.instructions;\n      }\n\n      return `\nInstructions:\n    ${figures.arrowUp}/${figures.arrowDown}: Highlight option\n    ${figures.arrowLeft}/${figures.arrowRight}/[space]: Toggle selection\n    [a,b,c]/delete: Filter choices\n    enter/return: Complete answer\n`;\n    }\n\n    return '';\n  }\n\n  renderCurrentInput() {\n    return `\nFiltered results for: ${this.inputValue ? this.inputValue : color.gray('Enter something to filter')}\\n`;\n  }\n\n  renderOption(cursor, v, i) {\n    let title;\n    if (v.disabled) title = cursor === i ? color.gray().underline(v.title) : color.strikethrough().gray(v.title);else title = cursor === i ? color.cyan().underline(v.title) : v.title;\n    return (v.selected ? color.green(figures.radioOn) : figures.radioOff) + '  ' + title;\n  }\n\n  renderDoneOrInstructions() {\n    if (this.done) {\n      return this.value.filter(e => e.selected).map(v => v.title).join(', ');\n    }\n\n    const output = [color.gray(this.hint), this.renderInstructions(), this.renderCurrentInput()];\n\n    if (this.filteredOptions.length && this.filteredOptions[this.cursor].disabled) {\n      output.push(color.yellow(this.warn));\n    }\n\n    return output.join(' ');\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);\n    super.render(); // print prompt\n\n    let prompt = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(false), this.renderDoneOrInstructions()].join(' ');\n\n    if (this.showMinError) {\n      prompt += color.red(`You must select a minimum of ${this.minSelected} choices.`);\n      this.showMinError = false;\n    }\n\n    prompt += this.renderOptions(this.filteredOptions);\n    this.out.write(this.clear + prompt);\n    this.clear = clear(prompt, this.out.columns);\n  }\n\n}\n\nmodule.exports = AutocompleteMultiselectPrompt;","map":{"version":3,"names":["color","require","_require","cursor","MultiselectPrompt","_require2","clear","style","figures","AutocompleteMultiselectPrompt","constructor","opts","overrideRender","inputValue","out","columns","filteredOptions","value","render","last","length","next","up","down","left","selected","right","filter","e","maxChoices","bell","delete","substr","updateFilteredOptions","currentHighlight","v","title","toLowerCase","includes","newHighlightIndex","findIndex","handleSpaceToggle","disabled","handleInputChange","c","_","key","renderInstructions","instructions","undefined","arrowUp","arrowDown","arrowLeft","arrowRight","renderCurrentInput","gray","renderOption","i","underline","strikethrough","cyan","green","radioOn","radioOff","renderDoneOrInstructions","done","map","join","output","hint","push","yellow","warn","closed","firstRender","write","hide","prompt","symbol","aborted","bold","msg","delimiter","showMinError","red","minSelected","renderOptions","module","exports"],"sources":["C:/Users/gsess/node_modules/prompts/dist/elements/autocompleteMultiselect.js"],"sourcesContent":["'use strict';\n\nconst color = require('kleur');\n\nconst _require = require('sisteransi'),\n      cursor = _require.cursor;\n\nconst MultiselectPrompt = require('./multiselect');\n\nconst _require2 = require('../util'),\n      clear = _require2.clear,\n      style = _require2.style,\n      figures = _require2.figures;\n/**\n * MultiselectPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of choice objects\n * @param {String} [opts.hint] Hint to display\n * @param {String} [opts.warn] Hint shown for disabled choices\n * @param {Number} [opts.max] Max choices\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n */\n\n\nclass AutocompleteMultiselectPrompt extends MultiselectPrompt {\n  constructor(opts = {}) {\n    opts.overrideRender = true;\n    super(opts);\n    this.inputValue = '';\n    this.clear = clear('', this.out.columns);\n    this.filteredOptions = this.value;\n    this.render();\n  }\n\n  last() {\n    this.cursor = this.filteredOptions.length - 1;\n    this.render();\n  }\n\n  next() {\n    this.cursor = (this.cursor + 1) % this.filteredOptions.length;\n    this.render();\n  }\n\n  up() {\n    if (this.cursor === 0) {\n      this.cursor = this.filteredOptions.length - 1;\n    } else {\n      this.cursor--;\n    }\n\n    this.render();\n  }\n\n  down() {\n    if (this.cursor === this.filteredOptions.length - 1) {\n      this.cursor = 0;\n    } else {\n      this.cursor++;\n    }\n\n    this.render();\n  }\n\n  left() {\n    this.filteredOptions[this.cursor].selected = false;\n    this.render();\n  }\n\n  right() {\n    if (this.value.filter(e => e.selected).length >= this.maxChoices) return this.bell();\n    this.filteredOptions[this.cursor].selected = true;\n    this.render();\n  }\n\n  delete() {\n    if (this.inputValue.length) {\n      this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1);\n      this.updateFilteredOptions();\n    }\n  }\n\n  updateFilteredOptions() {\n    const currentHighlight = this.filteredOptions[this.cursor];\n    this.filteredOptions = this.value.filter(v => {\n      if (this.inputValue) {\n        if (typeof v.title === 'string') {\n          if (v.title.toLowerCase().includes(this.inputValue.toLowerCase())) {\n            return true;\n          }\n        }\n\n        if (typeof v.value === 'string') {\n          if (v.value.toLowerCase().includes(this.inputValue.toLowerCase())) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      return true;\n    });\n    const newHighlightIndex = this.filteredOptions.findIndex(v => v === currentHighlight);\n    this.cursor = newHighlightIndex < 0 ? 0 : newHighlightIndex;\n    this.render();\n  }\n\n  handleSpaceToggle() {\n    const v = this.filteredOptions[this.cursor];\n\n    if (v.selected) {\n      v.selected = false;\n      this.render();\n    } else if (v.disabled || this.value.filter(e => e.selected).length >= this.maxChoices) {\n      return this.bell();\n    } else {\n      v.selected = true;\n      this.render();\n    }\n  }\n\n  handleInputChange(c) {\n    this.inputValue = this.inputValue + c;\n    this.updateFilteredOptions();\n  }\n\n  _(c, key) {\n    if (c === ' ') {\n      this.handleSpaceToggle();\n    } else {\n      this.handleInputChange(c);\n    }\n  }\n\n  renderInstructions() {\n    if (this.instructions === undefined || this.instructions) {\n      if (typeof this.instructions === 'string') {\n        return this.instructions;\n      }\n\n      return `\nInstructions:\n    ${figures.arrowUp}/${figures.arrowDown}: Highlight option\n    ${figures.arrowLeft}/${figures.arrowRight}/[space]: Toggle selection\n    [a,b,c]/delete: Filter choices\n    enter/return: Complete answer\n`;\n    }\n\n    return '';\n  }\n\n  renderCurrentInput() {\n    return `\nFiltered results for: ${this.inputValue ? this.inputValue : color.gray('Enter something to filter')}\\n`;\n  }\n\n  renderOption(cursor, v, i) {\n    let title;\n    if (v.disabled) title = cursor === i ? color.gray().underline(v.title) : color.strikethrough().gray(v.title);else title = cursor === i ? color.cyan().underline(v.title) : v.title;\n    return (v.selected ? color.green(figures.radioOn) : figures.radioOff) + '  ' + title;\n  }\n\n  renderDoneOrInstructions() {\n    if (this.done) {\n      return this.value.filter(e => e.selected).map(v => v.title).join(', ');\n    }\n\n    const output = [color.gray(this.hint), this.renderInstructions(), this.renderCurrentInput()];\n\n    if (this.filteredOptions.length && this.filteredOptions[this.cursor].disabled) {\n      output.push(color.yellow(this.warn));\n    }\n\n    return output.join(' ');\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);\n    super.render(); // print prompt\n\n    let prompt = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(false), this.renderDoneOrInstructions()].join(' ');\n\n    if (this.showMinError) {\n      prompt += color.red(`You must select a minimum of ${this.minSelected} choices.`);\n      this.showMinError = false;\n    }\n\n    prompt += this.renderOptions(this.filteredOptions);\n    this.out.write(this.clear + prompt);\n    this.clear = clear(prompt, this.out.columns);\n  }\n\n}\n\nmodule.exports = AutocompleteMultiselectPrompt;"],"mappings":"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"},"metadata":{},"sourceType":"script"}