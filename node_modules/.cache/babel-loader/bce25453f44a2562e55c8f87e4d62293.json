{"ast":null,"code":"\"use strict\";\n\nvar debug = require('debug')('tar-pack');\n\nvar uidNumber = require('uid-number');\n\nvar rm = require('rimraf');\n\nvar tar = require('tar');\n\nvar once = require('once');\n\nvar fstream = require('fstream');\n\nvar packer = require('fstream-ignore');\n\nvar PassThrough = require('stream').PassThrough || require('readable-stream').PassThrough;\n\nvar zlib = require('zlib');\n\nvar path = require('path');\n\nvar win32 = process.platform === 'win32';\nvar myUid = process.getuid && process.getuid();\nvar myGid = process.getgid && process.getgid();\n\nif (process.env.SUDO_UID && myUid === 0) {\n  if (!isNaN(process.env.SUDO_UID)) myUid = +process.env.SUDO_UID;\n  if (!isNaN(process.env.SUDO_GID)) myGid = +process.env.SUDO_GID;\n}\n\nexports.pack = pack;\nexports.unpack = unpack;\n\nfunction pack(folder, options) {\n  options = options || {};\n\n  if (typeof folder === 'string') {\n    var filter = options.filter || function (entry) {\n      return true;\n    };\n\n    folder = packer({\n      path: folder,\n      type: 'Directory',\n      isDirectory: true,\n      ignoreFiles: options.ignoreFiles || ['.gitignore'],\n      filter: function (entry) {\n        // {path, basename, dirname, type} (type is \"Directory\" or \"File\")\n        var basename = entry.basename; // some files are *never* allowed under any circumstances\n        // these files should always be either temporary files or\n        // version control related files\n\n        if (basename === '.git' || basename === '.lock-wscript' || basename.match(/^\\.wafpickle-[0-9]+$/) || basename === 'CVS' || basename === '.svn' || basename === '.hg' || basename.match(/^\\..*\\.swp$/) || basename === '.DS_Store' || basename.match(/^\\._/)) {\n          return false;\n        } //custom excludes\n\n\n        return filter(entry);\n      }\n    });\n  } // By default, npm includes some proprietary attributes in the\n  // package tarball.  This is sane, and allowed by the spec.\n  // However, npm *itself* excludes these from its own package,\n  // so that it can be more easily bootstrapped using old and\n  // non-compliant tar implementations.\n\n\n  var tarPack = tar.Pack({\n    noProprietary: options.noProprietary || false,\n    fromBase: options.fromBase || false\n  });\n  var gzip = zlib.Gzip();\n  folder.on('error', function (er) {\n    if (er) debug('Error reading folder');\n    return gzip.emit('error', er);\n  });\n  tarPack.on('error', function (er) {\n    if (er) debug('tar creation error');\n    gzip.emit('error', er);\n  });\n  return folder.pipe(tarPack).pipe(gzip);\n}\n\nfunction unpack(unpackTarget, options, cb) {\n  if (typeof options === 'function' && cb === undefined) cb = options, options = undefined;\n  var tarball = new PassThrough();\n\n  if (typeof cb === 'function') {\n    cb = once(cb);\n    tarball.on('error', cb);\n    tarball.on('close', function () {\n      cb();\n    });\n  }\n\n  var parent = path.dirname(unpackTarget);\n  var base = path.basename(unpackTarget);\n  options = options || {};\n  var gid = options.gid || null;\n  var uid = options.uid || null;\n  var dMode = options.dmode || 0x0777; //npm.modes.exec\n\n  var fMode = options.fmode || 0x0666; //npm.modes.file\n\n  var defaultName = options.defaultName || (options.defaultName === false ? false : 'index.js');\n  var strip = options.strip !== undefined ? options.strip : 1; // figure out who we're supposed to be, if we're not pretending\n  // to be a specific user.\n\n  if (options.unsafe && !win32) {\n    uid = myUid;\n    gid = myGid;\n  }\n\n  var pending = 2;\n  uidNumber(uid, gid, function (er, uid, gid) {\n    if (er) {\n      tarball.emit('error', er);\n      return tarball.end();\n    }\n\n    if (0 === --pending) next();\n  });\n\n  if (!options.keepFiles) {\n    rm(unpackTarget, function (er) {\n      if (er) {\n        tarball.emit('error', er);\n        return tarball.end();\n      }\n\n      if (0 === --pending) next();\n    });\n  } else {\n    next();\n  }\n\n  function next() {\n    // gzip {tarball} --decompress --stdout \\\n    //   | tar -mvxpf - --strip-components={strip} -C {unpackTarget}\n    gunzTarPerm(tarball, unpackTarget, dMode, fMode, uid, gid, defaultName, strip);\n  }\n\n  return tarball;\n}\n\nfunction gunzTarPerm(tarball, target, dMode, fMode, uid, gid, defaultName, strip) {\n  debug('modes %j', [dMode.toString(8), fMode.toString(8)]);\n\n  function fixEntry(entry) {\n    debug('fixEntry %j', entry.path); // never create things that are user-unreadable,\n    // or dirs that are user-un-listable. Only leads to headaches.\n\n    var originalMode = entry.mode = entry.mode || entry.props.mode;\n    entry.mode = entry.mode | (entry.type === 'Directory' ? dMode : fMode);\n    entry.props.mode = entry.mode;\n\n    if (originalMode !== entry.mode) {\n      debug('modified mode %j', [entry.path, originalMode, entry.mode]);\n    } // if there's a specific owner uid/gid that we want, then set that\n\n\n    if (!win32 && typeof uid === 'number' && typeof gid === 'number') {\n      entry.props.uid = entry.uid = uid;\n      entry.props.gid = entry.gid = gid;\n    }\n  }\n\n  var extractOpts = {\n    type: 'Directory',\n    path: target,\n    strip: strip\n  };\n\n  if (!win32 && typeof uid === 'number' && typeof gid === 'number') {\n    extractOpts.uid = uid;\n    extractOpts.gid = gid;\n  }\n\n  extractOpts.filter = function () {\n    // symbolic links are not allowed in packages.\n    if (this.type.match(/^.*Link$/)) {\n      debug('excluding symbolic link: ' + this.path.substr(target.length + 1) + ' -> ' + this.linkpath);\n      return false;\n    }\n\n    return true;\n  };\n\n  type(tarball, function (err, type) {\n    if (err) return tarball.emit('error', err);\n    var strm = tarball;\n\n    if (type === 'gzip') {\n      strm = strm.pipe(zlib.Unzip());\n      strm.on('error', function (er) {\n        if (er) debug('unzip error');\n        tarball.emit('error', er);\n      });\n      type = 'tar';\n    }\n\n    if (type === 'tar') {\n      strm.pipe(tar.Extract(extractOpts)).on('entry', fixEntry).on('error', function (er) {\n        if (er) debug('untar error');\n        tarball.emit('error', er);\n      }).on('close', function () {\n        tarball.emit('close');\n      });\n      return;\n    }\n\n    if (type === 'naked-file' && defaultName) {\n      var jsOpts = {\n        path: path.resolve(target, defaultName)\n      };\n\n      if (!win32 && typeof uid === 'number' && typeof gid === 'number') {\n        jsOpts.uid = uid;\n        jsOpts.gid = gid;\n      }\n\n      strm.pipe(fstream.Writer(jsOpts)).on('error', function (er) {\n        if (er) debug('copy error');\n        tarball.emit('error', er);\n      }).on('close', function () {\n        tarball.emit('close');\n      });\n      return;\n    }\n\n    return tarball.emit('error', new Error('Unrecognised package type'));\n  });\n}\n\nfunction type(stream, callback) {\n  stream.on('error', handle);\n  stream.on('data', parse);\n\n  function handle(err) {\n    stream.removeListener('data', parse);\n    stream.removeListener('error', handle);\n  }\n\n  function parse(chunk) {\n    // detect what it is.\n    // Then, depending on that, we'll figure out whether it's\n    // a single-file module, gzipped tarball, or naked tarball.\n    // gzipped files all start with 1f8b08\n    if (chunk[0] === 0x1F && chunk[1] === 0x8B && chunk[2] === 0x08) {\n      callback(null, 'gzip');\n    } else if (chunk.toString().match(/^package\\/\\u0000/)) {\n      // note, this will only pick up on tarballs with a root directory called package\n      callback(null, 'tar');\n    } else {\n      callback(null, 'naked-file');\n    } // now un-hook, and re-emit the chunk\n\n\n    stream.removeListener('data', parse);\n    stream.removeListener('error', handle);\n    stream.unshift(chunk);\n  }\n}","map":{"version":3,"names":["debug","require","uidNumber","rm","tar","once","fstream","packer","PassThrough","zlib","path","win32","process","platform","myUid","getuid","myGid","getgid","env","SUDO_UID","isNaN","SUDO_GID","exports","pack","unpack","folder","options","filter","entry","type","isDirectory","ignoreFiles","basename","match","tarPack","Pack","noProprietary","fromBase","gzip","Gzip","on","er","emit","pipe","unpackTarget","cb","undefined","tarball","parent","dirname","base","gid","uid","dMode","dmode","fMode","fmode","defaultName","strip","unsafe","pending","end","next","keepFiles","gunzTarPerm","target","toString","fixEntry","originalMode","mode","props","extractOpts","substr","length","linkpath","err","strm","Unzip","Extract","jsOpts","resolve","Writer","Error","stream","callback","handle","parse","removeListener","chunk","unshift"],"sources":["C:/Users/gsess/node_modules/tar-pack/index.js"],"sourcesContent":["\"use strict\"\n\nvar debug = require('debug')('tar-pack')\nvar uidNumber = require('uid-number')\nvar rm = require('rimraf')\nvar tar = require('tar')\nvar once = require('once')\nvar fstream = require('fstream')\nvar packer = require('fstream-ignore')\n\nvar PassThrough = require('stream').PassThrough || require('readable-stream').PassThrough\nvar zlib = require('zlib')\nvar path = require('path')\n\nvar win32 = process.platform === 'win32'\nvar myUid = process.getuid && process.getuid()\nvar myGid = process.getgid && process.getgid()\n\nif (process.env.SUDO_UID && myUid === 0) {\n  if (!isNaN(process.env.SUDO_UID)) myUid = +process.env.SUDO_UID\n  if (!isNaN(process.env.SUDO_GID)) myGid = +process.env.SUDO_GID\n}\n\nexports.pack = pack\nexports.unpack = unpack\n\nfunction pack(folder, options) {\n  options = options || {}\n  if (typeof folder === 'string') {\n\n    var filter = options.filter || function (entry) { return true; }\n\n    folder = packer({\n      path: folder,\n      type: 'Directory',\n      isDirectory: true,\n      ignoreFiles: options.ignoreFiles || ['.gitignore'],\n      filter: function (entry) { // {path, basename, dirname, type} (type is \"Directory\" or \"File\")\n        var basename = entry.basename\n        // some files are *never* allowed under any circumstances\n        // these files should always be either temporary files or\n        // version control related files\n        if (basename === '.git' || basename === '.lock-wscript' || basename.match(/^\\.wafpickle-[0-9]+$/) ||\n            basename === 'CVS' || basename === '.svn' || basename === '.hg' || basename.match(/^\\..*\\.swp$/) ||\n            basename === '.DS_Store' ||  basename.match(/^\\._/)) {\n          return false\n        }\n        //custom excludes\n        return filter(entry)\n      }\n    })\n  }\n  // By default, npm includes some proprietary attributes in the\n  // package tarball.  This is sane, and allowed by the spec.\n  // However, npm *itself* excludes these from its own package,\n  // so that it can be more easily bootstrapped using old and\n  // non-compliant tar implementations.\n  var tarPack = tar.Pack({ noProprietary: options.noProprietary || false, fromBase: options.fromBase || false })\n  var gzip = zlib.Gzip()\n\n  folder\n    .on('error', function (er) {\n      if (er) debug('Error reading folder')\n      return gzip.emit('error', er)\n    })\n  tarPack\n    .on('error', function (er) {\n      if (er) debug('tar creation error')\n      gzip.emit('error', er)\n    })\n  return folder.pipe(tarPack).pipe(gzip)\n}\n\nfunction unpack(unpackTarget, options, cb) {\n  if (typeof options === 'function' && cb === undefined) cb = options, options = undefined\n\n  var tarball = new PassThrough()\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    tarball.on('error', cb)\n    tarball.on('close', function () {\n      cb()\n    })\n  }\n\n  var parent = path.dirname(unpackTarget)\n  var base = path.basename(unpackTarget)\n\n  options = options || {}\n  var gid = options.gid || null\n  var uid = options.uid || null\n  var dMode = options.dmode || 0x0777 //npm.modes.exec\n  var fMode = options.fmode || 0x0666 //npm.modes.file\n  var defaultName = options.defaultName || (options.defaultName === false ? false : 'index.js')\n  var strip = (options.strip !== undefined) ? options.strip : 1\n\n  // figure out who we're supposed to be, if we're not pretending\n  // to be a specific user.\n  if (options.unsafe && !win32) {\n    uid = myUid\n    gid = myGid\n  }\n\n  var pending = 2\n  uidNumber(uid, gid, function (er, uid, gid) {\n    if (er) {\n      tarball.emit('error', er)\n      return tarball.end()\n    }\n    if (0 === --pending) next()\n  })\n  if (!options.keepFiles) {\n    rm(unpackTarget, function (er) {\n      if (er) {\n        tarball.emit('error', er)\n        return tarball.end()\n      }\n      if (0 === --pending) next()\n    })\n  } else {\n    next()\n  }\n  function next() {\n    // gzip {tarball} --decompress --stdout \\\n    //   | tar -mvxpf - --strip-components={strip} -C {unpackTarget}\n    gunzTarPerm(tarball, unpackTarget, dMode, fMode, uid, gid, defaultName, strip)\n  }\n  return tarball\n}\n\n\nfunction gunzTarPerm(tarball, target, dMode, fMode, uid, gid, defaultName, strip) {\n  debug('modes %j', [dMode.toString(8), fMode.toString(8)])\n\n  function fixEntry(entry) {\n    debug('fixEntry %j', entry.path)\n    // never create things that are user-unreadable,\n    // or dirs that are user-un-listable. Only leads to headaches.\n    var originalMode = entry.mode = entry.mode || entry.props.mode\n    entry.mode = entry.mode | (entry.type === 'Directory' ? dMode : fMode)\n    entry.props.mode = entry.mode\n    if (originalMode !== entry.mode) {\n      debug('modified mode %j', [entry.path, originalMode, entry.mode])\n    }\n\n    // if there's a specific owner uid/gid that we want, then set that\n    if (!win32 &&  typeof uid === 'number' && typeof gid === 'number') {\n      entry.props.uid = entry.uid = uid\n      entry.props.gid = entry.gid = gid\n    }\n  }\n\n  var extractOpts = { type: 'Directory', path: target, strip: strip }\n\n  if (!win32 && typeof uid === 'number' && typeof gid === 'number') {\n    extractOpts.uid = uid\n    extractOpts.gid = gid\n  }\n\n  extractOpts.filter = function () {\n    // symbolic links are not allowed in packages.\n    if (this.type.match(/^.*Link$/)) {\n      debug('excluding symbolic link: ' + this.path.substr(target.length + 1) + ' -> ' + this.linkpath)\n      return false\n    }\n    return true\n  }\n\n\n  type(tarball, function (err, type) {\n    if (err) return tarball.emit('error', err)\n    var strm = tarball\n    if (type === 'gzip') {\n      strm = strm.pipe(zlib.Unzip())\n      strm.on('error', function (er) {\n          if (er) debug('unzip error')\n          tarball.emit('error', er)\n        })\n      type = 'tar'\n    }\n    if (type === 'tar') {\n      strm\n        .pipe(tar.Extract(extractOpts))\n        .on('entry', fixEntry)\n        .on('error', function (er) {\n          if (er) debug('untar error')\n          tarball.emit('error', er)\n        })\n        .on('close', function () {\n          tarball.emit('close')\n        })\n      return\n    }\n    if (type === 'naked-file' && defaultName) {\n      var jsOpts = { path: path.resolve(target, defaultName) }\n\n      if (!win32 && typeof uid === 'number' && typeof gid === 'number') {\n        jsOpts.uid = uid\n        jsOpts.gid = gid\n      }\n\n      strm\n        .pipe(fstream.Writer(jsOpts))\n        .on('error', function (er) {\n          if (er) debug('copy error')\n          tarball.emit('error', er)\n        })\n        .on('close', function () {\n          tarball.emit('close')\n        })\n      return\n    }\n\n    return tarball.emit('error', new Error('Unrecognised package type'));\n  })\n}\n\nfunction type(stream, callback) {\n  stream.on('error', handle)\n  stream.on('data', parse)\n  function handle(err) {\n    stream.removeListener('data', parse)\n    stream.removeListener('error', handle)\n  }\n  function parse(chunk) {\n    // detect what it is.\n    // Then, depending on that, we'll figure out whether it's\n    // a single-file module, gzipped tarball, or naked tarball.\n\n    // gzipped files all start with 1f8b08\n    if (chunk[0] === 0x1F && chunk[1] === 0x8B && chunk[2] === 0x08) {\n      callback(null, 'gzip')\n    } else if (chunk.toString().match(/^package\\/\\u0000/)) {\n      // note, this will only pick up on tarballs with a root directory called package\n      callback(null, 'tar')\n    } else {\n      callback(null, 'naked-file')\n    }\n\n    // now un-hook, and re-emit the chunk\n    stream.removeListener('data', parse)\n    stream.removeListener('error', handle)\n    stream.unshift(chunk)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}