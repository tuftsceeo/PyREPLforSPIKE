{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n  // Read the first 150 bytes from the file\n  const size = 150;\n  const buffer = Buffer.alloc(size);\n  let fd;\n\n  try {\n    fd = fs.openSync(command, 'r');\n    fs.readSync(fd, buffer, 0, size, 0);\n    fs.closeSync(fd);\n  } catch (e) {\n    /* Empty */\n  } // Attempt to extract shebang (null is returned if not a shebang)\n\n\n  return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;","map":{"version":3,"names":["fs","require","shebangCommand","readShebang","command","size","buffer","Buffer","alloc","fd","openSync","readSync","closeSync","e","toString","module","exports"],"sources":["C:/Users/gsess/node_modules/cross-spawn/lib/util/readShebang.js"],"sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    const buffer = Buffer.alloc(size);\n\n    let fd;\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, size, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;\n"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,iBAAD,CAA9B;;AAEA,SAASE,WAAT,CAAqBC,OAArB,EAA8B;EAC1B;EACA,MAAMC,IAAI,GAAG,GAAb;EACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAaH,IAAb,CAAf;EAEA,IAAII,EAAJ;;EAEA,IAAI;IACAA,EAAE,GAAGT,EAAE,CAACU,QAAH,CAAYN,OAAZ,EAAqB,GAArB,CAAL;IACAJ,EAAE,CAACW,QAAH,CAAYF,EAAZ,EAAgBH,MAAhB,EAAwB,CAAxB,EAA2BD,IAA3B,EAAiC,CAAjC;IACAL,EAAE,CAACY,SAAH,CAAaH,EAAb;EACH,CAJD,CAIE,OAAOI,CAAP,EAAU;IAAE;EAAa,CAXD,CAa1B;;;EACA,OAAOX,cAAc,CAACI,MAAM,CAACQ,QAAP,EAAD,CAArB;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiBb,WAAjB"},"metadata":{},"sourceType":"script"}