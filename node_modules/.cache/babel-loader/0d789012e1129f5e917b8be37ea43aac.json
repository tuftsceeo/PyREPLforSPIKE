{"ast":null,"code":"'use strict';\n\nconst color = require('kleur');\n\nconst {\n  cursor\n} = require('sisteransi');\n\nconst Prompt = require('./prompt');\n\nconst {\n  clear,\n  figures,\n  style,\n  wrap,\n  entriesToDisplay\n} = require('../util');\n/**\n * MultiselectPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of choice objects\n * @param {String} [opts.hint] Hint to display\n * @param {String} [opts.warn] Hint shown for disabled choices\n * @param {Number} [opts.max] Max choices\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {Number} [opts.optionsPerPage=10] Max options to display at once\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n */\n\n\nclass MultiselectPrompt extends Prompt {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(opts);\n    this.msg = opts.message;\n    this.cursor = opts.cursor || 0;\n    this.scrollIndex = opts.cursor || 0;\n    this.hint = opts.hint || '';\n    this.warn = opts.warn || '- This option is disabled -';\n    this.minSelected = opts.min;\n    this.showMinError = false;\n    this.maxChoices = opts.max;\n    this.instructions = opts.instructions;\n    this.optionsPerPage = opts.optionsPerPage || 10;\n    this.value = opts.choices.map((ch, idx) => {\n      if (typeof ch === 'string') ch = {\n        title: ch,\n        value: idx\n      };\n      return {\n        title: ch && (ch.title || ch.value || ch),\n        description: ch && ch.description,\n        value: ch && (ch.value === undefined ? idx : ch.value),\n        selected: ch && ch.selected,\n        disabled: ch && ch.disabled\n      };\n    });\n    this.clear = clear('', this.out.columns);\n\n    if (!opts.overrideRender) {\n      this.render();\n    }\n  }\n\n  reset() {\n    this.value.map(v => !v.selected);\n    this.cursor = 0;\n    this.fire();\n    this.render();\n  }\n\n  selected() {\n    return this.value.filter(v => v.selected);\n  }\n\n  exit() {\n    this.abort();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    const selected = this.value.filter(e => e.selected);\n\n    if (this.minSelected && selected.length < this.minSelected) {\n      this.showMinError = true;\n      this.render();\n    } else {\n      this.done = true;\n      this.aborted = false;\n      this.fire();\n      this.render();\n      this.out.write('\\n');\n      this.close();\n    }\n  }\n\n  first() {\n    this.cursor = 0;\n    this.render();\n  }\n\n  last() {\n    this.cursor = this.value.length - 1;\n    this.render();\n  }\n\n  next() {\n    this.cursor = (this.cursor + 1) % this.value.length;\n    this.render();\n  }\n\n  up() {\n    if (this.cursor === 0) {\n      this.cursor = this.value.length - 1;\n    } else {\n      this.cursor--;\n    }\n\n    this.render();\n  }\n\n  down() {\n    if (this.cursor === this.value.length - 1) {\n      this.cursor = 0;\n    } else {\n      this.cursor++;\n    }\n\n    this.render();\n  }\n\n  left() {\n    this.value[this.cursor].selected = false;\n    this.render();\n  }\n\n  right() {\n    if (this.value.filter(e => e.selected).length >= this.maxChoices) return this.bell();\n    this.value[this.cursor].selected = true;\n    this.render();\n  }\n\n  handleSpaceToggle() {\n    const v = this.value[this.cursor];\n\n    if (v.selected) {\n      v.selected = false;\n      this.render();\n    } else if (v.disabled || this.value.filter(e => e.selected).length >= this.maxChoices) {\n      return this.bell();\n    } else {\n      v.selected = true;\n      this.render();\n    }\n  }\n\n  toggleAll() {\n    if (this.maxChoices !== undefined || this.value[this.cursor].disabled) {\n      return this.bell();\n    }\n\n    const newSelected = !this.value[this.cursor].selected;\n    this.value.filter(v => !v.disabled).forEach(v => v.selected = newSelected);\n    this.render();\n  }\n\n  _(c, key) {\n    if (c === ' ') {\n      this.handleSpaceToggle();\n    } else if (c === 'a') {\n      this.toggleAll();\n    } else {\n      return this.bell();\n    }\n  }\n\n  renderInstructions() {\n    if (this.instructions === undefined || this.instructions) {\n      if (typeof this.instructions === 'string') {\n        return this.instructions;\n      }\n\n      return '\\nInstructions:\\n' + `    ${figures.arrowUp}/${figures.arrowDown}: Highlight option\\n` + `    ${figures.arrowLeft}/${figures.arrowRight}/[space]: Toggle selection\\n` + (this.maxChoices === undefined ? `    a: Toggle all\\n` : '') + `    enter/return: Complete answer`;\n    }\n\n    return '';\n  }\n\n  renderOption(cursor, v, i, arrowIndicator) {\n    const prefix = (v.selected ? color.green(figures.radioOn) : figures.radioOff) + ' ' + arrowIndicator + ' ';\n    let title, desc;\n\n    if (v.disabled) {\n      title = cursor === i ? color.gray().underline(v.title) : color.strikethrough().gray(v.title);\n    } else {\n      title = cursor === i ? color.cyan().underline(v.title) : v.title;\n\n      if (cursor === i && v.description) {\n        desc = ` - ${v.description}`;\n\n        if (prefix.length + title.length + desc.length >= this.out.columns || v.description.split(/\\r?\\n/).length > 1) {\n          desc = '\\n' + wrap(v.description, {\n            margin: prefix.length,\n            width: this.out.columns\n          });\n        }\n      }\n    }\n\n    return prefix + title + color.gray(desc || '');\n  } // shared with autocompleteMultiselect\n\n\n  paginateOptions(options) {\n    if (options.length === 0) {\n      return color.red('No matches for this query.');\n    }\n\n    let {\n      startIndex,\n      endIndex\n    } = entriesToDisplay(this.cursor, options.length, this.optionsPerPage);\n    let prefix,\n        styledOptions = [];\n\n    for (let i = startIndex; i < endIndex; i++) {\n      if (i === startIndex && startIndex > 0) {\n        prefix = figures.arrowUp;\n      } else if (i === endIndex - 1 && endIndex < options.length) {\n        prefix = figures.arrowDown;\n      } else {\n        prefix = ' ';\n      }\n\n      styledOptions.push(this.renderOption(this.cursor, options[i], i, prefix));\n    }\n\n    return '\\n' + styledOptions.join('\\n');\n  } // shared with autocomleteMultiselect\n\n\n  renderOptions(options) {\n    if (!this.done) {\n      return this.paginateOptions(options);\n    }\n\n    return '';\n  }\n\n  renderDoneOrInstructions() {\n    if (this.done) {\n      return this.value.filter(e => e.selected).map(v => v.title).join(', ');\n    }\n\n    const output = [color.gray(this.hint), this.renderInstructions()];\n\n    if (this.value[this.cursor].disabled) {\n      output.push(color.yellow(this.warn));\n    }\n\n    return output.join(' ');\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);\n    super.render(); // print prompt\n\n    let prompt = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(false), this.renderDoneOrInstructions()].join(' ');\n\n    if (this.showMinError) {\n      prompt += color.red(`You must select a minimum of ${this.minSelected} choices.`);\n      this.showMinError = false;\n    }\n\n    prompt += this.renderOptions(this.value);\n    this.out.write(this.clear + prompt);\n    this.clear = clear(prompt, this.out.columns);\n  }\n\n}\n\nmodule.exports = MultiselectPrompt;","map":{"version":3,"names":["color","require","cursor","Prompt","clear","figures","style","wrap","entriesToDisplay","MultiselectPrompt","constructor","opts","msg","message","scrollIndex","hint","warn","minSelected","min","showMinError","maxChoices","max","instructions","optionsPerPage","value","choices","map","ch","idx","title","description","undefined","selected","disabled","out","columns","overrideRender","render","reset","v","fire","filter","exit","abort","done","aborted","write","close","submit","e","length","first","last","next","up","down","left","right","bell","handleSpaceToggle","toggleAll","newSelected","forEach","_","c","key","renderInstructions","arrowUp","arrowDown","arrowLeft","arrowRight","renderOption","i","arrowIndicator","prefix","green","radioOn","radioOff","desc","gray","underline","strikethrough","cyan","split","margin","width","paginateOptions","options","red","startIndex","endIndex","styledOptions","push","join","renderOptions","renderDoneOrInstructions","output","yellow","closed","firstRender","hide","prompt","symbol","bold","delimiter","module","exports"],"sources":["C:/Users/gsess/node_modules/prompts/lib/elements/multiselect.js"],"sourcesContent":["'use strict';\n\nconst color = require('kleur');\nconst { cursor } = require('sisteransi');\nconst Prompt = require('./prompt');\nconst { clear, figures, style, wrap, entriesToDisplay } = require('../util');\n\n/**\n * MultiselectPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of choice objects\n * @param {String} [opts.hint] Hint to display\n * @param {String} [opts.warn] Hint shown for disabled choices\n * @param {Number} [opts.max] Max choices\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {Number} [opts.optionsPerPage=10] Max options to display at once\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n */\nclass MultiselectPrompt extends Prompt {\n  constructor(opts={}) {\n    super(opts);\n    this.msg = opts.message;\n    this.cursor = opts.cursor || 0;\n    this.scrollIndex = opts.cursor || 0;\n    this.hint = opts.hint || '';\n    this.warn = opts.warn || '- This option is disabled -';\n    this.minSelected = opts.min;\n    this.showMinError = false;\n    this.maxChoices = opts.max;\n    this.instructions = opts.instructions;\n    this.optionsPerPage = opts.optionsPerPage || 10;\n    this.value = opts.choices.map((ch, idx) => {\n      if (typeof ch === 'string')\n        ch = {title: ch, value: idx};\n      return {\n        title: ch && (ch.title || ch.value || ch),\n        description: ch && ch.description,\n        value: ch && (ch.value === undefined ? idx : ch.value),\n        selected: ch && ch.selected,\n        disabled: ch && ch.disabled\n      };\n    });\n    this.clear = clear('', this.out.columns);\n    if (!opts.overrideRender) {\n      this.render();\n    }\n  }\n\n  reset() {\n    this.value.map(v => !v.selected);\n    this.cursor = 0;\n    this.fire();\n    this.render();\n  }\n\n  selected() {\n    return this.value.filter(v => v.selected);\n  }\n\n  exit() {\n    this.abort();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    const selected = this.value\n      .filter(e => e.selected);\n    if (this.minSelected && selected.length < this.minSelected) {\n      this.showMinError = true;\n      this.render();\n    } else {\n      this.done = true;\n      this.aborted = false;\n      this.fire();\n      this.render();\n      this.out.write('\\n');\n      this.close();\n    }\n  }\n\n  first() {\n    this.cursor = 0;\n    this.render();\n  }\n\n  last() {\n    this.cursor = this.value.length - 1;\n    this.render();\n  }\n  next() {\n    this.cursor = (this.cursor + 1) % this.value.length;\n    this.render();\n  }\n\n  up() {\n    if (this.cursor === 0) {\n      this.cursor = this.value.length - 1;\n    } else {\n      this.cursor--;\n    }\n    this.render();\n  }\n\n  down() {\n    if (this.cursor === this.value.length - 1) {\n      this.cursor = 0;\n    } else {\n      this.cursor++;\n    }\n    this.render();\n  }\n\n  left() {\n    this.value[this.cursor].selected = false;\n    this.render();\n  }\n\n  right() {\n    if (this.value.filter(e => e.selected).length >= this.maxChoices) return this.bell();\n    this.value[this.cursor].selected = true;\n    this.render();\n  }\n\n  handleSpaceToggle() {\n    const v = this.value[this.cursor];\n\n    if (v.selected) {\n      v.selected = false;\n      this.render();\n    } else if (v.disabled || this.value.filter(e => e.selected).length >= this.maxChoices) {\n      return this.bell();\n    } else {\n      v.selected = true;\n      this.render();\n    }\n  }\n\n  toggleAll() {\n    if (this.maxChoices !== undefined || this.value[this.cursor].disabled) {\n      return this.bell();\n    }\n\n    const newSelected = !this.value[this.cursor].selected;\n    this.value.filter(v => !v.disabled).forEach(v => v.selected = newSelected);\n    this.render();\n  }\n\n  _(c, key) {\n    if (c === ' ') {\n      this.handleSpaceToggle();\n    } else if (c === 'a') {\n      this.toggleAll();\n    } else {\n      return this.bell();\n    }\n  }\n\n  renderInstructions() {\n    if (this.instructions === undefined || this.instructions) {\n      if (typeof this.instructions === 'string') {\n        return this.instructions;\n      }\n      return '\\nInstructions:\\n'\n        + `    ${figures.arrowUp}/${figures.arrowDown}: Highlight option\\n`\n        + `    ${figures.arrowLeft}/${figures.arrowRight}/[space]: Toggle selection\\n`\n        + (this.maxChoices === undefined ? `    a: Toggle all\\n` : '')\n        + `    enter/return: Complete answer`;\n    }\n    return '';\n  }\n\n  renderOption(cursor, v, i, arrowIndicator) {\n    const prefix = (v.selected ? color.green(figures.radioOn) : figures.radioOff) + ' ' + arrowIndicator + ' ';\n    let title, desc;\n\n    if (v.disabled) {\n      title = cursor === i ? color.gray().underline(v.title) : color.strikethrough().gray(v.title);\n    } else {\n      title = cursor === i ? color.cyan().underline(v.title) : v.title;\n      if (cursor === i && v.description) {\n        desc = ` - ${v.description}`;\n        if (prefix.length + title.length + desc.length >= this.out.columns\n          || v.description.split(/\\r?\\n/).length > 1) {\n          desc = '\\n' + wrap(v.description, { margin: prefix.length, width: this.out.columns });\n        }\n      }\n    }\n\n    return prefix + title + color.gray(desc || '');\n  }\n\n  // shared with autocompleteMultiselect\n  paginateOptions(options) {\n    if (options.length === 0) {\n      return color.red('No matches for this query.');\n    }\n\n    let { startIndex, endIndex } = entriesToDisplay(this.cursor, options.length, this.optionsPerPage);\n    let prefix, styledOptions = [];\n\n    for (let i = startIndex; i < endIndex; i++) {\n      if (i === startIndex && startIndex > 0) {\n        prefix = figures.arrowUp;\n      } else if (i === endIndex - 1 && endIndex < options.length) {\n        prefix = figures.arrowDown;\n      } else {\n        prefix = ' ';\n      }\n      styledOptions.push(this.renderOption(this.cursor, options[i], i, prefix));\n    }\n\n    return '\\n' + styledOptions.join('\\n');\n  }\n\n  // shared with autocomleteMultiselect\n  renderOptions(options) {\n    if (!this.done) {\n      return this.paginateOptions(options);\n    }\n    return '';\n  }\n\n  renderDoneOrInstructions() {\n    if (this.done) {\n      return this.value\n        .filter(e => e.selected)\n        .map(v => v.title)\n        .join(', ');\n    }\n\n    const output = [color.gray(this.hint), this.renderInstructions()];\n\n    if (this.value[this.cursor].disabled) {\n      output.push(color.yellow(this.warn));\n    }\n    return output.join(' ');\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);\n    super.render();\n\n    // print prompt\n    let prompt = [\n      style.symbol(this.done, this.aborted),\n      color.bold(this.msg),\n      style.delimiter(false),\n      this.renderDoneOrInstructions()\n    ].join(' ');\n    if (this.showMinError) {\n      prompt += color.red(`You must select a minimum of ${this.minSelected} choices.`);\n      this.showMinError = false;\n    }\n    prompt += this.renderOptions(this.value);\n\n    this.out.write(this.clear + prompt);\n    this.clear = clear(prompt, this.out.columns);\n  }\n}\n\nmodule.exports = MultiselectPrompt;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}