{"ast":null,"code":"ace.define(\"ace/mode/json_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JsonHighlightRules = function JsonHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"variable\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n      }, {\n        token: \"string\",\n        // single line\n        regex: '\"',\n        next: \"string\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: \"text\",\n        // single quoted strings are not allowed\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"comment\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\/\\\\/.*$\"\n      }, {\n        token: \"comment.start\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[,]/\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"string\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"comment\": [{\n        token: \"comment.end\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n  };\n\n  oop.inherits(JsonHighlightRules, TextHighlightRules);\n  exports.JsonHighlightRules = JsonHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/json\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/json_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/cstyle\", \"ace/worker/worker_client\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var HighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\n\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n\n  var Mode = function Mode() {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], \"ace/mode/json_worker\", \"JsonWorker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"annotate\", function (e) {\n        session.setAnnotations(e.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n\n    this.$id = \"ace/mode/json\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/json\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","JsonHighlightRules","$rules","token","regex","next","defaultToken","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","HighlightRules","CstyleBehaviour","CStyleFoldMode","WorkerClient","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","state","tab","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id"],"sources":["C:/Users/gsess/Documents/React/repl/node_modules/ace-builds/src-noconflict/mode-json.js"],"sourcesContent":["ace.define(\"ace/mode/json_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JsonHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"variable\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n            }, {\n                token : \"string\", // single line\n                regex : '\"',\n                next  : \"string\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : \"text\", // single quoted strings are not allowed\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"comment\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\/.*$\"\n            }, {\n                token : \"comment.start\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\*\",\n                next  : \"comment\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[,]/\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"string\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"start\"\n            }, {\n                defaultToken : \"string\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment.end\", // comments are not allowed, but who cares?\n                regex : \"\\\\*\\\\/\",\n                next  : \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ]\n    };\n    \n};\n\noop.inherits(JsonHighlightRules, TextHighlightRules);\n\nexports.JsonHighlightRules = JsonHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/json\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/json_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\",\"ace/worker/worker_client\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/json_worker\", \"JsonWorker\");\n        worker.attachToDocument(session.getDocument());\n\n        worker.on(\"annotate\", function(e) {\n            session.setAnnotations(e.data);\n        });\n\n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n\n        return worker;\n    };\n\n\n    this.$id = \"ace/mode/json\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/json\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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"},"metadata":{},"sourceType":"script"}