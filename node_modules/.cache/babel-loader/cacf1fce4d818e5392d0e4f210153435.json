{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gsess\\\\Documents\\\\React\\\\repl\\\\src\\\\components\\\\IDE\\\\TextPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddButton from \"./AddButton\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TextPopup(props) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  function handleClose(confirmed) {\n    let submissionText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    setOpen(false);\n\n    if (confirmed && submissionText != \"\") {\n      openSnack('\"' + submissionText + '\" was added as a REPL');\n    } else {\n      openSnack(\"REPL addition was cancelled\");\n    }\n  }\n\n  function openSnack(snackText) {\n    setSnackbarMessage(snackText);\n    setSnackOpen(true);\n  }\n\n  function closeSnack() {\n    setSnackOpen(false);\n  }\n\n  function typing(event) {\n    const newInput = event.target.value;\n    setInput(newInput);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddButton, {\n      onClick: () => handleOpen()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: props.formTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: props.formBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"REPL Name\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          onChange: typing,\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClose(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClose(true, input),\n          children: \"Create REPL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackOpen,\n      autoHideDuration: 5000,\n      onClose: closeSnack,\n      message: snackbarMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TextPopup, \"nmzITEqnkJFrohiLyXWGD+MoN10=\");\n\n_c = TextPopup;\nexport default TextPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextPopup\");","map":{"version":3,"names":["React","useState","AddButton","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Snackbar","TextPopup","props","open","setOpen","snackOpen","setSnackOpen","input","setInput","snackbarMessage","setSnackbarMessage","handleOpen","handleClose","confirmed","submissionText","openSnack","snackText","closeSnack","typing","event","newInput","target","value","formTitle","formBody"],"sources":["C:/Users/gsess/Documents/React/repl/src/components/IDE/TextPopup.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport AddButton from \"./AddButton\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\n\r\n\r\n\r\nfunction TextPopup(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const [snackOpen, setSnackOpen] = useState(false);\r\n    const [input, setInput] = useState(\"\");\r\n    const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n\r\n\r\n    function handleOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleClose(confirmed, submissionText = \"\") {\r\n        setOpen(false);\r\n        if (confirmed && submissionText != \"\") {\r\n            openSnack('\"' + submissionText + '\" was added as a REPL');\r\n        }\r\n        else {\r\n            openSnack(\"REPL addition was cancelled\");\r\n        }\r\n    }\r\n\r\n    function openSnack(snackText) {\r\n        setSnackbarMessage(snackText)\r\n        setSnackOpen(true);\r\n    }\r\n\r\n    function closeSnack() {\r\n        setSnackOpen(false);\r\n    }\r\n\r\n    function typing(event) {\r\n        const newInput = event.target.value;\r\n        setInput(newInput);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AddButton onClick={() => handleOpen()} />\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>{props.formTitle}</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    {props.formBody}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"REPL Name\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                    onChange={typing}\r\n                    value={input}\r\n                />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={() => handleClose(false)}>Cancel</Button>\r\n                <Button onClick={() => handleClose(true, input)}>Create REPL</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                open={snackOpen}\r\n                autoHideDuration={5000}\r\n                onClose={closeSnack}\r\n                message={snackbarMessage}\r\n                \r\n            />\r\n                    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextPopup;"],"mappings":"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"},"metadata":{},"sourceType":"module"}