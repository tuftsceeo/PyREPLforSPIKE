{"ast":null,"code":"'use strict';\n\nconst cp = require('child_process');\n\nconst parse = require('./lib/parse');\n\nconst enoent = require('./lib/enoent');\n\nfunction spawn(command, args, options) {\n  // Parse the arguments\n  const parsed = parse(command, args, options); // Spawn the child process\n\n  const spawned = cp.spawn(parsed.command, parsed.args, parsed.options); // Hook into child process \"exit\" event to emit an error if the command\n  // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n\n  enoent.hookChildProcess(spawned, parsed);\n  return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n  // Parse the arguments\n  const parsed = parse(command, args, options); // Spawn the child process\n\n  const result = cp.spawnSync(parsed.command, parsed.args, parsed.options); // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n\n  result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n  return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;","map":{"version":3,"names":["cp","require","parse","enoent","spawn","command","args","options","parsed","spawned","hookChildProcess","spawnSync","result","error","verifyENOENTSync","status","module","exports","sync","_parse","_enoent"],"sources":["C:/Users/gsess/node_modules/cross-spawn/index.js"],"sourcesContent":["'use strict';\n\nconst cp = require('child_process');\nconst parse = require('./lib/parse');\nconst enoent = require('./lib/enoent');\n\nfunction spawn(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,eAAD,CAAlB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAArB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,cAAD,CAAtB;;AAEA,SAASG,KAAT,CAAeC,OAAf,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuC;EACnC;EACA,MAAMC,MAAM,GAAGN,KAAK,CAACG,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,CAApB,CAFmC,CAInC;;EACA,MAAME,OAAO,GAAGT,EAAE,CAACI,KAAH,CAASI,MAAM,CAACH,OAAhB,EAAyBG,MAAM,CAACF,IAAhC,EAAsCE,MAAM,CAACD,OAA7C,CAAhB,CALmC,CAOnC;EACA;;EACAJ,MAAM,CAACO,gBAAP,CAAwBD,OAAxB,EAAiCD,MAAjC;EAEA,OAAOC,OAAP;AACH;;AAED,SAASE,SAAT,CAAmBN,OAAnB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2C;EACvC;EACA,MAAMC,MAAM,GAAGN,KAAK,CAACG,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,CAApB,CAFuC,CAIvC;;EACA,MAAMK,MAAM,GAAGZ,EAAE,CAACW,SAAH,CAAaH,MAAM,CAACH,OAApB,EAA6BG,MAAM,CAACF,IAApC,EAA0CE,MAAM,CAACD,OAAjD,CAAf,CALuC,CAOvC;;EACAK,MAAM,CAACC,KAAP,GAAeD,MAAM,CAACC,KAAP,IAAgBV,MAAM,CAACW,gBAAP,CAAwBF,MAAM,CAACG,MAA/B,EAAuCP,MAAvC,CAA/B;EAEA,OAAOI,MAAP;AACH;;AAEDI,MAAM,CAACC,OAAP,GAAiBb,KAAjB;AACAY,MAAM,CAACC,OAAP,CAAeb,KAAf,GAAuBA,KAAvB;AACAY,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAsBP,SAAtB;AAEAK,MAAM,CAACC,OAAP,CAAeE,MAAf,GAAwBjB,KAAxB;AACAc,MAAM,CAACC,OAAP,CAAeG,OAAf,GAAyBjB,MAAzB"},"metadata":{},"sourceType":"script"}