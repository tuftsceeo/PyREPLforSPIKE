{"ast":null,"code":"import _toConsumableArray from\"C:/Users/gsess/Documents/React/repl/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/gsess/Documents/React/repl/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/*\r\n * App.js\r\n * By: Gabriel Sessions\r\n * Last Edit: 6/21/2022\r\n * \r\n * Main Application File for PyREPL\r\n * \r\n * Controls information flow from the Editor to the Serial Port\r\n * and from the Serial Port to the User Interface\r\n * \r\n */import React,{useState}from\"react\";import Header from\"./Header\";import IDE from\"./IDE\";import Tabs from\"./Tabs/Tabs\";import Serial from\"./Serial/Serial\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Initialization Code\n// Calls saved editor data from LocalStorage, if avaliable\n// and initializes the website with those values.\nvar LOCALSTORAGE_KEY=\"appData\";var editorInitialValue=null;var ls=getLocalStorage();if(ls==null){editorInitialValue=[{name:\"Main\",id:0,code:\"\"}];}else{editorInitialValue=[];var lsJSON=JSON.parse(ls);Object.values(lsJSON).forEach(function(value,key){editorInitialValue.push(value);});}var _useState=useState(editorInitialValue),_useState2=_slicedToArray(_useState,2),editors=_useState2[0],setEditors=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),activeIDE=_useState4[0],setActiveIDE=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),consoleOutput=_useState6[0],setConsoleOutput=_useState6[1];// BUG: Generate unique IDs (generator or editor name)\n// AddREPL\n// Adds a new editor to the editors array\nfunction addREPL(newEditorName){setEditors(function(prev){return[].concat(_toConsumableArray(prev),[{name:newEditorName,id:prev.length+1,code:\"\"}]);});}// pipeOutputToConsole(value)\n// \n// Retrieves serial port output (read) and re-renders\n// the console with the read value.\n//\n// Parameter: A new string to add to the console\nfunction pipeOutputToConsole(value){setConsoleOutput(function(prev){return prev+value;});}// Updates the code in the editor that is currently in use\n// and saves the result to LocalStorage\nfunction editCurrentFile(newCode){setEditors(function(prev){prev[activeIDE].code=newCode;return prev;});saveToLocalStorage();}function getCurrentCode(){return editors[activeIDE].code;}function saveToLocalStorage(){var editorJSON={};editors.forEach(function(element,index){editorJSON[index]=element;});localStorage.setItem(LOCALSTORAGE_KEY,JSON.stringify(editorJSON));}function getLocalStorage(){return localStorage.getItem(LOCALSTORAGE_KEY);}// Outputs serial directions and a button to connect to WebSerial\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex mx-2 justify-center\",children:/*#__PURE__*/_jsx(Tabs,{switchIDE:setActiveIDE,addREPL:addREPL})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Serial,{getCurrentCode:getCurrentCode,exportConsole:pipeOutputToConsole})})]}),editors.filter(function(editor,index){return index===activeIDE;}).map(function(editor){return/*#__PURE__*/_jsx(IDE,{id:editor.id,content:consoleOutput,code:editor.code,onEdit:editCurrentFile},editor.id);})]});}export default App;","map":{"version":3,"names":["React","useState","Header","IDE","Tabs","Serial","App","LOCALSTORAGE_KEY","editorInitialValue","ls","getLocalStorage","name","id","code","lsJSON","JSON","parse","Object","values","forEach","value","key","push","editors","setEditors","activeIDE","setActiveIDE","consoleOutput","setConsoleOutput","addREPL","newEditorName","prev","length","pipeOutputToConsole","editCurrentFile","newCode","saveToLocalStorage","getCurrentCode","editorJSON","element","index","localStorage","setItem","stringify","getItem","filter","editor","map"],"sources":["C:/Users/gsess/Documents/React/repl/src/components/App.js"],"sourcesContent":["/*\r\n * App.js\r\n * By: Gabriel Sessions\r\n * Last Edit: 6/21/2022\r\n * \r\n * Main Application File for PyREPL\r\n * \r\n * Controls information flow from the Editor to the Serial Port\r\n * and from the Serial Port to the User Interface\r\n * \r\n */ \r\n\r\nimport React, {useState} from \"react\";\r\nimport Header from \"./Header\";\r\nimport IDE from \"./IDE\";\r\nimport Tabs from\"./Tabs/Tabs\";\r\nimport Serial from \"./Serial/Serial\"\r\n\r\n\r\nfunction App() {\r\n\r\n    // Initialization Code\r\n    // Calls saved editor data from LocalStorage, if avaliable\r\n    // and initializes the website with those values.\r\n    const LOCALSTORAGE_KEY = \"appData\";\r\n\r\n    let editorInitialValue = null;\r\n    const ls = getLocalStorage();\r\n    if (ls == null) {\r\n        editorInitialValue = [{\r\n            name: \"Main\",\r\n            id: 0,\r\n            code: \"\"\r\n        }]\r\n    }\r\n    else {\r\n        editorInitialValue = [];\r\n        const lsJSON = JSON.parse(ls)\r\n        Object.values(lsJSON).forEach((value, key) => {\r\n            editorInitialValue.push(value);\r\n        });\r\n    }\r\n\r\n    const [editors, setEditors] = useState(editorInitialValue);\r\n    const [activeIDE, setActiveIDE] = useState(0);\r\n    const [consoleOutput, setConsoleOutput] = useState(\"\");\r\n\r\n\r\n    // BUG: Generate unique IDs (generator or editor name)\r\n    // AddREPL\r\n    // Adds a new editor to the editors array\r\n    function addREPL(newEditorName) {\r\n        setEditors((prev) => {\r\n            return ([...prev, {\r\n                name: newEditorName,\r\n                id: (prev.length + 1),\r\n                code: \"\"\r\n            }])\r\n        })\r\n    }\r\n\r\n    // pipeOutputToConsole(value)\r\n    // \r\n    // Retrieves serial port output (read) and re-renders\r\n    // the console with the read value.\r\n    //\r\n    // Parameter: A new string to add to the console\r\n    function pipeOutputToConsole(value) {\r\n        setConsoleOutput((prev) => {\r\n            return prev + value;\r\n        })\r\n    }\r\n\r\n\r\n    // Updates the code in the editor that is currently in use\r\n    // and saves the result to LocalStorage\r\n    function editCurrentFile(newCode) {\r\n        setEditors((prev) => {\r\n            prev[activeIDE].code = newCode;\r\n            return (prev);\r\n        })\r\n        saveToLocalStorage();\r\n    }\r\n\r\n    function getCurrentCode() {\r\n        return editors[activeIDE].code;\r\n    }\r\n\r\n    function saveToLocalStorage() {\r\n        let editorJSON = {}\r\n        editors.forEach((element, index) => {\r\n            editorJSON[index]  = element;\r\n        });\r\n        localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(editorJSON))\r\n        \r\n    }\r\n\r\n    function getLocalStorage() {\r\n        return localStorage.getItem(LOCALSTORAGE_KEY);\r\n    }\r\n\r\n\r\n    // Outputs serial directions and a button to connect to WebSerial\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"grid grid-cols-2\">\r\n                <div className=\"flex mx-2 justify-center\">\r\n                    <Tabs switchIDE = {setActiveIDE} addREPL={addREPL} />\r\n                </div>\r\n                <div>\r\n                    <Serial getCurrentCode={getCurrentCode} exportConsole={pipeOutputToConsole} />\r\n                </div>\r\n            </div>\r\n\r\n            {   editors.filter((editor, index) => {\r\n                    return index === activeIDE;\r\n                }).map((editor) => {\r\n                    return (\r\n                        <IDE key={editor.id} id={editor.id} content={consoleOutput} code={editor.code} onEdit={editCurrentFile}/>\r\n                    )\r\n                }) \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}