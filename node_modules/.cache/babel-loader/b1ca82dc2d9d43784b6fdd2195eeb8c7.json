{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gsess\\\\Documents\\\\React\\\\repl\\\\src\\\\components\\\\Serial\\\\Serial.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Fab from '@mui/material/Fab';\nimport CableIcon from '@mui/icons-material/Cable';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport WebSerial from \"./WebSerial\";\n/*\r\n    InitWebSerial\r\n    - Initializes a Web Serial Port and returns the initialized port\r\n    - Returns the port if successful, null otherwise\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet port = null;\n\nasync function initWebSerial() {\n  port = await navigator.serial.getPorts();\n  port = await navigator.serial.requestPort({// filters:[filter]\n  }); // wait for the port to open.\n\n  try {\n    await port.open({\n      baudRate: 115200\n    });\n  } catch (er) {\n    console.log(\"%cTuftsCEEO \", \"color: #3ba336;\", er);\n    await port.close();\n  }\n\n  if (port.readable) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction Serial() {\n  _s();\n\n  const [connectText, setConnectText] = useState(\"Connect SPIKE Here: \");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 mx-2\",\n      children: connectText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Connect Device\",\n      placement: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        onClick: () => {\n          WebSerial();\n        },\n        color: \"warning\",\n        \"aria-label\": \"add\",\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(CableIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Serial, \"3+f/IyzPTWB1xoxbmBmVrvS7FnE=\");\n\n_c = Serial;\nexport default Serial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Serial\");","map":{"version":3,"names":["React","useState","Fab","CableIcon","Tooltip","WebSerial","port","initWebSerial","navigator","serial","getPorts","requestPort","open","baudRate","er","console","log","close","readable","Serial","connectText","setConnectText"],"sources":["C:/Users/gsess/Documents/React/repl/src/components/Serial/Serial.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Fab from '@mui/material/Fab';\r\nimport CableIcon from '@mui/icons-material/Cable';\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport WebSerial from \"./WebSerial\";\r\n\r\n/*\r\n    InitWebSerial\r\n    - Initializes a Web Serial Port and returns the initialized port\r\n    - Returns the port if successful, null otherwise\r\n*/\r\n\r\nlet port = null;\r\n\r\nasync function initWebSerial() {\r\n    port = await navigator.serial.getPorts();\r\n\r\n    port = await navigator.serial.requestPort({\r\n        // filters:[filter]\r\n    });\r\n    \r\n    // wait for the port to open.\r\n    try {\r\n        await port.open({ baudRate: 115200 });\r\n    }\r\n    catch (er) {\r\n        console.log(\"%cTuftsCEEO \", \"color: #3ba336;\", er);\r\n        await port.close();\r\n    }\r\n\r\n    if (port.readable) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction Serial() {\r\n    const [connectText, setConnectText] = useState(\"Connect SPIKE Here: \");\r\n\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            <p className=\"mt-2 mx-2\">{connectText}</p>\r\n            <Tooltip title=\"Connect Device\" placement=\"right\">\r\n                <Fab onClick={() => {WebSerial()}} color=\"warning\" aria-label=\"add\" size=\"small\">\r\n                    <CableIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Serial;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,IAAI,GAAG,IAAX;;AAEA,eAAeC,aAAf,GAA+B;EAC3BD,IAAI,GAAG,MAAME,SAAS,CAACC,MAAV,CAAiBC,QAAjB,EAAb;EAEAJ,IAAI,GAAG,MAAME,SAAS,CAACC,MAAV,CAAiBE,WAAjB,CAA6B,CACtC;EADsC,CAA7B,CAAb,CAH2B,CAO3B;;EACA,IAAI;IACA,MAAML,IAAI,CAACM,IAAL,CAAU;MAAEC,QAAQ,EAAE;IAAZ,CAAV,CAAN;EACH,CAFD,CAGA,OAAOC,EAAP,EAAW;IACPC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,iBAA5B,EAA+CF,EAA/C;IACA,MAAMR,IAAI,CAACW,KAAL,EAAN;EACH;;EAED,IAAIX,IAAI,CAACY,QAAT,EAAmB;IACf,OAAO,IAAP;EACH,CAFD,MAGK;IACD,OAAO,KAAP;EACH;AACJ;;AAED,SAASC,MAAT,GAAkB;EAAA;;EACd,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,sBAAD,CAA9C;EAEA,oBACI;IAAK,SAAS,EAAC,qBAAf;IAAA,wBACI;MAAG,SAAS,EAAC,WAAb;MAAA,UAA0BmB;IAA1B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,OAAD;MAAS,KAAK,EAAC,gBAAf;MAAgC,SAAS,EAAC,OAA1C;MAAA,uBACI,QAAC,GAAD;QAAK,OAAO,EAAE,MAAM;UAACf,SAAS;QAAG,CAAjC;QAAmC,KAAK,EAAC,SAAzC;QAAmD,cAAW,KAA9D;QAAoE,IAAI,EAAC,OAAzE;QAAA,uBACI,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH;;GAfQc,M;;KAAAA,M;AAiBT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}