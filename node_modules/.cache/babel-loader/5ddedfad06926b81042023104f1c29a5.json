{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ace_builds_1 = require(\"ace-builds\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar isEqual = require(\"lodash.isequal\");\n\nvar editorOptions_1 = require(\"./editorOptions\");\n\nvar ace = (0, editorOptions_1.getAceInstance)();\n\nvar ReactAce =\n/** @class */\nfunction (_super) {\n  __extends(ReactAce, _super);\n\n  function ReactAce(props) {\n    var _this = _super.call(this, props) || this;\n\n    editorOptions_1.editorEvents.forEach(function (method) {\n      _this[method] = _this[method].bind(_this);\n    });\n    _this.debounce = editorOptions_1.debounce;\n    return _this;\n  }\n\n  ReactAce.prototype.isInShadow = function (node) {\n    var parent = node && node.parentNode;\n\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  };\n\n  ReactAce.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var _a = this.props,\n        className = _a.className,\n        onBeforeLoad = _a.onBeforeLoad,\n        onValidate = _a.onValidate,\n        mode = _a.mode,\n        focus = _a.focus,\n        theme = _a.theme,\n        fontSize = _a.fontSize,\n        value = _a.value,\n        defaultValue = _a.defaultValue,\n        showGutter = _a.showGutter,\n        wrapEnabled = _a.wrapEnabled,\n        showPrintMargin = _a.showPrintMargin,\n        _b = _a.scrollMargin,\n        scrollMargin = _b === void 0 ? [0, 0, 0, 0] : _b,\n        keyboardHandler = _a.keyboardHandler,\n        onLoad = _a.onLoad,\n        commands = _a.commands,\n        annotations = _a.annotations,\n        markers = _a.markers,\n        placeholder = _a.placeholder;\n    this.editor = ace.edit(this.refEditor);\n\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n\n    var editorProps = Object.keys(this.props.editorProps);\n\n    for (var i = 0; i < editorProps.length; i++) {\n      this.editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n    }\n\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(this.onChange, this.props.debounceChangePeriod);\n    }\n\n    this.editor.renderer.setScrollMargin(scrollMargin[0], scrollMargin[1], scrollMargin[2], scrollMargin[3]);\n\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n\n    this.editor.getSession().setMode(typeof mode === \"string\" ? \"ace/mode/\".concat(mode) : mode);\n    if (theme && theme !== \"\") this.editor.setTheme(\"ace/theme/\".concat(theme));\n    this.editor.setFontSize(typeof fontSize === \"number\" ? \"\".concat(fontSize, \"px\") : fontSize);\n    this.editor.getSession().setValue(!defaultValue ? value || \"\" : defaultValue);\n\n    if (this.props.navigateToFileEnd) {\n      this.editor.navigateFileEnd();\n    }\n\n    this.editor.renderer.setShowGutter(showGutter);\n    this.editor.getSession().setUseWrapMode(wrapEnabled);\n    this.editor.setShowPrintMargin(showPrintMargin);\n    this.editor.on(\"focus\", this.onFocus);\n    this.editor.on(\"blur\", this.onBlur);\n    this.editor.on(\"copy\", this.onCopy);\n    this.editor.on(\"paste\", this.onPaste);\n    this.editor.on(\"change\", this.onChange);\n    this.editor.on(\"input\", this.onInput);\n\n    if (placeholder) {\n      this.updatePlaceholder();\n    }\n\n    this.editor.getSession().selection.on(\"changeSelection\", this.onSelectionChange);\n    this.editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n\n    if (onValidate) {\n      // @ts-ignore types don't include\n      this.editor.getSession().on(\"changeAnnotation\", function () {\n        // tslint:disable-next-line:no-shadowed-variable\n        var annotations = _this.editor.getSession().getAnnotations();\n\n        _this.props.onValidate(annotations);\n      });\n    }\n\n    this.editor.session.on(\"changeScrollTop\", this.onScroll);\n    this.editor.getSession().setAnnotations(annotations || []);\n\n    if (markers && markers.length > 0) {\n      this.handleMarkers(markers);\n    } // get a list of possible options to avoid 'misspelled option errors'\n\n\n    var availableOptions = this.editor.$options;\n    editorOptions_1.editorOptions.forEach(function (option) {\n      if (availableOptions.hasOwnProperty(option)) {\n        // @ts-ignore\n        _this.editor.setOption(option, _this.props[option]);\n      } else if (_this.props[option]) {\n        console.warn(\"ReactAce: editor option \".concat(option, \" was activated but not found. Did you need to import a related tool or did you possibly mispell the option?\"));\n      }\n    });\n    this.handleOptions(this.props);\n\n    if (Array.isArray(commands)) {\n      commands.forEach(function (command) {\n        if (typeof command.exec === \"string\") {\n          _this.editor.commands.bindKey(command.bindKey, command.exec);\n        } else {\n          _this.editor.commands.addCommand(command);\n        }\n      });\n    }\n\n    if (keyboardHandler) {\n      this.editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n    }\n\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n\n    if (onLoad) {\n      onLoad(this.editor);\n    }\n\n    this.editor.resize();\n\n    if (focus) {\n      this.editor.focus();\n    }\n  };\n\n  ReactAce.prototype.componentDidUpdate = function (prevProps) {\n    var oldProps = prevProps;\n    var nextProps = this.props;\n\n    for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n      var option = editorOptions_1.editorOptions[i];\n\n      if (nextProps[option] !== oldProps[option]) {\n        // @ts-ignore\n        this.editor.setOption(option, nextProps[option]);\n      }\n    }\n\n    if (nextProps.className !== oldProps.className) {\n      var appliedClasses = this.refEditor.className;\n      var appliedClassesArray_1 = appliedClasses.trim().split(\" \");\n      var oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(function (oldClass) {\n        var index = appliedClassesArray_1.indexOf(oldClass);\n        appliedClassesArray_1.splice(index, 1);\n      });\n      this.refEditor.className = \" \" + nextProps.className + \" \" + appliedClassesArray_1.join(\" \");\n    } // First process editor value, as it may create a new session (see issue #300)\n\n\n    var valueChanged = this.editor && nextProps.value != null && this.editor.getValue() !== nextProps.value;\n\n    if (valueChanged) {\n      // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n      this.silent = true;\n      var pos = this.editor.session.selection.toJSON();\n      this.editor.setValue(nextProps.value, nextProps.cursorStart);\n      this.editor.session.selection.fromJSON(pos);\n      this.silent = false;\n    }\n\n    if (nextProps.placeholder !== oldProps.placeholder) {\n      this.updatePlaceholder();\n    }\n\n    if (nextProps.mode !== oldProps.mode) {\n      this.editor.getSession().setMode(typeof nextProps.mode === \"string\" ? \"ace/mode/\".concat(nextProps.mode) : nextProps.mode);\n    }\n\n    if (nextProps.theme !== oldProps.theme) {\n      this.editor.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n\n    if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n      if (nextProps.keyboardHandler) {\n        this.editor.setKeyboardHandler(\"ace/keyboard/\" + nextProps.keyboardHandler);\n      } else {\n        this.editor.setKeyboardHandler(null);\n      }\n    }\n\n    if (nextProps.fontSize !== oldProps.fontSize) {\n      this.editor.setFontSize(typeof nextProps.fontSize === \"number\" ? \"\".concat(nextProps.fontSize, \"px\") : nextProps.fontSize);\n    }\n\n    if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n      this.editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n    }\n\n    if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n      this.editor.setShowPrintMargin(nextProps.showPrintMargin);\n    }\n\n    if (nextProps.showGutter !== oldProps.showGutter) {\n      this.editor.renderer.setShowGutter(nextProps.showGutter);\n    }\n\n    if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n      this.handleOptions(nextProps);\n    } // if the value or annotations changed, set the annotations\n    // changing the value may create create a new session which will require annotations to be re-set\n\n\n    if (valueChanged || !isEqual(nextProps.annotations, oldProps.annotations)) {\n      this.editor.getSession().setAnnotations(nextProps.annotations || []);\n    }\n\n    if (!isEqual(nextProps.markers, oldProps.markers) && Array.isArray(nextProps.markers)) {\n      this.handleMarkers(nextProps.markers);\n    } // this doesn't look like it works at all....\n\n\n    if (!isEqual(nextProps.scrollMargin, oldProps.scrollMargin)) {\n      this.handleScrollMargins(nextProps.scrollMargin);\n    }\n\n    if (prevProps.height !== this.props.height || prevProps.width !== this.props.width) {\n      this.editor.resize();\n    }\n\n    if (this.props.focus && !prevProps.focus) {\n      this.editor.focus();\n    }\n  };\n\n  ReactAce.prototype.handleScrollMargins = function (margins) {\n    if (margins === void 0) {\n      margins = [0, 0, 0, 0];\n    }\n\n    this.editor.renderer.setScrollMargin(margins[0], margins[1], margins[2], margins[3]);\n  };\n\n  ReactAce.prototype.componentWillUnmount = function () {\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n  };\n\n  ReactAce.prototype.onChange = function (event) {\n    if (this.props.onChange && !this.silent) {\n      var value = this.editor.getValue();\n      this.props.onChange(value, event);\n    }\n  };\n\n  ReactAce.prototype.onSelectionChange = function (event) {\n    if (this.props.onSelectionChange) {\n      var value = this.editor.getSelection();\n      this.props.onSelectionChange(value, event);\n    }\n  };\n\n  ReactAce.prototype.onCursorChange = function (event) {\n    if (this.props.onCursorChange) {\n      var value = this.editor.getSelection();\n      this.props.onCursorChange(value, event);\n    }\n  };\n\n  ReactAce.prototype.onInput = function (event) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n\n    if (this.props.placeholder) {\n      this.updatePlaceholder();\n    }\n  };\n\n  ReactAce.prototype.onFocus = function (event) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event, this.editor);\n    }\n  };\n\n  ReactAce.prototype.onBlur = function (event) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event, this.editor);\n    }\n  };\n\n  ReactAce.prototype.onCopy = function (_a) {\n    var text = _a.text;\n\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  };\n\n  ReactAce.prototype.onPaste = function (_a) {\n    var text = _a.text;\n\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  };\n\n  ReactAce.prototype.onScroll = function () {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  };\n\n  ReactAce.prototype.handleOptions = function (props) {\n    var setOptions = Object.keys(props.setOptions);\n\n    for (var y = 0; y < setOptions.length; y++) {\n      // @ts-ignore\n      this.editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n    }\n  };\n\n  ReactAce.prototype.handleMarkers = function (markers) {\n    var _this = this; // remove foreground markers\n\n\n    var currentMarkers = this.editor.getSession().getMarkers(true);\n\n    for (var i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    } // remove background markers except active line marker and selected word marker\n\n\n    currentMarkers = this.editor.getSession().getMarkers(false);\n\n    for (var i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i) && currentMarkers[i].clazz !== \"ace_active-line\" && currentMarkers[i].clazz !== \"ace_selected-word\") {\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    } // add new markers\n\n\n    markers.forEach(function (_a) {\n      var startRow = _a.startRow,\n          startCol = _a.startCol,\n          endRow = _a.endRow,\n          endCol = _a.endCol,\n          className = _a.className,\n          type = _a.type,\n          _b = _a.inFront,\n          inFront = _b === void 0 ? false : _b;\n      var range = new ace_builds_1.Range(startRow, startCol, endRow, endCol);\n\n      _this.editor.getSession().addMarker(range, className, type, inFront);\n    });\n  };\n\n  ReactAce.prototype.updatePlaceholder = function () {\n    // Adapted from https://stackoverflow.com/questions/26695708/how-can-i-add-placeholder-text-when-the-editor-is-empty\n    var editor = this.editor;\n    var placeholder = this.props.placeholder;\n    var showPlaceholder = !editor.session.getValue().length;\n    var node = editor.renderer.placeholderNode;\n\n    if (!showPlaceholder && node) {\n      editor.renderer.scroller.removeChild(editor.renderer.placeholderNode);\n      editor.renderer.placeholderNode = null;\n    } else if (showPlaceholder && !node) {\n      node = editor.renderer.placeholderNode = document.createElement(\"div\");\n      node.textContent = placeholder || \"\";\n      node.className = \"ace_comment ace_placeholder\";\n      node.style.padding = \"0 9px\";\n      node.style.position = \"absolute\";\n      node.style.zIndex = \"3\";\n      editor.renderer.scroller.appendChild(node);\n    } else if (showPlaceholder && node) {\n      node.textContent = placeholder;\n    }\n  };\n\n  ReactAce.prototype.updateRef = function (item) {\n    this.refEditor = item;\n  };\n\n  ReactAce.prototype.render = function () {\n    var _a = this.props,\n        name = _a.name,\n        width = _a.width,\n        height = _a.height,\n        style = _a.style;\n\n    var divStyle = __assign({\n      width: width,\n      height: height\n    }, style);\n\n    return React.createElement(\"div\", {\n      ref: this.updateRef,\n      id: name,\n      style: divStyle\n    });\n  };\n\n  ReactAce.propTypes = {\n    mode: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    focus: PropTypes.bool,\n    theme: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    height: PropTypes.string,\n    width: PropTypes.string,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    showGutter: PropTypes.bool,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onPaste: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onBlur: PropTypes.func,\n    onScroll: PropTypes.func,\n    value: PropTypes.string,\n    defaultValue: PropTypes.string,\n    onLoad: PropTypes.func,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    onValidate: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    debounceChangePeriod: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableSnippets: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n    enableLiveAutocompletion: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n    navigateToFileEnd: PropTypes.bool,\n    commands: PropTypes.array,\n    placeholder: PropTypes.string\n  };\n  ReactAce.defaultProps = {\n    name: \"ace-editor\",\n    focus: false,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    fontSize: 12,\n    enableSnippets: false,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false,\n    placeholder: null,\n    navigateToFileEnd: true\n  };\n  return ReactAce;\n}(React.Component);\n\nexports.default = ReactAce;","map":{"version":3,"mappings":"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","names":["isEqual","require","ace","__extends","props","_super","editorOptions_1","forEach","_this","method","bind","debounce","ReactAce","node","parent","parentNode","toString","className","onBeforeLoad","onValidate","mode","focus","theme","fontSize","value","defaultValue","showGutter","wrapEnabled","showPrintMargin","_b","scrollMargin","keyboardHandler","onLoad","commands","annotations","markers","placeholder","editor","edit","refEditor","editorProps","Object","keys","i","length","debounceChangePeriod","onChange","renderer","setScrollMargin","isInShadow","attachToShadowRoot","getSession","setMode","setTheme","setFontSize","setValue","navigateToFileEnd","navigateFileEnd","setShowGutter","setUseWrapMode","setShowPrintMargin","on","onFocus","onBlur","onCopy","onPaste","onInput","updatePlaceholder","selection","onSelectionChange","onCursorChange","getAnnotations","session","onScroll","setAnnotations","handleMarkers","availableOptions","$options","hasOwnProperty","option","setOption","console","warn","handleOptions","Array","isArray","command","exec","bindKey","addCommand","setKeyboardHandler","resize","prevProps","oldProps","nextProps","appliedClasses","appliedClassesArray_1","trim","split","oldClassesArray","index","indexOf","oldClass","splice","join","valueChanged","getValue","silent","pos","toJSON","cursorStart","fromJSON","setOptions","handleScrollMargins","height","width","margins","destroy","event","getSelection","_a","text","y","currentMarkers","getMarkers","removeMarker","id","clazz","startRow","startCol","endRow","endCol","type","inFront","range","ace_builds_1","addMarker","showPlaceholder","placeholderNode","scroller","removeChild","document","createElement","textContent","style","padding","position","zIndex","appendChild","item","name","divStyle","React","ref","updateRef","PropTypes","oneOfType","string","object","bool","number","func","minLines","maxLines","readOnly","highlightActiveLine","tabSize","array","enableSnippets","enableBasicAutocompletion","enableLiveAutocompletion","Component"],"sources":["C:\\Users\\gsess\\Documents\\React\\repl\\node_modules\\react-ace\\src\\ace.tsx"],"sourcesContent":["import { Ace, Range } from \"ace-builds\";\nimport * as AceBuilds from \"ace-builds\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nconst isEqual = require(\"lodash.isequal\");\nimport {\n  debounce,\n  editorEvents,\n  editorOptions,\n  getAceInstance\n} from \"./editorOptions\";\nconst ace = getAceInstance();\n\nimport {\n  IAceEditor,\n  IAceOptions,\n  ICommand,\n  IEditorProps,\n  IMarker\n} from \"./types\";\n/**\n * See https://github.com/ajaxorg/ace/wiki/Configuring-Ace\n */\n\nexport interface IAceEditorProps {\n  name?: string;\n  style?: React.CSSProperties;\n  /** For available modes see https://github.com/thlorenz/brace/tree/master/mode */\n  mode?: string | object;\n  /** For available themes see https://github.com/thlorenz/brace/tree/master/theme */\n  theme?: string;\n  height?: string;\n  width?: string;\n  className?: string;\n  fontSize?: number | string;\n  showGutter?: boolean;\n  showPrintMargin?: boolean;\n  highlightActiveLine?: boolean;\n  focus?: boolean;\n  cursorStart?: number;\n  wrapEnabled?: boolean;\n  readOnly?: boolean;\n  minLines?: number;\n  maxLines?: number;\n  navigateToFileEnd?: boolean;\n  debounceChangePeriod?: number;\n  enableBasicAutocompletion?: boolean | string[];\n  enableLiveAutocompletion?: boolean | string[];\n  tabSize?: number;\n  value?: string;\n  placeholder?: string;\n  defaultValue?: string;\n  scrollMargin?: number[];\n  enableSnippets?: boolean;\n  onSelectionChange?: (value: any, event?: any) => void;\n  onCursorChange?: (value: any, event?: any) => void;\n  onInput?: (event?: any) => void;\n  onLoad?: (editor: Ace.Editor) => void;\n  onValidate?: (annotations: Ace.Annotation[]) => void;\n  onBeforeLoad?: (ace: typeof AceBuilds) => void;\n  onChange?: (value: string, event?: any) => void;\n  onSelection?: (selectedText: string, event?: any) => void;\n  onCopy?: (value: string) => void;\n  onPaste?: (value: string) => void;\n  onFocus?: (event: any, editor?: Ace.Editor) => void;\n  onBlur?: (event: any, editor?: Ace.Editor) => void;\n  onScroll?: (editor: IEditorProps) => void;\n  editorProps?: IEditorProps;\n  setOptions?: IAceOptions;\n  keyboardHandler?: string;\n  commands?: ICommand[];\n  annotations?: Ace.Annotation[];\n  markers?: IMarker[];\n}\n\nexport default class ReactAce extends React.Component<IAceEditorProps> {\n  public static propTypes: PropTypes.ValidationMap<IAceEditorProps> = {\n    mode: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    focus: PropTypes.bool,\n    theme: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    height: PropTypes.string,\n    width: PropTypes.string,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    showGutter: PropTypes.bool,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onPaste: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onBlur: PropTypes.func,\n    onScroll: PropTypes.func,\n    value: PropTypes.string,\n    defaultValue: PropTypes.string,\n    onLoad: PropTypes.func,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    onValidate: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    debounceChangePeriod: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableSnippets: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    enableLiveAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    navigateToFileEnd: PropTypes.bool,\n    commands: PropTypes.array,\n    placeholder: PropTypes.string\n  };\n  public static defaultProps: Partial<IAceEditorProps> = {\n    name: \"ace-editor\",\n    focus: false,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    fontSize: 12,\n    enableSnippets: false,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false,\n    placeholder: null,\n    navigateToFileEnd: true\n  };\n  public editor: IAceEditor;\n  public refEditor: HTMLElement;\n  public debounce: (fn: any, delay: number) => (...args: any) => void;\n  // [index: string]: any;\n  public silent: boolean;\n  constructor(props: IAceEditorProps) {\n    super(props);\n    editorEvents.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n    this.debounce = debounce;\n  }\n  public isInShadow(node: HTMLElement): boolean {\n    let parent = node && node.parentNode;\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n      parent = parent.parentNode;\n    }\n    return false;\n  }\n  public componentDidMount() {\n    const {\n      className,\n      onBeforeLoad,\n      onValidate,\n      mode,\n      focus,\n      theme,\n      fontSize,\n      value,\n      defaultValue,\n      showGutter,\n      wrapEnabled,\n      showPrintMargin,\n      scrollMargin = [0, 0, 0, 0],\n      keyboardHandler,\n      onLoad,\n      commands,\n      annotations,\n      markers,\n      placeholder\n    } = this.props;\n\n    this.editor = ace.edit(this.refEditor);\n\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n\n    const editorProps = Object.keys(this.props.editorProps);\n    for (let i = 0; i < editorProps.length; i++) {\n      this.editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n    }\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(\n        this.onChange,\n        this.props.debounceChangePeriod\n      );\n    }\n    this.editor.renderer.setScrollMargin(\n      scrollMargin[0],\n      scrollMargin[1],\n      scrollMargin[2],\n      scrollMargin[3]\n    );\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n    this.editor\n      .getSession()\n      .setMode(\n        typeof mode === \"string\" ? `ace/mode/${mode}` : (mode as Ace.SyntaxMode)\n      );\n    if(theme && theme !== \"\")\n      this.editor.setTheme(`ace/theme/${theme}`);\n    this.editor.setFontSize(\n      typeof fontSize === \"number\" ? `${fontSize}px` : fontSize\n    );\n    this.editor\n      .getSession()\n      .setValue(!defaultValue ? value || \"\" : defaultValue);\n\n    if (this.props.navigateToFileEnd) {\n      this.editor.navigateFileEnd();\n    }\n    this.editor.renderer.setShowGutter(showGutter);\n    this.editor.getSession().setUseWrapMode(wrapEnabled);\n    this.editor.setShowPrintMargin(showPrintMargin);\n    this.editor.on(\"focus\", this.onFocus);\n    this.editor.on(\"blur\", this.onBlur);\n    this.editor.on(\"copy\", this.onCopy);\n    this.editor.on(\"paste\", this.onPaste);\n    this.editor.on(\"change\", this.onChange);\n    this.editor.on(\"input\", this.onInput);\n    if (placeholder) {\n      this.updatePlaceholder();\n    }\n    this.editor\n      .getSession()\n      .selection.on(\"changeSelection\", this.onSelectionChange);\n    this.editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n    if (onValidate) {\n      // @ts-ignore types don't include\n      this.editor.getSession().on(\"changeAnnotation\", () => {\n        // tslint:disable-next-line:no-shadowed-variable\n        const annotations = this.editor.getSession().getAnnotations();\n        this.props.onValidate(annotations);\n      });\n    }\n    this.editor.session.on(\"changeScrollTop\", this.onScroll);\n    this.editor.getSession().setAnnotations(annotations || []);\n    if (markers && markers.length > 0) {\n      this.handleMarkers(markers);\n    }\n\n    // get a list of possible options to avoid 'misspelled option errors'\n    const availableOptions = this.editor.$options;\n    editorOptions.forEach(option => {\n      if (availableOptions.hasOwnProperty(option)) {\n        // @ts-ignore\n        this.editor.setOption(option, this.props[option]);\n      } else if (this.props[option]) {\n        console.warn(\n          `ReactAce: editor option ${option} was activated but not found. Did you need to import a related tool or did you possibly mispell the option?`\n        );\n      }\n    });\n\n    this.handleOptions(this.props);\n\n    if (Array.isArray(commands)) {\n      commands.forEach(command => {\n        if (typeof command.exec === \"string\") {\n          (this.editor.commands as any).bindKey(command.bindKey, command.exec);\n        } else {\n          (this.editor.commands as any).addCommand(command);\n        }\n      });\n    }\n\n    if (keyboardHandler) {\n      this.editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n    }\n\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n\n    if (onLoad) {\n      onLoad(this.editor);\n    }\n\n    this.editor.resize();\n\n    if (focus) {\n      this.editor.focus();\n    }\n  }\n\n  public componentDidUpdate(prevProps: IAceEditorProps) {\n    const oldProps = prevProps;\n    const nextProps = this.props;\n\n    for (let i = 0; i < editorOptions.length; i++) {\n      const option = editorOptions[i];\n      if (nextProps[option] !== oldProps[option]) {\n        // @ts-ignore\n        this.editor.setOption(option, nextProps[option]);\n      }\n    }\n\n    if (nextProps.className !== oldProps.className) {\n      const appliedClasses = this.refEditor.className;\n      const appliedClassesArray = appliedClasses.trim().split(\" \");\n      const oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(oldClass => {\n        const index = appliedClassesArray.indexOf(oldClass);\n        appliedClassesArray.splice(index, 1);\n      });\n      this.refEditor.className =\n        \" \" + nextProps.className + \" \" + appliedClassesArray.join(\" \");\n    }\n\n    // First process editor value, as it may create a new session (see issue #300)\n    const valueChanged = this.editor &&\n      nextProps.value != null &&\n      this.editor.getValue() !== nextProps.value;\n\n    if (valueChanged) {\n      // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n      this.silent = true;\n      const pos = this.editor.session.selection.toJSON();\n      this.editor.setValue(nextProps.value, nextProps.cursorStart);\n      this.editor.session.selection.fromJSON(pos);\n      this.silent = false;\n    }\n\n    if (nextProps.placeholder !== oldProps.placeholder) {\n      this.updatePlaceholder();\n    }\n    if (nextProps.mode !== oldProps.mode) {\n      this.editor\n        .getSession()\n        .setMode(\n          typeof nextProps.mode === \"string\"\n            ? `ace/mode/${nextProps.mode}`\n            : (nextProps.mode as Ace.SyntaxMode)\n        );\n    }\n    if (nextProps.theme !== oldProps.theme) {\n      this.editor.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n    if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n      if (nextProps.keyboardHandler) {\n        this.editor.setKeyboardHandler(\n          \"ace/keyboard/\" + nextProps.keyboardHandler\n        );\n      } else {\n        this.editor.setKeyboardHandler(null);\n      }\n    }\n    if (nextProps.fontSize !== oldProps.fontSize) {\n      this.editor.setFontSize(\n        typeof nextProps.fontSize === \"number\"\n          ? `${nextProps.fontSize}px`\n          : nextProps.fontSize\n      );\n    }\n    if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n      this.editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n    }\n    if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n      this.editor.setShowPrintMargin(nextProps.showPrintMargin);\n    }\n    if (nextProps.showGutter !== oldProps.showGutter) {\n      this.editor.renderer.setShowGutter(nextProps.showGutter);\n    }\n    if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n      this.handleOptions(nextProps);\n    }\n    // if the value or annotations changed, set the annotations\n    // changing the value may create create a new session which will require annotations to be re-set\n    if (valueChanged || !isEqual(nextProps.annotations, oldProps.annotations)) {\n      this.editor.getSession().setAnnotations(nextProps.annotations || []);\n    }\n    if (\n      !isEqual(nextProps.markers, oldProps.markers) &&\n      Array.isArray(nextProps.markers)\n    ) {\n      this.handleMarkers(nextProps.markers);\n    }\n\n    // this doesn't look like it works at all....\n    if (!isEqual(nextProps.scrollMargin, oldProps.scrollMargin)) {\n      this.handleScrollMargins(nextProps.scrollMargin);\n    }\n\n    if (\n      prevProps.height !== this.props.height ||\n      prevProps.width !== this.props.width\n    ) {\n      this.editor.resize();\n    }\n    if (this.props.focus && !prevProps.focus) {\n      this.editor.focus();\n    }\n  }\n\n  public handleScrollMargins(margins = [0, 0, 0, 0]) {\n    this.editor.renderer.setScrollMargin(\n      margins[0],\n      margins[1],\n      margins[2],\n      margins[3]\n    );\n  }\n\n  public componentWillUnmount() {\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n  }\n\n  public onChange(event: any) {\n    if (this.props.onChange && !this.silent) {\n      const value = this.editor.getValue();\n      this.props.onChange(value, event);\n    }\n  }\n\n  public onSelectionChange(event: any) {\n    if (this.props.onSelectionChange) {\n      const value = this.editor.getSelection();\n      this.props.onSelectionChange(value, event);\n    }\n  }\n  public onCursorChange(event: any) {\n    if (this.props.onCursorChange) {\n      const value = this.editor.getSelection();\n      this.props.onCursorChange(value, event);\n    }\n  }\n  public onInput(event?: any) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n    if (this.props.placeholder) {\n      this.updatePlaceholder();\n    }\n  }\n  public onFocus(event: any) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event, this.editor);\n    }\n  }\n\n  public onBlur(event: any) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event, this.editor);\n    }\n  }\n\n  public onCopy({ text }: { text: string }) {\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  }\n\n  public onPaste({ text }: { text: string }) {\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  }\n\n  public onScroll() {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  }\n\n  public handleOptions(props: IAceEditorProps) {\n    const setOptions = Object.keys(props.setOptions);\n    for (let y = 0; y < setOptions.length; y++) {\n      // @ts-ignore\n      this.editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n    }\n  }\n\n  public handleMarkers(markers: IMarker[]) {\n    // remove foreground markers\n    let currentMarkers = this.editor.getSession().getMarkers(true);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // remove background markers except active line marker and selected word marker\n    currentMarkers = this.editor.getSession().getMarkers(false);\n    for (const i in currentMarkers) {\n      if (\n        currentMarkers.hasOwnProperty(i) &&\n        currentMarkers[i].clazz !== \"ace_active-line\" &&\n        currentMarkers[i].clazz !== \"ace_selected-word\"\n      ) {\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // add new markers\n    markers.forEach(\n      ({\n        startRow,\n        startCol,\n        endRow,\n        endCol,\n        className,\n        type,\n        inFront = false\n      }) => {\n        const range = new Range(startRow, startCol, endRow, endCol);\n        this.editor.getSession().addMarker(range, className, type, inFront);\n      }\n    );\n  }\n\n  public updatePlaceholder() {\n    // Adapted from https://stackoverflow.com/questions/26695708/how-can-i-add-placeholder-text-when-the-editor-is-empty\n\n    const editor = this.editor;\n    const { placeholder } = this.props;\n\n    const showPlaceholder = !editor.session.getValue().length;\n    let node = editor.renderer.placeholderNode;\n\n    if (!showPlaceholder && node) {\n      editor.renderer.scroller.removeChild(editor.renderer.placeholderNode);\n      editor.renderer.placeholderNode = null;\n    } else if (showPlaceholder && !node) {\n      node = editor.renderer.placeholderNode = document.createElement(\"div\");\n      node.textContent = placeholder || \"\";\n      node.className = \"ace_comment ace_placeholder\";\n      node.style.padding = \"0 9px\";\n      node.style.position = \"absolute\";\n      node.style.zIndex = \"3\";\n      editor.renderer.scroller.appendChild(node);\n    } else if (showPlaceholder && node) {\n      node.textContent = placeholder;\n    }\n  }\n\n  public updateRef(item: HTMLElement) {\n    this.refEditor = item;\n  }\n\n  public render() {\n    const { name, width, height, style } = this.props;\n    const divStyle = { width, height, ...style };\n    return <div ref={this.updateRef} id={name} style={divStyle} />;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}