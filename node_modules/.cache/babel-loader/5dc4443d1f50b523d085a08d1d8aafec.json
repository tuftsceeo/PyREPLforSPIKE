{"ast":null,"code":"ace.define(\"ace/mode/python_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var PythonHighlightRules = function () {\n    var keywords = \"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" + \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" + \"raise|return|try|while|with|yield|async|await|nonlocal\";\n    var builtinConstants = \"True|False|None|NotImplemented|Ellipsis|__debug__\";\n    var builtinFunctions = \"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" + \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" + \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" + \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" + \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" + \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" + \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" + \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" + \"ascii|breakpoint|bytes\";\n    var keywordMapper = this.createKeywordMapper({\n      \"invalid.deprecated\": \"debugger\",\n      \"support.function\": builtinFunctions,\n      \"variable.language\": \"self|cls\",\n      \"constant.language\": builtinConstants,\n      \"keyword\": keywords\n    }, \"identifier\");\n    var strPre = \"[uU]?\";\n    var strRawPre = \"[rR]\";\n    var strFormatPre = \"[fF]\";\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string start\n        regex: strPre + '\"{3}',\n        next: \"qqstring3\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: strPre + '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        // multi line ''' string start\n        regex: strPre + \"'{3}\",\n        next: \"qstring3\"\n      }, {\n        token: \"string\",\n        // ' string\n        regex: strPre + \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + '\"{3}',\n        next: \"rawqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + '\"(?=.)',\n        next: \"rawqqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + \"'{3}\",\n        next: \"rawqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + \"'(?=.)\",\n        next: \"rawqstring\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + '\"{3}',\n        next: \"fqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + '\"(?=.)',\n        next: \"fqqstring\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + \"'{3}\",\n        next: \"fqstring3\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + \"'(?=.)\",\n        next: \"fqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + '\"{3}',\n        next: \"rfqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + '\"(?=.)',\n        next: \"rfqqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + \"'{3}\",\n        next: \"rfqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + \"'(?=.)\",\n        next: \"rfqstring\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n      }, {\n        token: \"punctuation\",\n        regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)\\\\}]\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.function\"],\n        regex: \"(def|class)(\\\\s+)(\\\\w+)\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        include: \"constants\"\n      }],\n      \"qqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqqstring3\": [{\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqstring3\": [{\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rawqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rawqstring\"\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"fqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqqstring3\": [{\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqstring3\": [{\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rfqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqstring\": [{\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstringParRules\": [{\n        //TODO: nested {}\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)]\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"string\",\n        regex: \"'[^']*'\"\n      }, {\n        token: \"string\",\n        regex: '\"[^\"]*\"'\n      }, {\n        token: \"function.support\",\n        regex: \"(!s|!r|!a)\"\n      }, {\n        include: \"constants\"\n      }, {\n        token: 'paren.rparen',\n        regex: \"}\",\n        next: 'pop'\n      }, {\n        token: 'paren.lparen',\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }],\n      \"constants\": [{\n        token: \"constant.numeric\",\n        // imaginary\n        regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // long integer\n        regex: integer + \"[lL]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: [\"punctuation\", \"function.support\"],\n        // method\n        regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(PythonHighlightRules, TextHighlightRules);\n  exports.PythonHighlightRules = PythonHighlightRules;\n});\nace.define(\"ace/mode/folding/pythonic\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (markers) {\n    this.foldingStartMarker = new RegExp(\"([\\\\[{])(?:\\\\s*)$|(\" + markers + \")(?:\\\\s*)(?:#.*)?$\");\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, match.index);\n        if (match[2]) return this.indentationBlock(session, row, match.index + match[2].length);\n        return this.indentationBlock(session, row);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/python\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/python_highlight_rules\", \"ace/mode/folding/pythonic\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var PythonHighlightRules = require(\"./python_highlight_rules\").PythonHighlightRules;\n\n  var PythonFoldMode = require(\"./folding/pythonic\").FoldMode;\n\n  var Range = require(\"../range\").Range;\n\n  var Mode = function () {\n    this.HighlightRules = PythonHighlightRules;\n    this.foldingRules = new PythonFoldMode(\"\\\\:\");\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    var outdents = {\n      \"pass\": 1,\n      \"return\": 1,\n      \"raise\": 1,\n      \"break\": 1,\n      \"continue\": 1\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\") return false;\n      var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n      if (!tokens) return false;\n\n      do {\n        var last = tokens.pop();\n      } while (last && (last.type == \"comment\" || last.type == \"text\" && last.value.match(/^\\s+$/)));\n\n      if (!last) return false;\n      return last.type == \"keyword\" && outdents[last.value];\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      row += 1;\n      var indent = this.$getIndent(doc.getLine(row));\n      var tab = doc.getTabString();\n      if (indent.slice(-tab.length) == tab) doc.remove(new Range(row, indent.length - tab.length, row, indent.length));\n    };\n\n    this.$id = \"ace/mode/python\";\n    this.snippetFileId = \"ace/snippets/python\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/python\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","PythonHighlightRules","keywords","builtinConstants","builtinFunctions","keywordMapper","createKeywordMapper","strPre","strRawPre","strFormatPre","strRawFormatPre","decimalInteger","octInteger","hexInteger","binInteger","integer","exponent","fraction","intPart","pointFloat","exponentFloat","floatNumber","stringEscape","$rules","token","regex","next","include","defaultToken","push","normalizeRules","inherits","BaseFoldMode","FoldMode","markers","foldingStartMarker","RegExp","getFoldWidgetRange","session","foldStyle","row","line","getLine","match","openingBracketBlock","index","indentationBlock","length","call","prototype","TextMode","Mode","PythonFoldMode","Range","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","state","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","type","outdents","checkOutdent","input","trim","last","pop","value","autoOutdent","doc","getTabString","slice","remove","$id","snippetFileId","m"],"sources":["C:/Users/gsess/Documents/React/repl/node_modules/ace-builds/src-noconflict/mode-python.js"],"sourcesContent":["ace.define(\"ace/mode/python_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PythonHighlightRules = function() {\n\n    var keywords = (\n        \"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" +\n        \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" +\n        \"raise|return|try|while|with|yield|async|await|nonlocal\"\n    );\n\n    var builtinConstants = (\n        \"True|False|None|NotImplemented|Ellipsis|__debug__\"\n    );\n\n    var builtinFunctions = (\n        \"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" +\n        \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" +\n        \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" +\n        \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" +\n        \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" +\n        \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" +\n        \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" +\n        \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" +\n        \"ascii|breakpoint|bytes\"\n    );\n    var keywordMapper = this.createKeywordMapper({\n        \"invalid.deprecated\": \"debugger\",\n        \"support.function\": builtinFunctions,\n        \"variable.language\": \"self|cls\",\n        \"constant.language\": builtinConstants,\n        \"keyword\": keywords\n    }, \"identifier\");\n\n    var strPre = \"[uU]?\";\n    var strRawPre = \"[rR]\";\n    var strFormatPre = \"[fF]\";\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment\",\n            regex : \"#.*$\"\n        }, {\n            token : \"string\",           // multi line \"\"\" string start\n            regex : strPre + '\"{3}',\n            next : \"qqstring3\"\n        }, {\n            token : \"string\",           // \" string\n            regex : strPre + '\"(?=.)',\n            next : \"qqstring\"\n        }, {\n            token : \"string\",           // multi line ''' string start\n            regex : strPre + \"'{3}\",\n            next : \"qstring3\"\n        }, {\n            token : \"string\",           // ' string\n            regex : strPre + \"'(?=.)\",\n            next : \"qstring\"\n        }, {\n            token: \"string\",\n            regex: strRawPre + '\"{3}',\n            next: \"rawqqstring3\"\n        }, {\n            token: \"string\", \n            regex: strRawPre + '\"(?=.)',\n            next: \"rawqqstring\"\n        }, {\n            token: \"string\",\n            regex: strRawPre + \"'{3}\",\n            next: \"rawqstring3\"\n        }, {\n            token: \"string\",\n            regex: strRawPre + \"'(?=.)\",\n            next: \"rawqstring\"\n        }, {\n            token: \"string\",\n            regex: strFormatPre + '\"{3}',\n            next: \"fqqstring3\"\n        }, {\n            token: \"string\",\n            regex: strFormatPre + '\"(?=.)',\n            next: \"fqqstring\"\n        }, {\n            token: \"string\",\n            regex: strFormatPre + \"'{3}\",\n            next: \"fqstring3\"\n        }, {\n            token: \"string\",\n            regex: strFormatPre + \"'(?=.)\",\n            next: \"fqstring\"\n        },{\n            token: \"string\",\n            regex: strRawFormatPre + '\"{3}',\n            next: \"rfqqstring3\"\n        }, {\n            token: \"string\",\n            regex: strRawFormatPre + '\"(?=.)',\n            next: \"rfqqstring\"\n        }, {\n            token: \"string\",\n            regex: strRawFormatPre + \"'{3}\",\n            next: \"rfqstring3\"\n        }, {\n            token: \"string\",\n            regex: strRawFormatPre + \"'(?=.)\",\n            next: \"rfqstring\"\n        }, {\n            token: \"keyword.operator\",\n            regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n        }, {\n            token: \"punctuation\",\n            regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"[\\\\[\\\\(\\\\{]\"\n        }, {\n            token: \"paren.rparen\",\n            regex: \"[\\\\]\\\\)\\\\}]\"\n        }, {\n            token: [\"keyword\", \"text\", \"entity.name.function\"],\n            regex: \"(def|class)(\\\\s+)(\\\\w+)\"\n         }, {\n            token: \"text\",\n            regex: \"\\\\s+\"\n        }, {\n            include: \"constants\"\n        }],\n        \"qqstring3\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\", // multi line \"\"\" string end\n            regex: '\"{3}',\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"qstring3\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",  // multi line ''' string end\n            regex: \"'{3}\",\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"qqstring\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"qqstring\"\n        }, {\n            token: \"string\",\n            regex: '\"|$',\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"qstring\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"qstring\"\n        }, {\n            token: \"string\",\n            regex: \"'|$\",\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rawqqstring3\": [{\n            token: \"string\", // multi line \"\"\" string end\n            regex: '\"{3}',\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rawqstring3\": [{\n            token: \"string\",  // multi line ''' string end\n            regex: \"'{3}\",\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rawqqstring\": [{\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"rawqqstring\"\n        }, {\n            token: \"string\",\n            regex: '\"|$',\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rawqstring\": [{\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"rawqstring\"\n        }, {\n            token: \"string\",\n            regex: \"'|$\",\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"fqqstring3\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\", // multi line \"\"\" string end\n            regex: '\"{3}',\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"fqstring3\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",  // multi line ''' string end\n            regex: \"'{3}\",\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"fqqstring\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"fqqstring\"\n        }, {\n            token: \"string\",\n            regex: '\"|$',\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"fqstring\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",\n            regex: \"'|$\",\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rfqqstring3\": [{\n            token: \"string\", // multi line \"\"\" string end\n            regex: '\"{3}',\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rfqstring3\": [{\n            token: \"string\",  // multi line ''' string end\n            regex: \"'{3}\",\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rfqqstring\": [{\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"rfqqstring\"\n        }, {\n            token: \"string\",\n            regex: '\"|$',\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rfqstring\": [{\n            token: \"string\",\n            regex: \"'|$\",\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"fqstringParRules\": [{//TODO: nested {}\n            token: \"paren.lparen\",\n            regex: \"[\\\\[\\\\(]\"\n        }, {\n            token: \"paren.rparen\",\n            regex: \"[\\\\]\\\\)]\"\n        }, {\n            token: \"string\",\n            regex: \"\\\\s+\"\n        }, {\n            token: \"string\",\n            regex: \"'[^']*'\"\n        }, {\n            token: \"string\",\n            regex: '\"[^\"]*\"'\n        }, {\n            token: \"function.support\",\n            regex: \"(!s|!r|!a)\"\n        }, {\n            include: \"constants\"\n        },{\n            token: 'paren.rparen',\n            regex: \"}\",\n            next: 'pop'\n        },{\n            token: 'paren.lparen',\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }],\n        \"constants\": [{\n            token: \"constant.numeric\", // imaginary\n            regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n        }, {\n            token: \"constant.numeric\", // float\n            regex: floatNumber\n        }, {\n            token: \"constant.numeric\", // long integer\n            regex: integer + \"[lL]\\\\b\"\n        }, {\n            token: \"constant.numeric\", // integer\n            regex: integer + \"\\\\b\"\n        }, {\n            token: [\"punctuation\", \"function.support\"],// method\n            regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\n        }, {\n            token: keywordMapper,\n            regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }]\n    };\n    this.normalizeRules();\n};\n\noop.inherits(PythonHighlightRules, TextHighlightRules);\n\nexports.PythonHighlightRules = PythonHighlightRules;\n});\n\nace.define(\"ace/mode/folding/pythonic\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(markers) {\n    this.foldingStartMarker = new RegExp(\"([\\\\[{])(?:\\\\s*)$|(\" + markers + \")(?:\\\\s*)(?:#.*)?$\");\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, match.index);\n            if (match[2])\n                return this.indentationBlock(session, row, match.index + match[2].length);\n            return this.indentationBlock(session, row);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/python\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/python_highlight_rules\",\"ace/mode/folding/pythonic\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar PythonHighlightRules = require(\"./python_highlight_rules\").PythonHighlightRules;\nvar PythonFoldMode = require(\"./folding/pythonic\").FoldMode;\nvar Range = require(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = PythonHighlightRules;\n    this.foldingRules = new PythonFoldMode(\"\\\\:\");\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    var outdents = {\n        \"pass\": 1,\n        \"return\": 1,\n        \"raise\": 1,\n        \"break\": 1,\n        \"continue\": 1\n    };\n    \n    this.checkOutdent = function(state, line, input) {\n        if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\")\n            return false;\n\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n        \n        if (!tokens)\n            return false;\n        do {\n            var last = tokens.pop();\n        } while (last && (last.type == \"comment\" || (last.type == \"text\" && last.value.match(/^\\s+$/))));\n        \n        if (!last)\n            return false;\n        \n        return (last.type == \"keyword\" && outdents[last.value]);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        \n        row += 1;\n        var indent = this.$getIndent(doc.getLine(row));\n        var tab = doc.getTabString();\n        if (indent.slice(-tab.length) == tab)\n            doc.remove(new Range(row, indent.length-tab.length, row, indent.length));\n    };\n\n    this.$id = \"ace/mode/python\";\n    this.snippetFileId = \"ace/snippets/python\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/python\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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"},"metadata":{},"sourceType":"script"}