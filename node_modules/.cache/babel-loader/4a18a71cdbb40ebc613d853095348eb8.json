{"ast":null,"code":"// pipe in an fstream, and it'll make a tarball.\n// key-value pair argument is global extended header props.\nmodule.exports = Pack;\n\nvar EntryWriter = require(\"./entry-writer.js\"),\n    Stream = require(\"stream\").Stream,\n    path = require(\"path\"),\n    inherits = require(\"inherits\"),\n    GlobalHeaderWriter = require(\"./global-header-writer.js\"),\n    collect = require(\"fstream\").collect,\n    eof = new Buffer(512);\n\nfor (var i = 0; i < 512; i++) eof[i] = 0;\n\ninherits(Pack, Stream);\n\nfunction Pack(props) {\n  // console.error(\"-- p ctor\")\n  var me = this;\n  if (!(me instanceof Pack)) return new Pack(props);\n  if (props) me._noProprietary = props.noProprietary;else me._noProprietary = false;\n  me._global = props;\n  me.readable = true;\n  me.writable = true;\n  me._buffer = []; // console.error(\"-- -- set current to null in ctor\")\n\n  me._currentEntry = null;\n  me._processing = false;\n  me._pipeRoot = null;\n  me.on(\"pipe\", function (src) {\n    if (src.root === me._pipeRoot) return;\n    me._pipeRoot = src;\n    src.on(\"end\", function () {\n      me._pipeRoot = null;\n    });\n    me.add(src);\n  });\n}\n\nPack.prototype.addGlobal = function (props) {\n  // console.error(\"-- p addGlobal\")\n  if (this._didGlobal) return;\n  this._didGlobal = true;\n  var me = this;\n  GlobalHeaderWriter(props).on(\"data\", function (c) {\n    me.emit(\"data\", c);\n  }).end();\n};\n\nPack.prototype.add = function (stream) {\n  if (this._global && !this._didGlobal) this.addGlobal(this._global);\n  if (this._ended) return this.emit(\"error\", new Error(\"add after end\"));\n  collect(stream);\n\n  this._buffer.push(stream);\n\n  this._process();\n\n  this._needDrain = this._buffer.length > 0;\n  return !this._needDrain;\n};\n\nPack.prototype.pause = function () {\n  this._paused = true;\n  if (this._currentEntry) this._currentEntry.pause();\n  this.emit(\"pause\");\n};\n\nPack.prototype.resume = function () {\n  this._paused = false;\n  if (this._currentEntry) this._currentEntry.resume();\n  this.emit(\"resume\");\n\n  this._process();\n};\n\nPack.prototype.end = function () {\n  this._ended = true;\n\n  this._buffer.push(eof);\n\n  this._process();\n};\n\nPack.prototype._process = function () {\n  var me = this;\n\n  if (me._paused || me._processing) {\n    return;\n  }\n\n  var entry = me._buffer.shift();\n\n  if (!entry) {\n    if (me._needDrain) {\n      me.emit(\"drain\");\n    }\n\n    return;\n  }\n\n  if (entry.ready === false) {\n    // console.error(\"-- entry is not ready\", entry)\n    me._buffer.unshift(entry);\n\n    entry.on(\"ready\", function () {\n      // console.error(\"-- -- ready!\", entry)\n      me._process();\n    });\n    return;\n  }\n\n  me._processing = true;\n\n  if (entry === eof) {\n    // need 2 ending null blocks.\n    me.emit(\"data\", eof);\n    me.emit(\"data\", eof);\n    me.emit(\"end\");\n    me.emit(\"close\");\n    return;\n  } // Change the path to be relative to the root dir that was\n  // added to the tarball.\n  //\n  // XXX This should be more like how -C works, so you can\n  // explicitly set a root dir, and also explicitly set a pathname\n  // in the tarball to use.  That way we can skip a lot of extra\n  // work when resolving symlinks for bundled dependencies in npm.\n\n\n  var root = path.dirname((entry.root || entry).path);\n\n  if (me._global && me._global.fromBase && entry.root && entry.root.path) {\n    // user set 'fromBase: true' indicating tar root should be directory itself\n    root = entry.root.path;\n  }\n\n  var wprops = {};\n  Object.keys(entry.props || {}).forEach(function (k) {\n    wprops[k] = entry.props[k];\n  });\n  if (me._noProprietary) wprops.noProprietary = true;\n  wprops.path = path.relative(root, entry.path || ''); // actually not a matter of opinion or taste.\n\n  if (process.platform === \"win32\") {\n    wprops.path = wprops.path.replace(/\\\\/g, \"/\");\n  }\n\n  if (!wprops.type) wprops.type = 'Directory';\n\n  switch (wprops.type) {\n    // sockets not supported\n    case \"Socket\":\n      return;\n\n    case \"Directory\":\n      wprops.path += \"/\";\n      wprops.size = 0;\n      break;\n\n    case \"Link\":\n      var lp = path.resolve(path.dirname(entry.path), entry.linkpath);\n      wprops.linkpath = path.relative(root, lp) || \".\";\n      wprops.size = 0;\n      break;\n\n    case \"SymbolicLink\":\n      var lp = path.resolve(path.dirname(entry.path), entry.linkpath);\n      wprops.linkpath = path.relative(path.dirname(entry.path), lp) || \".\";\n      wprops.size = 0;\n      break;\n  } // console.error(\"-- new writer\", wprops)\n  // if (!wprops.type) {\n  //   // console.error(\"-- no type?\", entry.constructor.name, entry)\n  // }\n  // console.error(\"-- -- set current to new writer\", wprops.path)\n\n\n  var writer = me._currentEntry = EntryWriter(wprops);\n  writer.parent = me; // writer.on(\"end\", function () {\n  //   // console.error(\"-- -- writer end\", writer.path)\n  // })\n\n  writer.on(\"data\", function (c) {\n    me.emit(\"data\", c);\n  });\n  writer.on(\"header\", function () {\n    Buffer.prototype.toJSON = function () {\n      return this.toString().split(/\\0/).join(\".\");\n    }; // console.error(\"-- -- writer header %j\", writer.props)\n\n\n    if (writer.props.size === 0) nextEntry();\n  });\n  writer.on(\"close\", nextEntry);\n  var ended = false;\n\n  function nextEntry() {\n    if (ended) return;\n    ended = true; // console.error(\"-- -- writer close\", writer.path)\n    // console.error(\"-- -- set current to null\", wprops.path)\n\n    me._currentEntry = null;\n    me._processing = false;\n\n    me._process();\n  }\n\n  writer.on(\"error\", function (er) {\n    // console.error(\"-- -- writer error\", writer.path)\n    me.emit(\"error\", er);\n  }); // if it's the root, then there's no need to add its entries,\n  // or data, since they'll be added directly.\n\n  if (entry === me._pipeRoot) {\n    // console.error(\"-- is the root, don't auto-add\")\n    writer.add = null;\n  }\n\n  entry.pipe(writer);\n};\n\nPack.prototype.destroy = function () {};\n\nPack.prototype.write = function () {};","map":{"version":3,"names":["module","exports","Pack","EntryWriter","require","Stream","path","inherits","GlobalHeaderWriter","collect","eof","Buffer","i","props","me","_noProprietary","noProprietary","_global","readable","writable","_buffer","_currentEntry","_processing","_pipeRoot","on","src","root","add","prototype","addGlobal","_didGlobal","c","emit","end","stream","_ended","Error","push","_process","_needDrain","length","pause","_paused","resume","entry","shift","ready","unshift","dirname","fromBase","wprops","Object","keys","forEach","k","relative","process","platform","replace","type","size","lp","resolve","linkpath","writer","parent","toJSON","toString","split","join","nextEntry","ended","er","pipe","destroy","write"],"sources":["C:/Users/gsess/node_modules/tar/lib/pack.js"],"sourcesContent":["// pipe in an fstream, and it'll make a tarball.\n// key-value pair argument is global extended header props.\n\nmodule.exports = Pack\n\nvar EntryWriter = require(\"./entry-writer.js\")\n  , Stream = require(\"stream\").Stream\n  , path = require(\"path\")\n  , inherits = require(\"inherits\")\n  , GlobalHeaderWriter = require(\"./global-header-writer.js\")\n  , collect = require(\"fstream\").collect\n  , eof = new Buffer(512)\n\nfor (var i = 0; i < 512; i ++) eof[i] = 0\n\ninherits(Pack, Stream)\n\nfunction Pack (props) {\n  // console.error(\"-- p ctor\")\n  var me = this\n  if (!(me instanceof Pack)) return new Pack(props)\n\n  if (props) me._noProprietary = props.noProprietary\n  else me._noProprietary = false\n\n  me._global = props\n\n  me.readable = true\n  me.writable = true\n  me._buffer = []\n  // console.error(\"-- -- set current to null in ctor\")\n  me._currentEntry = null\n  me._processing = false\n\n  me._pipeRoot = null\n  me.on(\"pipe\", function (src) {\n    if (src.root === me._pipeRoot) return\n    me._pipeRoot = src\n    src.on(\"end\", function () {\n      me._pipeRoot = null\n    })\n    me.add(src)\n  })\n}\n\nPack.prototype.addGlobal = function (props) {\n  // console.error(\"-- p addGlobal\")\n  if (this._didGlobal) return\n  this._didGlobal = true\n\n  var me = this\n  GlobalHeaderWriter(props)\n    .on(\"data\", function (c) {\n      me.emit(\"data\", c)\n    })\n    .end()\n}\n\nPack.prototype.add = function (stream) {\n  if (this._global && !this._didGlobal) this.addGlobal(this._global)\n\n  if (this._ended) return this.emit(\"error\", new Error(\"add after end\"))\n\n  collect(stream)\n  this._buffer.push(stream)\n  this._process()\n  this._needDrain = this._buffer.length > 0\n  return !this._needDrain\n}\n\nPack.prototype.pause = function () {\n  this._paused = true\n  if (this._currentEntry) this._currentEntry.pause()\n  this.emit(\"pause\")\n}\n\nPack.prototype.resume = function () {\n  this._paused = false\n  if (this._currentEntry) this._currentEntry.resume()\n  this.emit(\"resume\")\n  this._process()\n}\n\nPack.prototype.end = function () {\n  this._ended = true\n  this._buffer.push(eof)\n  this._process()\n}\n\nPack.prototype._process = function () {\n  var me = this\n  if (me._paused || me._processing) {\n    return\n  }\n\n  var entry = me._buffer.shift()\n\n  if (!entry) {\n    if (me._needDrain) {\n      me.emit(\"drain\")\n    }\n    return\n  }\n\n  if (entry.ready === false) {\n    // console.error(\"-- entry is not ready\", entry)\n    me._buffer.unshift(entry)\n    entry.on(\"ready\", function () {\n      // console.error(\"-- -- ready!\", entry)\n      me._process()\n    })\n    return\n  }\n\n  me._processing = true\n\n  if (entry === eof) {\n    // need 2 ending null blocks.\n    me.emit(\"data\", eof)\n    me.emit(\"data\", eof)\n    me.emit(\"end\")\n    me.emit(\"close\")\n    return\n  }\n\n  // Change the path to be relative to the root dir that was\n  // added to the tarball.\n  //\n  // XXX This should be more like how -C works, so you can\n  // explicitly set a root dir, and also explicitly set a pathname\n  // in the tarball to use.  That way we can skip a lot of extra\n  // work when resolving symlinks for bundled dependencies in npm.\n\n  var root = path.dirname((entry.root || entry).path);\n  if (me._global && me._global.fromBase && entry.root && entry.root.path) {\n    // user set 'fromBase: true' indicating tar root should be directory itself\n    root = entry.root.path;\n  }\n\n  var wprops = {}\n\n  Object.keys(entry.props || {}).forEach(function (k) {\n    wprops[k] = entry.props[k]\n  })\n\n  if (me._noProprietary) wprops.noProprietary = true\n\n  wprops.path = path.relative(root, entry.path || '')\n\n  // actually not a matter of opinion or taste.\n  if (process.platform === \"win32\") {\n    wprops.path = wprops.path.replace(/\\\\/g, \"/\")\n  }\n\n  if (!wprops.type)\n    wprops.type = 'Directory'\n\n  switch (wprops.type) {\n    // sockets not supported\n    case \"Socket\":\n      return\n\n    case \"Directory\":\n      wprops.path += \"/\"\n      wprops.size = 0\n      break\n\n    case \"Link\":\n      var lp = path.resolve(path.dirname(entry.path), entry.linkpath)\n      wprops.linkpath = path.relative(root, lp) || \".\"\n      wprops.size = 0\n      break\n\n    case \"SymbolicLink\":\n      var lp = path.resolve(path.dirname(entry.path), entry.linkpath)\n      wprops.linkpath = path.relative(path.dirname(entry.path), lp) || \".\"\n      wprops.size = 0\n      break\n  }\n\n  // console.error(\"-- new writer\", wprops)\n  // if (!wprops.type) {\n  //   // console.error(\"-- no type?\", entry.constructor.name, entry)\n  // }\n\n  // console.error(\"-- -- set current to new writer\", wprops.path)\n  var writer = me._currentEntry = EntryWriter(wprops)\n\n  writer.parent = me\n\n  // writer.on(\"end\", function () {\n  //   // console.error(\"-- -- writer end\", writer.path)\n  // })\n\n  writer.on(\"data\", function (c) {\n    me.emit(\"data\", c)\n  })\n\n  writer.on(\"header\", function () {\n    Buffer.prototype.toJSON = function () {\n      return this.toString().split(/\\0/).join(\".\")\n    }\n    // console.error(\"-- -- writer header %j\", writer.props)\n    if (writer.props.size === 0) nextEntry()\n  })\n  writer.on(\"close\", nextEntry)\n\n  var ended = false\n  function nextEntry () {\n    if (ended) return\n    ended = true\n\n    // console.error(\"-- -- writer close\", writer.path)\n    // console.error(\"-- -- set current to null\", wprops.path)\n    me._currentEntry = null\n    me._processing = false\n    me._process()\n  }\n\n  writer.on(\"error\", function (er) {\n    // console.error(\"-- -- writer error\", writer.path)\n    me.emit(\"error\", er)\n  })\n\n  // if it's the root, then there's no need to add its entries,\n  // or data, since they'll be added directly.\n  if (entry === me._pipeRoot) {\n    // console.error(\"-- is the root, don't auto-add\")\n    writer.add = null\n  }\n\n  entry.pipe(writer)\n}\n\nPack.prototype.destroy = function () {}\nPack.prototype.write = function () {}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}