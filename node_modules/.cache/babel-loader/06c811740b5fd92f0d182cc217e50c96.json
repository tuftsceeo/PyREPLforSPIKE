{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar split_1 = require(\"./split\");\n\nvar DiffMatchPatch = require(\"diff-match-patch\");\n\nvar DiffComponent =\n/** @class */\nfunction (_super) {\n  __extends(DiffComponent, _super);\n\n  function DiffComponent(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      value: _this.props.value\n    };\n    _this.onChange = _this.onChange.bind(_this);\n    _this.diff = _this.diff.bind(_this);\n    return _this;\n  }\n\n  DiffComponent.prototype.componentDidUpdate = function () {\n    var value = this.props.value;\n\n    if (value !== this.state.value) {\n      this.setState({\n        value: value\n      });\n    }\n  };\n\n  DiffComponent.prototype.onChange = function (value) {\n    this.setState({\n      value: value\n    });\n\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  };\n\n  DiffComponent.prototype.diff = function () {\n    var dmp = new DiffMatchPatch();\n    var lhString = this.state.value[0];\n    var rhString = this.state.value[1];\n\n    if (lhString.length === 0 && rhString.length === 0) {\n      return [];\n    }\n\n    var diff = dmp.diff_main(lhString, rhString);\n    dmp.diff_cleanupSemantic(diff);\n    var diffedLines = this.generateDiffedLines(diff);\n    var codeEditorSettings = this.setCodeMarkers(diffedLines);\n    return codeEditorSettings;\n  };\n\n  DiffComponent.prototype.generateDiffedLines = function (diff) {\n    var C = {\n      DIFF_EQUAL: 0,\n      DIFF_DELETE: -1,\n      DIFF_INSERT: 1\n    };\n    var diffedLines = {\n      left: [],\n      right: []\n    };\n    var cursor = {\n      left: 1,\n      right: 1\n    };\n    diff.forEach(function (chunk) {\n      var chunkType = chunk[0];\n      var text = chunk[1];\n      var lines = text.split(\"\\n\").length - 1; // diff-match-patch sometimes returns empty strings at random\n\n      if (text.length === 0) {\n        return;\n      }\n\n      var firstChar = text[0];\n      var lastChar = text[text.length - 1];\n      var linesToHighlight = 0;\n\n      switch (chunkType) {\n        case C.DIFF_EQUAL:\n          cursor.left += lines;\n          cursor.right += lines;\n          break;\n\n        case C.DIFF_DELETE:\n          // If the deletion starts with a newline, push the cursor down to that line\n          if (firstChar === \"\\n\") {\n            cursor.left++;\n            lines--;\n          }\n\n          linesToHighlight = lines; // If the deletion does not include a newline, highlight the same line on the right\n\n          if (linesToHighlight === 0) {\n            diffedLines.right.push({\n              startLine: cursor.right,\n              endLine: cursor.right\n            });\n          } // If the last character is a newline, we don't want to highlight that line\n\n\n          if (lastChar === \"\\n\") {\n            linesToHighlight -= 1;\n          }\n\n          diffedLines.left.push({\n            startLine: cursor.left,\n            endLine: cursor.left + linesToHighlight\n          });\n          cursor.left += lines;\n          break;\n\n        case C.DIFF_INSERT:\n          // If the insertion starts with a newline, push the cursor down to that line\n          if (firstChar === \"\\n\") {\n            cursor.right++;\n            lines--;\n          }\n\n          linesToHighlight = lines; // If the insertion does not include a newline, highlight the same line on the left\n\n          if (linesToHighlight === 0) {\n            diffedLines.left.push({\n              startLine: cursor.left,\n              endLine: cursor.left\n            });\n          } // If the last character is a newline, we don't want to highlight that line\n\n\n          if (lastChar === \"\\n\") {\n            linesToHighlight -= 1;\n          }\n\n          diffedLines.right.push({\n            startLine: cursor.right,\n            endLine: cursor.right + linesToHighlight\n          });\n          cursor.right += lines;\n          break;\n\n        default:\n          throw new Error(\"Diff type was not defined.\");\n      }\n    });\n    return diffedLines;\n  }; // Receives a collection of line numbers and iterates through them to highlight appropriately\n  // Returns an object that tells the render() method how to display the code editors\n\n\n  DiffComponent.prototype.setCodeMarkers = function (diffedLines) {\n    if (diffedLines === void 0) {\n      diffedLines = {\n        left: [],\n        right: []\n      };\n    }\n\n    var codeEditorSettings = [];\n    var newMarkerSet = {\n      left: [],\n      right: []\n    };\n\n    for (var i = 0; i < diffedLines.left.length; i++) {\n      var markerObj = {\n        startRow: diffedLines.left[i].startLine - 1,\n        endRow: diffedLines.left[i].endLine,\n        type: \"text\",\n        className: \"codeMarker\"\n      };\n      newMarkerSet.left.push(markerObj);\n    }\n\n    for (var i = 0; i < diffedLines.right.length; i++) {\n      var markerObj = {\n        startRow: diffedLines.right[i].startLine - 1,\n        endRow: diffedLines.right[i].endLine,\n        type: \"text\",\n        className: \"codeMarker\"\n      };\n      newMarkerSet.right.push(markerObj);\n    }\n\n    codeEditorSettings[0] = newMarkerSet.left;\n    codeEditorSettings[1] = newMarkerSet.right;\n    return codeEditorSettings;\n  };\n\n  DiffComponent.prototype.render = function () {\n    var markers = this.diff();\n    return React.createElement(split_1.default, {\n      name: this.props.name,\n      className: this.props.className,\n      focus: this.props.focus,\n      orientation: this.props.orientation,\n      splits: this.props.splits,\n      mode: this.props.mode,\n      theme: this.props.theme,\n      height: this.props.height,\n      width: this.props.width,\n      fontSize: this.props.fontSize,\n      showGutter: this.props.showGutter,\n      onChange: this.onChange,\n      onPaste: this.props.onPaste,\n      onLoad: this.props.onLoad,\n      onScroll: this.props.onScroll,\n      minLines: this.props.minLines,\n      maxLines: this.props.maxLines,\n      readOnly: this.props.readOnly,\n      highlightActiveLine: this.props.highlightActiveLine,\n      showPrintMargin: this.props.showPrintMargin,\n      tabSize: this.props.tabSize,\n      cursorStart: this.props.cursorStart,\n      editorProps: this.props.editorProps,\n      style: this.props.style,\n      scrollMargin: this.props.scrollMargin,\n      setOptions: this.props.setOptions,\n      wrapEnabled: this.props.wrapEnabled,\n      enableBasicAutocompletion: this.props.enableBasicAutocompletion,\n      enableLiveAutocompletion: this.props.enableLiveAutocompletion,\n      value: this.state.value,\n      markers: markers\n    });\n  };\n\n  DiffComponent.propTypes = {\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    enableBasicAutocompletion: PropTypes.bool,\n    enableLiveAutocompletion: PropTypes.bool,\n    focus: PropTypes.bool,\n    fontSize: PropTypes.number,\n    height: PropTypes.string,\n    highlightActiveLine: PropTypes.bool,\n    maxLines: PropTypes.number,\n    minLines: PropTypes.number,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    onChange: PropTypes.func,\n    orientation: PropTypes.string,\n    readOnly: PropTypes.bool,\n    scrollMargin: PropTypes.array,\n    setOptions: PropTypes.object,\n    showGutter: PropTypes.bool,\n    showPrintMargin: PropTypes.bool,\n    splits: PropTypes.number,\n    style: PropTypes.object,\n    tabSize: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.array,\n    width: PropTypes.string,\n    wrapEnabled: PropTypes.bool\n  };\n  DiffComponent.defaultProps = {\n    cursorStart: 1,\n    editorProps: {},\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false,\n    focus: false,\n    fontSize: 12,\n    height: \"500px\",\n    highlightActiveLine: true,\n    maxLines: null,\n    minLines: null,\n    mode: \"\",\n    name: \"ace-editor\",\n    onLoad: null,\n    onScroll: null,\n    onPaste: null,\n    onChange: null,\n    orientation: \"beside\",\n    readOnly: false,\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    showGutter: true,\n    showPrintMargin: true,\n    splits: 2,\n    style: {},\n    tabSize: 4,\n    theme: \"github\",\n    value: [\"\", \"\"],\n    width: \"500px\",\n    wrapEnabled: true\n  };\n  return DiffComponent;\n}(React.Component);\n\nexports.default = DiffComponent;","map":{"version":3,"mappings":"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","names":["DiffMatchPatch","require","__extends","props","_super","_this","state","value","onChange","bind","diff","DiffComponent","setState","dmp","lhString","rhString","length","diff_main","diff_cleanupSemantic","diffedLines","generateDiffedLines","codeEditorSettings","setCodeMarkers","C","DIFF_EQUAL","DIFF_DELETE","DIFF_INSERT","left","right","cursor","forEach","chunk","chunkType","text","lines","split","firstChar","lastChar","linesToHighlight","push","startLine","endLine","Error","newMarkerSet","i","markerObj","startRow","endRow","type","className","markers","React","split_1","name","focus","orientation","splits","mode","theme","height","width","fontSize","showGutter","onPaste","onLoad","onScroll","minLines","maxLines","readOnly","highlightActiveLine","showPrintMargin","tabSize","cursorStart","editorProps","style","scrollMargin","setOptions","wrapEnabled","enableBasicAutocompletion","enableLiveAutocompletion","PropTypes","number","object","bool","string","func","array","Component"],"sources":["C:\\Users\\gsess\\Documents\\React\\repl\\node_modules\\react-ace\\src\\diff.tsx"],"sourcesContent":["import * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport SplitEditor from \"./split\";\nconst DiffMatchPatch = require(\"diff-match-patch\");\nimport { IEditorProps } from \"./types\";\n\nexport interface IDiffEditorProps {\n  cursorStart?: number;\n  editorProps?: object;\n  enableBasicAutocompletion?: boolean | string[];\n  enableLiveAutocompletion?: boolean | string[];\n  focus?: boolean;\n  fontSize?: number;\n  height?: string;\n  highlightActiveLine?: boolean;\n  maxLines?: number;\n  minLines?: number;\n  mode?: string;\n  name?: string;\n  className?: string;\n  onLoad?: (editor: IEditorProps) => void;\n  onChange?: (value: string[], event?: any) => void;\n  onPaste?: (value: string) => void;\n  onScroll?: (editor: IEditorProps) => void;\n  orientation?: string;\n  readOnly?: boolean;\n  scrollMargin?: number[];\n  setOptions?: object;\n  showGutter?: boolean;\n  showPrintMargin?: boolean;\n  splits?: number;\n  style?: object;\n  tabSize?: number;\n  theme?: string;\n  value?: string[];\n  width?: string;\n  wrapEnabled?: boolean;\n}\n\nexport interface IDiffEditorState {\n  value: string[];\n}\n\nexport default class DiffComponent extends React.Component<\n  IDiffEditorProps,\n  IDiffEditorState\n> {\n  public static propTypes: PropTypes.ValidationMap<IDiffEditorProps> = {\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    enableBasicAutocompletion: PropTypes.bool,\n    enableLiveAutocompletion: PropTypes.bool,\n    focus: PropTypes.bool,\n    fontSize: PropTypes.number,\n    height: PropTypes.string,\n    highlightActiveLine: PropTypes.bool,\n    maxLines: PropTypes.number,\n    minLines: PropTypes.number,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    onChange: PropTypes.func,\n    orientation: PropTypes.string,\n    readOnly: PropTypes.bool,\n    scrollMargin: PropTypes.array,\n    setOptions: PropTypes.object,\n    showGutter: PropTypes.bool,\n    showPrintMargin: PropTypes.bool,\n    splits: PropTypes.number,\n    style: PropTypes.object,\n    tabSize: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.array,\n    width: PropTypes.string,\n    wrapEnabled: PropTypes.bool\n  };\n\n  public static defaultProps: Partial<IDiffEditorProps> = {\n    cursorStart: 1,\n    editorProps: {},\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false,\n    focus: false,\n    fontSize: 12,\n    height: \"500px\",\n    highlightActiveLine: true,\n    maxLines: null,\n    minLines: null,\n    mode: \"\",\n    name: \"ace-editor\",\n    onLoad: null,\n    onScroll: null,\n    onPaste: null,\n    onChange: null,\n    orientation: \"beside\",\n    readOnly: false,\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    showGutter: true,\n    showPrintMargin: true,\n    splits: 2,\n    style: {},\n    tabSize: 4,\n    theme: \"github\",\n    value: [\"\", \"\"],\n    width: \"500px\",\n    wrapEnabled: true\n  };\n  constructor(props: IDiffEditorProps) {\n    super(props);\n    this.state = {\n      value: this.props.value\n    };\n    this.onChange = this.onChange.bind(this);\n    this.diff = this.diff.bind(this);\n  }\n\n  public componentDidUpdate() {\n    const { value } = this.props;\n\n    if (value !== this.state.value) {\n      this.setState({ value });\n    }\n  }\n\n  public onChange(value: any) {\n    this.setState({\n      value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  }\n\n  public diff() {\n    const dmp = new DiffMatchPatch();\n    const lhString = this.state.value[0];\n    const rhString = this.state.value[1];\n\n    if (lhString.length === 0 && rhString.length === 0) {\n      return [];\n    }\n\n    const diff = dmp.diff_main(lhString, rhString);\n    dmp.diff_cleanupSemantic(diff);\n\n    const diffedLines = this.generateDiffedLines(diff);\n    const codeEditorSettings = this.setCodeMarkers(diffedLines);\n    return codeEditorSettings;\n  }\n\n  public generateDiffedLines(diff: any) {\n    const C = {\n      DIFF_EQUAL: 0,\n      DIFF_DELETE: -1,\n      DIFF_INSERT: 1\n    };\n\n    const diffedLines = {\n      left: [] as any[],\n      right: [] as any[]\n    };\n\n    const cursor = {\n      left: 1,\n      right: 1\n    };\n\n    diff.forEach((chunk: any) => {\n      const chunkType = chunk[0];\n      const text = chunk[1];\n      let lines = text.split(\"\\n\").length - 1;\n\n      // diff-match-patch sometimes returns empty strings at random\n      if (text.length === 0) {\n        return;\n      }\n\n      const firstChar = text[0];\n      const lastChar = text[text.length - 1];\n      let linesToHighlight = 0;\n\n      switch (chunkType) {\n        case C.DIFF_EQUAL:\n          cursor.left += lines;\n          cursor.right += lines;\n\n          break;\n        case C.DIFF_DELETE:\n          // If the deletion starts with a newline, push the cursor down to that line\n          if (firstChar === \"\\n\") {\n            cursor.left++;\n            lines--;\n          }\n\n          linesToHighlight = lines;\n\n          // If the deletion does not include a newline, highlight the same line on the right\n          if (linesToHighlight === 0) {\n            diffedLines.right.push({\n              startLine: cursor.right,\n              endLine: cursor.right\n            });\n          }\n\n          // If the last character is a newline, we don't want to highlight that line\n          if (lastChar === \"\\n\") {\n            linesToHighlight -= 1;\n          }\n\n          diffedLines.left.push({\n            startLine: cursor.left,\n            endLine: cursor.left + linesToHighlight\n          });\n\n          cursor.left += lines;\n          break;\n        case C.DIFF_INSERT:\n          // If the insertion starts with a newline, push the cursor down to that line\n          if (firstChar === \"\\n\") {\n            cursor.right++;\n            lines--;\n          }\n\n          linesToHighlight = lines;\n\n          // If the insertion does not include a newline, highlight the same line on the left\n          if (linesToHighlight === 0) {\n            diffedLines.left.push({\n              startLine: cursor.left,\n              endLine: cursor.left\n            });\n          }\n\n          // If the last character is a newline, we don't want to highlight that line\n          if (lastChar === \"\\n\") {\n            linesToHighlight -= 1;\n          }\n\n          diffedLines.right.push({\n            startLine: cursor.right,\n            endLine: cursor.right + linesToHighlight\n          });\n\n          cursor.right += lines;\n          break;\n        default:\n          throw new Error(\"Diff type was not defined.\");\n      }\n    });\n    return diffedLines;\n  }\n\n  // Receives a collection of line numbers and iterates through them to highlight appropriately\n  // Returns an object that tells the render() method how to display the code editors\n  public setCodeMarkers(diffedLines: any = { left: [], right: [] }) {\n    const codeEditorSettings = [];\n\n    const newMarkerSet = {\n      left: [] as any[],\n      right: [] as any[]\n    };\n\n    for (let i = 0; i < diffedLines.left.length; i++) {\n      const markerObj = {\n        startRow: diffedLines.left[i].startLine - 1,\n        endRow: diffedLines.left[i].endLine,\n        type: \"text\",\n        className: \"codeMarker\"\n      };\n      newMarkerSet.left.push(markerObj);\n    }\n\n    for (let i = 0; i < diffedLines.right.length; i++) {\n      const markerObj = {\n        startRow: diffedLines.right[i].startLine - 1,\n        endRow: diffedLines.right[i].endLine,\n        type: \"text\",\n        className: \"codeMarker\"\n      };\n      newMarkerSet.right.push(markerObj);\n    }\n\n    codeEditorSettings[0] = newMarkerSet.left;\n    codeEditorSettings[1] = newMarkerSet.right;\n\n    return codeEditorSettings;\n  }\n\n  public render() {\n    const markers = this.diff();\n    return (\n      <SplitEditor\n        name={this.props.name}\n        className={this.props.className}\n        focus={this.props.focus}\n        orientation={this.props.orientation}\n        splits={this.props.splits}\n        mode={this.props.mode}\n        theme={this.props.theme}\n        height={this.props.height}\n        width={this.props.width}\n        fontSize={this.props.fontSize}\n        showGutter={this.props.showGutter}\n        onChange={this.onChange}\n        onPaste={this.props.onPaste}\n        onLoad={this.props.onLoad}\n        onScroll={this.props.onScroll}\n        minLines={this.props.minLines}\n        maxLines={this.props.maxLines}\n        readOnly={this.props.readOnly}\n        highlightActiveLine={this.props.highlightActiveLine}\n        showPrintMargin={this.props.showPrintMargin}\n        tabSize={this.props.tabSize}\n        cursorStart={this.props.cursorStart}\n        editorProps={this.props.editorProps}\n        style={this.props.style}\n        scrollMargin={this.props.scrollMargin}\n        setOptions={this.props.setOptions}\n        wrapEnabled={this.props.wrapEnabled}\n        enableBasicAutocompletion={this.props.enableBasicAutocompletion}\n        enableLiveAutocompletion={this.props.enableLiveAutocompletion}\n        value={this.state.value}\n        markers={markers}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}